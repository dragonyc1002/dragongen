{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nconst index = require('./index-1b96e428.js');\n\nconst options = require('./options-2e2e9e25.js');\n\nconst discordActionRowCss = \".discord-action-row{display:flex;flex-wrap:nowrap}\";\nconst DiscordActionRow = class {\n  constructor(hostRef) {\n    index.registerInstance(this, hostRef);\n  }\n\n  render() {\n    return index.h(index.Host, {\n      class: \"discord-action-row\"\n    }, index.h(\"slot\", null));\n  }\n\n};\nDiscordActionRow.style = discordActionRowCss;\n\nconst padZeroes = value => {\n  const [month, day, year] = value.split('/');\n  return `${month.padStart(2, '0')}/${day.padStart(2, '0')}/${year}`;\n};\n\nconst formatDate = value => {\n  if (!(value instanceof Date)) return value;\n  return padZeroes(`${value.getMonth() + 1}/${value.getDate()}/${value.getFullYear()}`);\n};\n\nconst formatTime = function (value) {\n  let hour24 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (!(value instanceof Date)) return value;\n  if (hour24) return `${value.getHours()}:${value.getMinutes().toString().padStart(2, '0')}`;\n  const hour = value.getHours() % 12 || 12;\n  const meridiem = value.getHours() < 12 ? 'AM' : 'PM';\n  return `${hour}:${value.getMinutes().toString().padStart(2, '0')} ${meridiem}`;\n};\n\nconst handleTimestamp = function (value) {\n  let useTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let hour24 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (!(value instanceof Date) && typeof value !== 'string') {\n    throw new TypeError('Timestamp prop must be a Date object or a string.');\n  }\n\n  return useTime ? formatTime(value, hour24) : formatDate(value);\n};\n\nconst findSlotElement = (elements, name) => {\n  return Array.from(elements).find(child => (child === null || child === void 0 ? void 0 : child.slot) === name);\n};\n\nconst IMAGE_EXTENSION = /\\.(bmp|jpe?g|png|gif|webp|tiff)$/i;\n\nconst validateImageExtension = url => {\n  if (!IMAGE_EXTENSION.test(url)) throw new Error(`The url of an image for discord-attachment should match the regex ${IMAGE_EXTENSION}`);\n};\n\nconst discordAttachmentCss = \".discord-attachment{color:#dcddde;display:flex;font-size:13px;line-height:150%;margin-bottom:8px;margin-top:8px}.discord-attachment .discord-image-wrapper{display:block;position:relative;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;overflow:hidden;border-radius:3px}\";\nconst DiscordAttachment = class {\n  constructor(hostRef) {\n    index.registerInstance(this, hostRef);\n    /**\r\n     * The alt text to show in case the image was unable to load\r\n     * @default 'discord attachment'\r\n     */\n\n    this.alt = 'discord attachment';\n  }\n\n  componentWillRender() {\n    validateImageExtension(this.url);\n  }\n\n  render() {\n    return index.h(index.Host, {\n      class: \"discord-attachment\"\n    }, index.h(\"div\", {\n      class: \"discord-image-wrapper\",\n      style: {\n        height: `${this.height}px`,\n        width: `${this.width}px`\n      }\n    }, index.h(\"img\", {\n      alt: this.alt,\n      src: this.url,\n      height: this.height,\n      width: this.width\n    })));\n  }\n\n  get el() {\n    return index.getElement(this);\n  }\n\n};\nDiscordAttachment.style = discordAttachmentCss;\nconst discordAttachmentsCss = \".discord-message .discord-attachments{display:grid;grid-auto-flow:row;grid-row-gap:0.25rem;text-indent:0;min-height:0;min-width:0;padding-top:0.125rem;padding-bottom:0.125rem;position:relative}.discord-message .discord-attachments>*{justify-self:start;-ms-flex-item-align:start;align-self:start}\";\nconst DiscordAttachments = class {\n  constructor(hostRef) {\n    index.registerInstance(this, hostRef);\n  }\n\n  render() {\n    return index.h(index.Host, {\n      class: \"discord-attachments\"\n    }, index.h(\"slot\", null));\n  }\n\n};\nDiscordAttachments.style = discordAttachmentsCss;\n\nfunction Fragment(_props, children) {\n  return [...children];\n}\n\nfunction LaunchIcon(props) {\n  return index.h(\"svg\", Object.assign({}, props, {\n    \"aria-hidden\": \"false\",\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 24 24\"\n  }), index.h(\"path\", {\n    fill: \"currentColor\",\n    d: \"M10 5V3H5.375C4.06519 3 3 4.06519 3 5.375V18.625C3 19.936 4.06519 21 5.375 21H18.625C19.936 21 21 19.936 21 18.625V14H19V19H5V5H10Z\"\n  }), index.h(\"path\", {\n    fill: \"currentColor\",\n    d: \"M21 2.99902H14V4.99902H17.586L9.29297 13.292L10.707 14.706L19 6.41302V9.99902H21V2.99902Z\"\n  }));\n}\n\nconst discordButtonCss = \".discord-button{display:flex;justify-content:center;align-items:center;cursor:pointer;margin:4px 8px 4px 0;padding:2px 16px;width:auto;height:32px;min-width:60px;min-height:32px;-webkit-transition:background-color 0.17s ease, color 0.17s ease;transition:background-color 0.17s ease, color 0.17s ease;border-radius:3px;font-size:14px;font-weight:500;line-height:16px;text-decoration:none !important}.discord-button.discord-button-success{color:#fff;background-color:#3ba55d}.discord-button.discord-button-success.discord-button-hoverable:hover{background-color:#2d7d46}.discord-button.discord-button-destructive{color:#fff;background-color:#ed4245}.discord-button.discord-button-destructive.discord-button-hoverable:hover{background-color:#c03537}.discord-button.discord-button-primary{color:#fff;background-color:#5865f2}.discord-button.discord-button-primary.discord-button-hoverable:hover{background-color:#4752c4}.discord-button.discord-button-secondary{color:#fff;background-color:#4f545c}.discord-button.discord-button-secondary.discord-button-hoverable:hover{background-color:#5d6269}.discord-button.discord-button-disabled{cursor:not-allowed;opacity:0.5}.discord-button .discord-button-launch{margin-left:8px}.discord-button .discord-button-emoji{margin-right:4px;object-fit:contain;width:1.375em;height:1.375em;vertical-align:bottom}\";\nconst DiscordButton = class {\n  constructor(hostRef) {\n    index.registerInstance(this, hostRef);\n    /**\r\n     * The name of the emoji used in the button.\r\n     */\n\n    this.emojiName = 'emoji';\n    /**\r\n     * Whether to show the button as disabled.\r\n     */\n\n    this.disabled = false;\n    /**\r\n     * The type of button this is, this will change the color of the button.\r\n     * Valid values: `primary`, `secondary`, `success`, `destructive`.\r\n     */\n\n    this.type = 'secondary';\n  }\n\n  handleType(value) {\n    if (typeof value !== 'string') {\n      throw new TypeError('DiscordButton `type` prop must be a string.');\n    } else if (!['primary', 'secondary', 'success', 'destructive'].includes(value)) {\n      throw new RangeError(\"DiscordButton `type` prop must be one of: 'primary', 'secondary', 'success', 'destructive'\");\n    }\n  }\n\n  render() {\n    const parent = this.el.parentElement;\n\n    if (parent.tagName.toLowerCase() !== 'discord-action-row') {\n      throw new Error('All <discord-button> components must be direct children of <discord-action-row>.');\n    }\n\n    const content = index.h(Fragment, null, this.emoji && index.h(\"img\", {\n      src: this.emoji,\n      alt: this.emojiName,\n      draggable: false,\n      class: \"discord-button-emoji\"\n    }), index.h(\"span\", null, index.h(\"slot\", null)), this.url && index.h(LaunchIcon, {\n      class: \"discord-button-launch\"\n    }));\n    return this.url && !this.disabled ? index.h(\"a\", {\n      class: \"discord-button discord-button-secondary\",\n      href: this.url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }, content) : index.h(index.Host, {\n      class: `discord-button discord-button-${this.type} discord-button-${this.disabled ? 'disabled' : 'hoverable'}`\n    }, content);\n  }\n\n  get el() {\n    return index.getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"type\": [\"handleType\"]\n    };\n  }\n\n};\nDiscordButton.style = discordButtonCss;\n\nfunction CommandIcon(props) {\n  return index.h(\"svg\", Object.assign({}, props, {\n    width: \"6\",\n    height: \"10\",\n    viewBox: \"0 0 6 10\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }), index.h(\"path\", {\n    d: \"M4.61241 0L6 0.845294L1.38759 10L0 9.15471L4.61241 0Z\",\n    fill: \"currentColor\"\n  }));\n}\n\nconst discordCommandCss = \".discord-replied-message.discord-executed-command .discord-command-name{color:#00aff4;font-weight:500}.discord-replied-message.discord-executed-command .discord-command-name:hover{color:#00aff4;text-decoration:underline}.discord-replied-message.discord-executed-command .discord-replied-message-username{margin-right:0}.discord-replied-message{color:#b9bbbe;display:flex;font-size:0.875rem;font-family:Whitney, Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif;padding-top:2px;margin-left:56px;margin-bottom:4px;align-items:center;line-height:1.125rem;position:relative;white-space:pre;user-select:none}.discord-light-theme .discord-replied-message{color:#4f5660}.discord-compact-mode .discord-replied-message{margin-left:62px;margin-bottom:0}.discord-replied-message:before{content:'';display:block;position:absolute;top:50%;right:100%;bottom:0;left:-36px;margin-right:4px;margin-top:-1px;margin-left:-1px;margin-bottom:-2px;border-left:2px solid #4f545c;border-bottom:0 solid #4f545c;border-right:0 solid #4f545c;border-top:2px solid #4f545c;border-top-left-radius:6px}.discord-light-theme .discord-replied-message:before{border-color:#747f8d}.discord-replied-message .discord-replied-message-avatar,.discord-replied-message .discord-reply-badge{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:16px;height:16px;border-radius:50%;user-select:none;margin-right:0.25rem}.discord-replied-message .discord-reply-badge{display:flex;align-items:center;justify-content:center;color:#b9bbbe;background:#202225}.discord-light-theme .discord-replied-message .discord-reply-badge{color:#4f5660;background:#e3e5e8}.discord-replied-message .discord-application-tag{background-color:hsl(235, 85.6%, 64.7%);color:#fff;font-size:0.625rem;margin-right:0.25rem;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-replied-message .discord-application-tag .discord-application-tag-verified{width:0.9375rem;height:0.9375rem;margin-left:-0.1rem}.discord-replied-message .discord-replied-message-username{flex-shrink:0;font-size:inherit;line-height:inherit;margin-right:0.25rem;opacity:0.64}.discord-replied-message .discord-replied-message-content{color:inherit;font-size:inherit;line-height:inherit;white-space:pre;text-overflow:ellipsis;user-select:none;cursor:pointer}.discord-replied-message .discord-replied-message-content:hover{color:#fff}.discord-light-theme .discord-replied-message .discord-replied-message-content:hover{color:#000}.discord-replied-message .discord-replied-message-content .discord-message-edited{margin-left:0.25rem}.discord-replied-message .discord-replied-message-content-icon{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:20px;height:20px;margin-left:4px}.discord-message .discord-author-info{display:inline-flex;align-items:center;font-size:15px}.discord-message .discord-author-info .discord-author-username{color:#fff;font-size:1.1em;font-weight:500;letter-spacing:0.5px}.discord-light-theme .discord-message .discord-author-info .discord-author-username{color:#23262a}.discord-message .discord-author-info .discord-application-tag{background-color:#5865f2;color:#fff;font-size:0.65em;margin-left:5px;border-radius:3px;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-message .discord-author-info .discord-application-tag-verified{display:inline-block;width:0.9375rem;height:0.9375rem;margin-left:-0.25rem}.discord-compact-mode .discord-message .discord-author-info .discord-author-username{margin-left:8px;margin-right:4px}.discord-compact-mode .discord-message .discord-author-info .discord-application-tag{margin-left:0;margin-left:5px;margin-right:5px;padding-left:3px;padding-right:3px}\";\nconst DiscordCommand = class {\n  constructor(hostRef) {\n    index.registerInstance(this, hostRef);\n    /**\r\n     * The message author's username.\r\n     * @default 'User'\r\n     */\n\n    this.author = 'User';\n  }\n\n  render() {\n    var _a, _b, _c;\n\n    const parent = this.el.parentElement;\n\n    if (parent.tagName.toLowerCase() !== 'discord-message') {\n      throw new Error('All <discord-command> components must be direct children of <discord-message>.');\n    }\n\n    const resolveAvatar = avatar => {\n      var _a, _b;\n\n      return (_b = (_a = options.avatars[avatar]) !== null && _a !== void 0 ? _a : avatar) !== null && _b !== void 0 ? _b : options.avatars.default;\n    };\n\n    const defaultData = {\n      author: this.author,\n      bot: false,\n      verified: false,\n      server: false,\n      roleColor: this.roleColor\n    };\n    const profileData = (_a = Reflect.get(options.profiles, this.profile)) !== null && _a !== void 0 ? _a : {};\n    const profile = Object.assign(Object.assign(Object.assign({}, defaultData), profileData), {\n      avatar: resolveAvatar((_b = profileData.avatar) !== null && _b !== void 0 ? _b : this.avatar)\n    });\n    const messageParent = parent.parentElement;\n    return index.h(index.Host, {\n      class: \"discord-replied-message discord-executed-command\"\n    }, messageParent.compactMode ? index.h(\"div\", {\n      class: \"discord-reply-badge\"\n    }, index.h(CommandIcon, null)) : index.h(\"img\", {\n      class: \"discord-replied-message-avatar\",\n      src: profile.avatar,\n      alt: profile.author\n    }), index.h(\"span\", {\n      class: \"discord-replied-message-username\",\n      style: {\n        color: (_c = profile.roleColor) !== null && _c !== void 0 ? _c : ''\n      }\n    }, profile.author), ' used ', index.h(\"div\", {\n      class: \"discord-replied-message-content discord-command-name\"\n    }, this.command));\n  }\n\n  get el() {\n    return index.getElement(this);\n  }\n\n};\nDiscordCommand.style = discordCommandCss;\n\nfunction toVal(mix) {\n  var k,\n      y,\n      str = '';\n\n  if (typeof mix === 'string' || typeof mix === 'number') {\n    str += mix;\n  } else if (typeof mix === 'object') {\n    if (Array.isArray(mix)) {\n      for (k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n          if (y = toVal(mix[k])) {\n            str && (str += ' ');\n            str += y;\n          }\n        }\n      }\n    } else {\n      for (k in mix) {\n        if (mix[k]) {\n          str && (str += ' ');\n          str += k;\n        }\n      }\n    }\n  }\n\n  return str;\n}\n\nfunction clsx() {\n  var i = 0,\n      tmp,\n      x,\n      str = '';\n\n  while (i < arguments.length) {\n    if (tmp = arguments[i++]) {\n      if (x = toVal(tmp)) {\n        str && (str += ' ');\n        str += x;\n      }\n    }\n  }\n\n  return str;\n}\n\nconst discordEmbedCss = \".discord-embed{color:#dcddde;display:flex;font-size:13px;line-height:150%;margin-bottom:8px;margin-top:8px}.discord-light-theme .discord-embed{color:#2e3338}.discord-embed .discord-left-border{background-color:#202225;border-radius:4px 0 0 4px;flex-shrink:0;width:4px}.discord-light-theme .discord-embed .discord-left-border{background-color:#e3e5e8}.discord-embed .discord-embed-root{display:grid;grid-auto-flow:row;grid-row-gap:0.25rem;min-height:0;min-width:0;text-indent:0}.discord-embed .discord-embed-wrapper{background-color:#2f3136;max-width:520px;border:1px solid rgba(46, 48, 54, 0.6);border-radius:0 4px 4px 0;justify-self:start;align-self:start;display:grid;box-sizing:border-box}.discord-light-theme .discord-embed .discord-embed-wrapper{background-color:rgba(249, 249, 249, 0.3);border-color:rgba(205, 205, 205, 0.3)}.discord-embed .discord-embed-wrapper .discord-embed-grid{display:inline-grid;grid-template-columns:auto -webkit-min-content;grid-template-columns:auto min-content;grid-template-columns:auto;grid-template-rows:auto;padding:0.5rem 1rem 1rem 0.75rem}.discord-embed .discord-embed-thumbnail{border-radius:4px;flex-shrink:0;grid-column:2/2;grid-row:1/8;justify-self:end;margin-left:16px;margin-top:8px;max-height:80px;max-width:80px;object-fit:contain;object-position:top center}.discord-embed .discord-embed-author{-webkit-box-align:center;align-items:center;color:#fff;font-size:0.875rem;display:flex;font-weight:500;grid-column:1 / 1;margin-top:8px;min-width:0}.discord-light-theme .discord-embed .discord-embed-author{color:#4f545c}.discord-embed .discord-embed-author a{color:#fff;font-weight:700}.discord-light-theme .discord-embed .discord-embed-author a{color:#4f545c}.discord-embed .discord-embed-author .discord-author-image{border-radius:50%;height:24px;margin-right:8px;width:24px}.discord-embed .discord-embed-provider{font-size:0.75rem;line-height:1rem;font-weight:400;grid-column:1/1;margin-top:8px;unicode-bidi:plaintext;text-align:left}.discord-light-theme .discord-embed .discord-embed-provider{color:#4f545c}.discord-embed .discord-embed-title{-webkit-box-align:center;align-items:center;color:#fff;display:inline-block;font-size:1rem;font-weight:600;grid-column:1 / 1;margin-top:8px;min-width:0}.discord-embed .discord-embed-title a{color:#00b0f4;font-weight:600}.discord-embed .discord-embed-description{font-size:0.875rem;font-weight:400;grid-column:1/1;line-height:1.125rem;margin-top:8px;min-width:0;white-space:pre-line}.discord-embed .discord-embed-image{border-radius:4px;max-width:100%}.discord-embed .discord-embed-media{border-radius:4px;contain:paint;display:block;grid-column:1/1;margin-top:16px}.discord-embed .discord-embed-media.discord-embed-media-video{height:225px}.discord-embed .discord-embed.media .discord-embed-image{overflow:hidden;position:relative;user-select:text}.discord-embed .discord-embed-media .discord-embed-video{-webkit-box-align:center;-webkit-box-pack:center;align-items:center;border-radius:0;cursor:pointer;display:flex;height:100%;justify-content:center;max-height:100%;width:100%;width:400px;height:225px;left:0px;top:0px}.discord-embed .discord-embed-footer{-webkit-box-align:center;align-items:center;color:#fff;display:flex;font-size:0.85em;grid-column:1/3;grid-row:auto/auto;margin-top:8px}.discord-embed .discord-embed-footer .discord-footer-image{border-radius:50%;flex-shrink:0;height:20px;margin-right:8px;width:20px}.discord-embed .discord-embed-footer .discord-footer-separator{color:#fff;font-weight:700;margin:0 4px}.discord-light-theme .discord-embed .discord-embed-footer .discord-footer-separator{color:#e4e4e4}\";\nconst DiscordEmbed = class {\n  constructor(hostRef) {\n    index.registerInstance(this, hostRef);\n  }\n\n  updateTimestamp(value) {\n    if (!value || isNaN(new Date(value).getTime())) return null;\n    return handleTimestamp(new Date(value));\n  }\n\n  componentWillRender() {\n    this.timestamp = this.updateTimestamp(this.timestamp);\n  }\n\n  render() {\n    const footerSlot = findSlotElement(this.el.children, 'footer');\n    return index.h(\"div\", {\n      class: \"discord-embed\"\n    }, index.h(\"div\", {\n      style: {\n        'background-color': this.color\n      },\n      class: \"discord-left-border\"\n    }), index.h(\"div\", {\n      class: \"discord-embed-root\"\n    }, index.h(\"div\", {\n      class: \"discord-embed-wrapper\"\n    }, index.h(\"div\", {\n      class: \"discord-embed-grid\"\n    }, this.provider && index.h(\"div\", {\n      class: \"discord-embed-provider\"\n    }, index.h(Fragment, null, this.provider)), this.authorName && index.h(\"div\", {\n      class: \"discord-embed-author\"\n    }, this.authorImage ? index.h(\"img\", {\n      src: this.authorImage,\n      alt: \"\",\n      class: \"discord-author-image\"\n    }) : '', this.authorUrl ? index.h(\"a\", {\n      href: this.authorUrl,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }, this.authorName) : index.h(Fragment, null, this.authorName)), this.embedTitle && index.h(\"div\", {\n      class: \"discord-embed-title\"\n    }, this.url ? index.h(\"a\", {\n      href: this.url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }, this.embedTitle) : index.h(Fragment, null, this.embedTitle)), index.h(\"div\", {\n      class: \"discord-embed-description\"\n    }, index.h(\"slot\", null)), index.h(\"slot\", {\n      name: \"fields\"\n    }), this.image || this.video ? index.h(\"div\", {\n      class: clsx('discord-embed-media', {\n        'discord-embed-media-video': Boolean(this.video)\n      })\n    }, this.renderMedia()) : null, this.thumbnail ? index.h(\"img\", {\n      src: this.thumbnail,\n      alt: \"\",\n      class: \"discord-embed-thumbnail\"\n    }) : '', (footerSlot || this.timestamp) && index.h(\"div\", {\n      class: \"discord-embed-footer\"\n    }, footerSlot && this.footerImage ? index.h(\"img\", {\n      src: this.footerImage,\n      alt: \"\",\n      class: \"discord-footer-image\"\n    }) : '', index.h(Fragment, null, index.h(\"slot\", {\n      name: \"footer\"\n    }), footerSlot && this.timestamp ? index.h(\"span\", {\n      class: \"discord-footer-separator\"\n    }, \"\\u2022\") : '', this.timestamp ? index.h(Fragment, null, this.timestamp) : ''))))));\n  }\n\n  renderMedia() {\n    if (this.video) {\n      return index.h(\"video\", {\n        controls: true,\n        muted: true,\n        preload: \"none\",\n        poster: this.image,\n        src: this.video,\n        height: \"225\",\n        width: \"400\",\n        class: \"discord-embed-video\"\n      }, index.h(\"img\", {\n        src: this.image,\n        alt: \"Discord embed media\",\n        class: \"discord-embed-image\"\n      }));\n    } else if (this.image) {\n      return index.h(\"img\", {\n        src: this.image,\n        alt: \"Discord embed media\",\n        class: \"discord-embed-image\"\n      });\n    }\n\n    return null;\n  }\n\n  get el() {\n    return index.getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"timestamp\": [\"updateTimestamp\"]\n    };\n  }\n\n};\nDiscordEmbed.style = discordEmbedCss;\nconst discordEmbedFieldCss = \".discord-embed .discord-embed-field{font-size:0.875rem;line-height:1.125rem;min-width:0;font-weight:400;grid-column:1/13}.discord-embed .discord-embed-field .discord-field-title{color:#ffffff;font-weight:700;font-size:0.875rem;line-height:1.125rem;min-width:0;margin-bottom:2px}.discord-embed .discord-embed-field.discord-inline-field{flex-grow:1;flex-basis:auto;min-width:150px}.discord-light-theme .discord-embed .discord-embed-field .discord-field-title{color:#747f8d}.discord-embed-inline-field-3{grid-column:9/13 !important}.discord-embed-inline-field-2{grid-column:5/9 !important}.discord-embed-inline-field-1{grid-column:1/5 !important}\";\nconst DiscordEmbedField = class {\n  constructor(hostRef) {\n    index.registerInstance(this, hostRef);\n    /**\r\n     * Whether this field should be displayed inline or not.\r\n     */\n\n    this.inline = false;\n    /**\r\n     * The index of this inline field\r\n     * @remark This defines the position of this inline field. 1 is left, 2 is middle and 3 is right.\r\n     * @oneof [1, 2, 3]\r\n     * @default 1\r\n     */\n\n    this.inlineIndex = 1;\n    this.validInlineIndices = new Set([1, 2, 3]);\n  }\n\n  checkInlineIndex(value) {\n    if (!this.validInlineIndices.has(Number(value))) throw new RangeError('DiscordEmbedField `inlineIndex` prop must be one of: 1, 2, or 3');\n  }\n\n  componentWillRender() {\n    this.checkInlineIndex(this.inlineIndex);\n  }\n\n  render() {\n    const parent = this.el.parentElement;\n\n    if (parent.tagName.toLowerCase() !== 'discord-embed-fields') {\n      throw new SyntaxError('All <discord-embed-field> components must be direct children of <discord-embed-fields>.');\n    }\n\n    return index.h(index.Host, {\n      class: clsx({\n        'discord-embed-inline-field': this.inline,\n        'discord-embed-inline-field-1': this.inline && this.inlineIndex === 1,\n        'discord-embed-inline-field-2': this.inline && this.inlineIndex === 2,\n        'discord-embed-inline-field-3': this.inline && this.inlineIndex === 3\n      }, 'discord-embed-field')\n    }, index.h(\"div\", {\n      class: \"discord-field-title\"\n    }, this.fieldTitle), index.h(\"slot\", null));\n  }\n\n  get el() {\n    return index.getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"inlineIndex\": [\"checkInlineIndex\"]\n    };\n  }\n\n};\nDiscordEmbedField.style = discordEmbedFieldCss;\nconst discordEmbedFieldsCss = \".discord-embed .discord-embed-fields{display:grid;grid-column:1/1;margin-top:8px;grid-gap:8px}\";\nconst DiscordEmbedFields = class {\n  constructor(hostRef) {\n    index.registerInstance(this, hostRef);\n  }\n\n  render() {\n    return index.h(index.Host, {\n      class: \"discord-embed-fields\"\n    }, index.h(\"slot\", null));\n  }\n\n};\nDiscordEmbedFields.style = discordEmbedFieldsCss;\n\nfunction GuildBadge(props) {\n  return index.h(\"svg\", Object.assign({}, props, {\n    \"aria-hidden\": \"false\",\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 16 15.2\"\n  }), index.h(\"path\", {\n    fill: \"currentColor\",\n    \"fill-rule\": \"evenodd\",\n    d: \"m16 7.6c0 .79-1.28 1.38-1.52 2.09s.44 2 0 2.59-1.84.35-2.46.8-.79 1.84-1.54 2.09-1.67-.8-2.47-.8-1.75 1-2.47.8-.92-1.64-1.54-2.09-2-.18-2.46-.8.23-1.84 0-2.59-1.54-1.3-1.54-2.09 1.28-1.38 1.52-2.09-.44-2 0-2.59 1.85-.35 2.48-.8.78-1.84 1.53-2.12 1.67.83 2.47.83 1.75-1 2.47-.8.91 1.64 1.53 2.09 2 .18 2.46.8-.23 1.84 0 2.59 1.54 1.3 1.54 2.09z\"\n  }));\n}\n\nconst PartnerBadgeOverlay = () => index.h(\"svg\", {\n  \"aria-hidden\": \"false\",\n  width: \"16\",\n  height: \"16\",\n  viewBox: \"0 0 16 16\"\n}, index.h(\"path\", {\n  d: \"M10.5906 6.39993L9.19223 7.29993C8.99246 7.39993 8.89258 7.39993 8.69281 7.29993C8.59293 7.19993 8.39317 7.09993 8.29328 6.99993C7.89375 6.89993 7.5941 6.99993 7.29445 7.19993L6.79504 7.49993L4.29797 9.19993C3.69867 9.49993 2.99949 9.39993 2.69984 8.79993C2.30031 8.29993 2.50008 7.59993 2.99949 7.19993L5.99598 5.19993C6.79504 4.69993 7.79387 4.49993 8.69281 4.69993C9.49188 4.89993 10.0912 5.29993 10.5906 5.89993C10.7904 6.09993 10.6905 6.29993 10.5906 6.39993Z\",\n  fill: \"currentColor\"\n}), index.h(\"path\", {\n  d: \"M13.4871 7.79985C13.4871 8.19985 13.2874 8.59985 12.9877 8.79985L9.89135 10.7999C9.29206 11.1999 8.69276 11.3999 7.99358 11.3999C7.69393 11.3999 7.49417 11.3999 7.19452 11.2999C6.39545 11.0999 5.79616 10.6999 5.29674 10.0999C5.19686 9.89985 5.29674 9.69985 5.39663 9.59985L6.79499 8.69985C6.89487 8.59985 7.09463 8.59985 7.19452 8.69985C7.39428 8.79985 7.59405 8.89985 7.69393 8.99985C8.09346 8.99985 8.39311 8.99985 8.69276 8.79985L9.39194 8.39985L11.3896 6.99985L11.6892 6.79985C12.1887 6.49985 12.9877 6.59985 13.2874 7.09985C13.4871 7.39985 13.4871 7.59985 13.4871 7.79985Z\",\n  fill: \"currentColor\"\n}));\n\nconst VerifiedBadgeOverlay = () => index.h(\"svg\", {\n  \"aria-hidden\": \"false\",\n  width: \"16\",\n  height: \"16\",\n  viewBox: \"0 0 16 15.2\"\n}, index.h(\"path\", {\n  d: \"M7.4,11.17,4,8.62,5,7.26l2,1.53L10.64,4l1.36,1Z\",\n  fill: \"currentColor\"\n}));\n\nconst discordInviteCss = \".discord-invite{background-color:#2f3136;border-radius:4px;padding:16px;width:432px}.discord-light-theme .discord-invite{background-color:#f2f3f5}.discord-invite .discord-invite-header{font-weight:700;font-size:12px;line-height:16px;margin-bottom:12px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;text-transform:uppercase;color:#b9bbbe}.discord-light-theme .discord-invite .discord-invite-header{color:#4f5660}.discord-invite .discord-invite-root{display:flex;flex-flow:row nowrap}.discord-invite .discord-invite-icon{background-color:#36393f;border-radius:15px;margin-right:16px;-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:50px;height:50px}.discord-light-theme .discord-invite .discord-invite-icon{background-color:#fff}.discord-invite .discord-invite-info{font-family:WhitneyMedium, Whitney, Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif;display:flex;flex:1 1 auto;flex-direction:column;flex-wrap:nowrap;align-items:stretch;justify-content:center}.discord-invite .discord-invite-title{white-space:nowrap;text-overflow:ellipsis;overflow:hidden;margin-bottom:2px;color:white;font-size:16px;line-height:20px;font-weight:700;display:flex;flex-direction:row}.discord-light-theme .discord-invite .discord-invite-title{color:#060607}.discord-invite .discord-invite-name{flex:1 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.discord-invite .discord-invite-counts{display:flex;align-items:center;font-size:14px;font-weight:600;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;color:#b9bbbe;line-height:16px}.discord-invite .discord-invite-status{display:block;margin-right:4px;width:8px;height:8px;border-radius:50%;background-color:#747f8d}.discord-invite .discord-invite-status-online{background-color:#3ba55d}.discord-invite .discord-invite-count{-webkit-box-flex:0;-ms-flex:0 1 auto;flex:0 1 auto;margin-right:8px;color:#b9bbbe;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.discord-invite .discord-invite-join{display:flex;justify-content:center;align-items:center;height:40px;padding:0 20px;align-self:center;margin-left:10px;-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;line-height:20px;border-radius:3px;font-size:14px;font-weight:600;color:white !important;background-color:#3ba55d;-webkit-transition:background-color 0.17s ease;transition:background-color 0.17s ease}.discord-invite .discord-invite-join:hover{background-color:#2d7d46;text-decoration:none}.discord-invite .discord-invite-badge{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;margin-right:8px;width:16px;height:16px;align-self:center;position:relative}.discord-invite .discord-invite-badge-verified{color:#3ba55d}.discord-invite .discord-invite-badge-partnered{color:#5865f2}.discord-invite .discord-invite-badge-container{position:absolute;top:-0.05px;left:0.05px;right:0;bottom:0;display:flex;align-items:center;justify-content:center;pointer-events:none;color:white}.discord-light-theme .discord-invite .discord-invite-counts,.discord-light-theme .discord-invite .discord-invite-count{color:#4f5660}\";\nconst DiscordInvite = class {\n  constructor(hostRef) {\n    index.registerInstance(this, hostRef);\n    /**\r\n     * The server icon to display for the invite.\r\n     */\n\n    this.icon = options.defaultDiscordAvatars.blue;\n    /**\r\n     * The server's name.\r\n     * @default 'Discord Server'\r\n     */\n\n    this.name = 'Discord Server';\n    /**\r\n     * The number of members online on the server.\r\n     * @default 0\r\n     */\n\n    this.online = 0;\n    /**\r\n     * The number of members on the server.\r\n     * @default 0\r\n     */\n\n    this.members = 0;\n    /**\r\n     * Whether the server is verified.\r\n     * Only works if `partnered` is `false` or `undefined`.\r\n     */\n\n    this.verified = false;\n    /**\r\n     * Whether the server is partnered.\r\n     * Only works if `verified` is `false` or `undefined`.\r\n     */\n\n    this.partnered = false;\n  }\n\n  render() {\n    return index.h(\"div\", {\n      class: \"discord-invite\"\n    }, index.h(\"div\", {\n      class: \"discord-invite-header\"\n    }, \"You've been invited to join a server\"), index.h(\"div\", {\n      class: \"discord-invite-root\"\n    }, index.h(\"img\", {\n      class: \"discord-invite-icon\",\n      src: this.icon,\n      alt: this.name\n    }), index.h(\"div\", {\n      class: \"discord-invite-info\"\n    }, index.h(\"div\", {\n      class: \"discord-invite-title\"\n    }, (this.verified && !this.partnered || !this.verified && this.partnered) && index.h(\"div\", {\n      class: \"discord-invite-badge\"\n    }, index.h(GuildBadge, {\n      \"aria-label\": this.partnered ? 'Discord Partner' : 'Verified',\n      class: `discord-invite-badge-${this.partnered ? 'partnered' : 'verified'}`\n    }), index.h(\"div\", {\n      class: \"discord-invite-badge-container\"\n    }, this.partnered ? index.h(PartnerBadgeOverlay, null) : index.h(VerifiedBadgeOverlay, null))), index.h(\"span\", {\n      class: \"discord-invite-name\"\n    }, this.name)), index.h(\"div\", {\n      class: \"discord-invite-counts\"\n    }, index.h(\"i\", {\n      class: \"discord-invite-status discord-invite-status-online\"\n    }), index.h(\"span\", {\n      class: \"discord-invite-count\"\n    }, this.online.toLocaleString(), \" Online\"), index.h(\"i\", {\n      class: \"discord-invite-status\"\n    }), index.h(\"span\", {\n      class: \"discord-invite-count\"\n    }, this.members.toLocaleString(), \" Members\"))), index.h(\"a\", {\n      class: \"discord-invite-join\",\n      href: this.url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }, \"Join\")));\n  }\n\n  get el() {\n    return index.getElement(this);\n  }\n\n};\nDiscordInvite.style = discordInviteCss;\n\nvar removeHash = function removeHash(hex) {\n  return hex.charAt(0) === '#' ? hex.slice(1) : hex;\n};\n\nvar parseHex = function parseHex(nakedHex) {\n  var isShort = nakedHex.length === 3 || nakedHex.length === 4;\n  var twoDigitHexR = isShort ? \"\".concat(nakedHex.slice(0, 1)).concat(nakedHex.slice(0, 1)) : nakedHex.slice(0, 2);\n  var twoDigitHexG = isShort ? \"\".concat(nakedHex.slice(1, 2)).concat(nakedHex.slice(1, 2)) : nakedHex.slice(2, 4);\n  var twoDigitHexB = isShort ? \"\".concat(nakedHex.slice(2, 3)).concat(nakedHex.slice(2, 3)) : nakedHex.slice(4, 6);\n  var twoDigitHexA = (isShort ? \"\".concat(nakedHex.slice(3, 4)).concat(nakedHex.slice(3, 4)) : nakedHex.slice(6, 8)) || 'ff'; // const numericA = +((parseInt(a, 16) / 255).toFixed(2));\n\n  return {\n    r: twoDigitHexR,\n    g: twoDigitHexG,\n    b: twoDigitHexB,\n    a: twoDigitHexA\n  };\n};\n\nvar hexToDecimal = function hexToDecimal(hex) {\n  return parseInt(hex, 16);\n};\n\nvar hexesToDecimals = function hexesToDecimals(_ref) {\n  var r = _ref.r,\n      g = _ref.g,\n      b = _ref.b,\n      a = _ref.a;\n  return {\n    r: hexToDecimal(r),\n    g: hexToDecimal(g),\n    b: hexToDecimal(b),\n    a: +(hexToDecimal(a) / 255).toFixed(2)\n  };\n};\n\nvar isNumeric = function isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}; // eslint-disable-line no-restricted-globals, max-len\n\n\nvar formatRgb = function formatRgb(decimalObject, parameterA) {\n  var r = decimalObject.r,\n      g = decimalObject.g,\n      b = decimalObject.b,\n      parsedA = decimalObject.a;\n  var a = isNumeric(parameterA) ? parameterA : parsedA;\n  return \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(a, \")\");\n};\n/**\n * Turns an old-fashioned css hex color value into a rgb color value.\n *\n * If you specify an alpha value, you'll get a rgba() value instead.\n *\n * @param The hex value to convert. ('123456'. '#123456', ''123', '#123')\n * @param An alpha value to apply. (optional) ('0.5', '0.25')\n * @return An rgb or rgba value. ('rgb(11, 22, 33)'. 'rgba(11, 22, 33, 0.5)')\n */\n\n\nvar hexToRgba = function hexToRgba(hex, a) {\n  var hashlessHex = removeHash(hex);\n  var hexObject = parseHex(hashlessHex);\n  var decimalObject = hexesToDecimals(hexObject);\n  return formatRgb(decimalObject, a);\n};\n\nvar build = hexToRgba;\n\nfunction ChannelThread(props) {\n  return index.h(\"svg\", Object.assign({}, props, {\n    \"aria-hidden\": \"false\",\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\"\n  }), index.h(\"path\", {\n    fill: \"currentColor\",\n    d: \"M5.43309 21C5.35842 21 5.30189 20.9325 5.31494 20.859L5.99991 17H2.14274C2.06819 17 2.01168 16.9327 2.02453 16.8593L2.33253 15.0993C2.34258 15.0419 2.39244 15 2.45074 15H6.34991L7.40991 9H3.55274C3.47819 9 3.42168 8.93274 3.43453 8.85931L3.74253 7.09931C3.75258 7.04189 3.80244 7 3.86074 7H7.75991L8.45234 3.09903C8.46251 3.04174 8.51231 3 8.57049 3H10.3267C10.4014 3 10.4579 3.06746 10.4449 3.14097L9.75991 7H15.7599L16.4523 3.09903C16.4625 3.04174 16.5123 3 16.5705 3H18.3267C18.4014 3 18.4579 3.06746 18.4449 3.14097L17.7599 7H21.6171C21.6916 7 21.7481 7.06725 21.7353 7.14069L21.4273 8.90069C21.4172 8.95811 21.3674 9 21.3091 9H17.4099L17.0495 11.04H15.05L15.4104 9H9.41035L8.35035 15H10.5599V17H7.99991L7.30749 20.901C7.29732 20.9583 7.24752 21 7.18934 21H5.43309Z\"\n  }), index.h(\"path\", {\n    fill: \"currentColor\",\n    d: \"M13.4399 12.96C12.9097 12.96 12.4799 13.3898 12.4799 13.92V20.2213C12.4799 20.7515 12.9097 21.1813 13.4399 21.1813H14.3999C14.5325 21.1813 14.6399 21.2887 14.6399 21.4213V23.4597C14.6399 23.6677 14.8865 23.7773 15.0408 23.6378L17.4858 21.4289C17.6622 21.2695 17.8916 21.1813 18.1294 21.1813H22.5599C23.0901 21.1813 23.5199 20.7515 23.5199 20.2213V13.92C23.5199 13.3898 23.0901 12.96 22.5599 12.96H13.4399Z\"\n  }));\n}\n\nfunction LockedVoiceChannel(props) {\n  return index.h(\"svg\", Object.assign({}, props, {\n    \"aria-hidden\": \"false\",\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\"\n  }), index.h(\"path\", {\n    fill: \"currentColor\",\n    d: \"M17 11V7C17 4.243 14.756 2 12 2C9.242 2 7 4.243 7 7V11C5.897 11 5 11.896 5 13V20C5 21.103 5.897 22 7 22H17C18.103 22 19 21.103 19 20V13C19 11.896 18.103 11 17 11ZM12 18C11.172 18 10.5 17.328 10.5 16.5C10.5 15.672 11.172 15 12 15C12.828 15 13.5 15.672 13.5 16.5C13.5 17.328 12.828 18 12 18ZM15 11H9V7C9 5.346 10.346 4 12 4C13.654 4 15 5.346 15 7V11Z\",\n    \"aria-hidden\": \"true\"\n  }));\n}\n\nfunction VoiceChannel(props) {\n  return index.h(\"svg\", Object.assign({}, props, {\n    \"aria-hidden\": \"false\",\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\"\n  }), index.h(\"path\", {\n    fill: \"currentColor\",\n    \"fill-rule\": \"evenodd\",\n    \"clip-rule\": \"evenodd\",\n    d: \"M11.383 3.07904C11.009 2.92504 10.579 3.01004 10.293 3.29604L6 8.00204H3C2.45 8.00204 2 8.45304 2 9.00204V15.002C2 15.552 2.45 16.002 3 16.002H6L10.293 20.71C10.579 20.996 11.009 21.082 11.383 20.927C11.757 20.772 12 20.407 12 20.002V4.00204C12 3.59904 11.757 3.23204 11.383 3.07904ZM14 5.00195V7.00195C16.757 7.00195 19 9.24595 19 12.002C19 14.759 16.757 17.002 14 17.002V19.002C17.86 19.002 21 15.863 21 12.002C21 8.14295 17.86 5.00195 14 5.00195ZM14 9.00195C15.654 9.00195 17 10.349 17 12.002C17 13.657 15.654 15.002 14 15.002V13.002C14.551 13.002 15 12.553 15 12.002C15 11.451 14.551 11.002 14 11.002V9.00195Z\",\n    \"aria-hidden\": \"true\"\n  }));\n}\n\nfunction ChannelIcon(props) {\n  return index.h(\"svg\", Object.assign({}, props, {\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }), index.h(\"path\", {\n    fill: \"currentColor\",\n    \"fill-rule\": \"evenodd\",\n    \"clip-rule\": \"evenodd\",\n    d: \"M5.88657 21C5.57547 21 5.3399 20.7189 5.39427 20.4126L6.00001 17H2.59511C2.28449 17 2.04905 16.7198 2.10259 16.4138L2.27759 15.4138C2.31946 15.1746 2.52722 15 2.77011 15H6.35001L7.41001 9H4.00511C3.69449 9 3.45905 8.71977 3.51259 8.41381L3.68759 7.41381C3.72946 7.17456 3.93722 7 4.18011 7H7.76001L8.39677 3.41262C8.43914 3.17391 8.64664 3 8.88907 3H9.87344C10.1845 3 10.4201 3.28107 10.3657 3.58738L9.76001 7H15.76L16.3968 3.41262C16.4391 3.17391 16.6466 3 16.8891 3H17.8734C18.1845 3 18.4201 3.28107 18.3657 3.58738L17.76 7H21.1649C21.4755 7 21.711 7.28023 21.6574 7.58619L21.4824 8.58619C21.4406 8.82544 21.2328 9 20.9899 9H17.41L16.35 15H19.7549C20.0655 15 20.301 15.2802 20.2474 15.5862L20.0724 16.5862C20.0306 16.8254 19.8228 17 19.5799 17H16L15.3632 20.5874C15.3209 20.8261 15.1134 21 14.8709 21H13.8866C13.5755 21 13.3399 20.7189 13.3943 20.4126L14 17H8.00001L7.36325 20.5874C7.32088 20.8261 7.11337 21 6.87094 21H5.88657ZM9.41045 9L8.35045 15H14.3504L15.4104 9H9.41045Z\"\n  }));\n}\n\nconst discordMentionCss = \".discord-message .discord-mention{color:#e3e7f8;background-color:hsla(235, 85.6%, 64.7%, 0.3);font-weight:500;padding:0 2px;border-radius:3px;unicode-bidi:-moz-plaintext;unicode-bidi:plaintext;-webkit-transition:background-color 50ms ease-out, color 50ms ease-out;transition:background-color 50ms ease-out, color 50ms ease-out;cursor:pointer}.discord-message .discord-mention:hover{color:#fff;background-color:hsl(235, 85.6%, 64.7%)}.discord-message .discord-mention.discord-channel-mention{padding-left:1.2rem !important;position:relative}.discord-message .discord-mention.discord-voice-mention,.discord-message .discord-mention.discord-locked-mention,.discord-message .discord-mention.discord-thread-mention{padding-left:1.25rem !important;position:relative}.discord-light-theme .discord-message .discord-mention{color:#687dc6;background-color:hsla(235, 85.6%, 64.7%, 0.15)}.discord-light-theme .discord-message .discord-mention:hover{color:#ffffff;background-color:hsl(235, 85.6%, 64.7%)}.discord-message .discord-mention .discord-mention-icon{width:1rem;height:1rem;object-fit:contain;position:absolute;left:0.125rem;top:0.125rem}.discord-message.discord-highlight-mention{background-color:rgba(250, 166, 26, 0.1);border-radius:0 3px 3px 0;padding-right:5px;position:relative}.discord-light-theme .discord-message.discord-highlight-mention{background-color:rgba(250, 166, 26, 0.1)}.discord-message.discord-highlight-mention:hover{background-color:rgba(250, 166, 26, 0.08)}.discord-light-theme .discord-message.discord-highlight-mention:hover{background-color:rgba(250, 166, 26, 0.2)}.discord-message.discord-highlight-mention::before{background-color:rgb(250, 166, 26);content:' ';position:relative;display:block;top:0;left:-0.75rem;bottom:0;pointer-events:none;width:2px}\";\nconst DiscordMention = class {\n  constructor(hostRef) {\n    index.registerInstance(this, hostRef);\n    /**\r\n     * Whether this entire message block should be highlighted (to emulate the \"logged in user\" being pinged).\r\n     */\n\n    this.highlight = false;\n    /**\r\n     * The type of mention this should be. This will prepend the proper prefix character.\r\n     * Valid values: `user`, `channel`, `role`, `voice`, and `locked`.\r\n     */\n\n    this.type = 'user';\n  }\n\n  handleType(value) {\n    if (typeof value !== 'string') {\n      throw new TypeError('DiscordMention `type` prop must be a string.');\n    } else if (!['user', 'channel', 'role', 'voice', 'locked', 'thread'].includes(value)) {\n      throw new RangeError(\"DiscordMention `type` prop must be one of: 'user', 'channel', 'role', 'voice', 'locked', 'thread' \");\n    }\n  }\n\n  componentWillRender() {\n    this.handleType(this.type);\n  }\n\n  componentDidLoad() {\n    if (this.color && this.type === 'role') {\n      this.el.addEventListener('mouseover', this.setHoverColor.bind(this));\n      this.el.addEventListener('mouseout', this.resetHoverColor.bind(this));\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.color && this.type === 'role') {\n      this.el.removeEventListener('mouseover', this.setHoverColor.bind(this));\n      this.el.removeEventListener('mouseout', this.resetHoverColor.bind(this));\n    }\n  }\n\n  setHoverColor() {\n    this.el.style.backgroundColor = build(this.color, 0.3);\n  }\n\n  resetHoverColor() {\n    this.el.style.backgroundColor = build(this.color, 0.1);\n  }\n\n  render() {\n    const {\n      color,\n      type\n    } = this;\n    const colorStyle = !color || type !== 'role' ? {} : {\n      color,\n      'background-color': build(color, 0.1)\n    };\n    let mentionPrepend = '';\n\n    switch (this.type) {\n      case 'channel':\n        mentionPrepend = index.h(ChannelIcon, {\n          class: \"discord-mention-icon\"\n        });\n        break;\n\n      case 'user':\n      case 'role':\n        mentionPrepend = '@';\n        break;\n\n      case 'voice':\n        mentionPrepend = index.h(VoiceChannel, {\n          class: \"discord-mention-icon\"\n        });\n        break;\n\n      case 'locked':\n        mentionPrepend = index.h(LockedVoiceChannel, {\n          class: \"discord-mention-icon\"\n        });\n        break;\n\n      case 'thread':\n        mentionPrepend = index.h(ChannelThread, {\n          class: \"discord-mention-icon\"\n        });\n        break;\n    }\n\n    return index.h(index.Host, {\n      style: colorStyle,\n      class: `discord-mention discord-${type}-mention`\n    }, mentionPrepend, index.h(\"slot\", null));\n  }\n\n  get el() {\n    return index.getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"type\": [\"handleType\"]\n    };\n  }\n\n};\nDiscordMention.style = discordMentionCss;\n\nconst VerifiedTick = () => index.h(\"svg\", {\n  class: \"discord-application-tag-verified\",\n  \"aria-label\": \"Verified Bot\",\n  \"aria-hidden\": \"false\",\n  width: \"16\",\n  height: \"16\",\n  viewBox: \"0 0 16 15.2\"\n}, index.h(\"path\", {\n  d: \"M7.4,11.17,4,8.62,5,7.26l2,1.53L10.64,4l1.36,1Z\",\n  fill: \"currentColor\"\n}));\n\nconst AuthorInfo = _ref2 => {\n  let {\n    author,\n    bot,\n    server,\n    roleColor,\n    verified,\n    compact\n  } = _ref2;\n  return index.h(\"span\", {\n    class: \"discord-author-info\"\n  }, !compact && index.h(\"span\", {\n    class: \"discord-author-username\",\n    style: {\n      color: roleColor\n    }\n  }, author), index.h(Fragment, null, bot && !server && index.h(\"span\", {\n    class: \"discord-application-tag\"\n  }, verified && index.h(VerifiedTick, null), \"Bot\"), server && !bot && index.h(\"span\", {\n    class: \"discord-application-tag\"\n  }, \"Server\")), compact && index.h(\"span\", {\n    class: \"discord-author-username\",\n    style: {\n      color: roleColor\n    }\n  }, author));\n};\n\nconst discordMessageCss = \".discord-message{color:#dcddde;display:flex;flex-direction:column;font-size:0.9em;font-family:Whitney, Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif;padding:0px 1em;position:relative;word-wrap:break-word;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;padding-right:0;min-height:1.375rem;padding-right:48px !important;margin-top:1.0625rem}.discord-message .discord-message-inner{display:flex;position:relative;-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto}.discord-message.discord-message-highlight{background-color:rgba(250, 166, 26, 0.05)}.discord-message.discord-message-highlight:hover{background-color:rgba(250, 166, 26, 0.08)}.discord-message.discord-message-highlight::before{background-color:#faa61a;content:'';position:absolute;display:block;top:0;left:0;bottom:0;pointer-events:none;width:2px}.discord-light-theme .discord-message{color:#2e3338;border-color:#eceeef}.discord-message a{color:#0096cf;font-weight:normal;text-decoration:none}.discord-message a:hover{text-decoration:underline}.discord-light-theme .discord-message a{color:#00b0f4}.discord-message a:hover{text-decoration:underline}.discord-message .discord-author-avatar{margin-right:16px;margin-top:5px;min-width:40px;z-index:1}.discord-message .discord-author-avatar img{width:40px;height:40px;border-radius:50%}.discord-message .discord-message-timestamp{color:#72767d;font-size:12px;margin-left:3px}.discord-light-theme .discord-message .discord-message-timestamp{color:#747f8d}.discord-message .discord-message-edited{color:#72767d;font-size:10px}.discord-light-theme .discord-message .discord-message-edited{color:#99aab5}.discord-message .discord-message-content{width:100%;line-height:160%;font-weight:normal;padding-top:2px}.discord-message .discord-message-body{font-size:1rem;font-weight:400;word-break:break-word;position:relative}.discord-message .discord-message-body pre{border:1px solid #202225;border-radius:4px}.discord-message .discord-message-body code{background:#2f3136;white-space:break-spaces}.discord-light-theme .discord-message .discord-message-timestamp,.discord-compact-mode .discord-message:hover .discord-message-timestamp,.discord-compact-mode.discord-light-theme .discord-message:hover .discord-message-timestamp{color:#99aab5}.discord-compact-mode.discord-light-theme .discord-message .discord-message-timestamp{color:#d1d9de}.discord-compact-mode .discord-message .discord-message-timestamp{display:inline-block;width:3.1rem;text-align:right;font-size:0.6875rem;line-height:1.375rem;margin-right:0.25rem;margin-left:0;text-indent:0}.discord-compact-mode .discord-message{margin-top:unset}.discord-compact-mode .discord-message .discord-message-body{line-height:1.375rem;padding-left:10px;text-indent:-6px}.discord-compact-mode .discord-message .discord-message-compact-indent{padding-left:10px}.discord-message:first-child{margin-top:0.5rem}.discord-message:last-child{margin-bottom:0.5rem;border-bottom-width:0}.discord-message .discord-message-markup{font-size:1rem;line-height:1.375rem;word-wrap:break-word;user-select:text;font-weight:400}.discord-compact-mode .discord-author-avatar{display:none}.discord-message:hover{background-color:rgba(4, 4, 5, 0.07)}.discord-light-theme .discord-message:hover{background-color:rgba(6, 6, 7, 0.02)}.discord-message.discord-message-has-thread:after{width:2rem;left:2.2rem;top:1.75rem;border-left:2px solid #4f545c;border-bottom:2px solid #4f545c;border-bottom-left-radius:8px;bottom:29px;content:'';position:absolute}.discord-light-theme .discord-message.discord-message-has-thread:after{border-color:#747f8d}.discord-message .discord-author-info{display:inline-flex;align-items:center;font-size:15px}.discord-message .discord-author-info .discord-author-username{color:#fff;font-size:1.1em;font-weight:500;letter-spacing:0.5px}.discord-light-theme .discord-message .discord-author-info .discord-author-username{color:#23262a}.discord-message .discord-author-info .discord-application-tag{background-color:#5865f2;color:#fff;font-size:0.65em;margin-left:5px;border-radius:3px;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-message .discord-author-info .discord-application-tag-verified{display:inline-block;width:0.9375rem;height:0.9375rem;margin-left:-0.25rem}.discord-compact-mode .discord-message .discord-author-info .discord-author-username{margin-left:8px;margin-right:4px}.discord-compact-mode .discord-message .discord-author-info .discord-application-tag{margin-left:0;margin-left:5px;margin-right:5px;padding-left:3px;padding-right:3px}\";\nconst DiscordMessage = class {\n  constructor(hostRef) {\n    index.registerInstance(this, hostRef);\n    /**\r\n     * The message author's username.\r\n     * @default 'User'\r\n     */\n\n    this.author = 'User';\n    /**\r\n     * Whether the message author is a bot or not.\r\n     * Only works if `server` is `false` or `undefined`.\r\n     */\n\n    this.bot = false;\n    /**\r\n     * Whether the message author is a server crosspost webhook or not.\r\n     * Only works if `bot` is `false` or `undefined`.\r\n     */\n\n    this.server = false;\n    /**\r\n     * Whether the bot is verified or not.\r\n     * Only works if `bot` is `true`\r\n     */\n\n    this.verified = false;\n    /**\r\n     * Whether the message has been edited or not.\r\n     */\n\n    this.edited = false;\n    /**\r\n     * Whether to highlight this message.\r\n     */\n\n    this.highlight = false;\n    /**\r\n     * The timestamp to use for the message date.\r\n     */\n\n    this.timestamp = new Date();\n    /**\r\n     * Whether to use 24-hour format for the timestamp.\r\n     */\n\n    this.twentyFour = false;\n  }\n\n  updateTimestamp(value) {\n    const parent = this.el.parentElement;\n    return handleTimestamp(value, parent.compactMode, this.twentyFour);\n  }\n\n  componentWillRender() {\n    const parent = this.el.parentElement;\n    this.timestamp = handleTimestamp(this.timestamp, parent.compactMode, this.twentyFour);\n  }\n\n  render() {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n\n    const parent = this.el.parentElement;\n\n    if (parent.tagName.toLowerCase() !== 'discord-messages') {\n      throw new Error('All <discord-message> components must be direct children of <discord-messages>.');\n    }\n\n    const resolveAvatar = avatar => {\n      var _a, _b;\n\n      return (_b = (_a = options.avatars[avatar]) !== null && _a !== void 0 ? _a : avatar) !== null && _b !== void 0 ? _b : options.avatars.default;\n    };\n\n    const defaultData = {\n      author: this.author,\n      bot: this.bot,\n      verified: this.verified,\n      server: this.server,\n      roleColor: this.roleColor\n    };\n    const profileData = (_a = Reflect.get(options.profiles, this.profile)) !== null && _a !== void 0 ? _a : {};\n    const profile = Object.assign(Object.assign(Object.assign({}, defaultData), profileData), {\n      avatar: resolveAvatar((_b = profileData.avatar) !== null && _b !== void 0 ? _b : this.avatar)\n    });\n    const highlightMention = // @ts-expect-error ts doesn't understand this\n    Array.from(this.el.children).some(child => {\n      return child.tagName.toLowerCase() === 'discord-mention' && child.highlight && ['user', 'role'].includes(child.type);\n    }) || this.highlight;\n    const hasThread = // @ts-expect-error ts doesn't understand this\n    Array.from(this.el.children).some(child => {\n      return child.tagName.toLowerCase() === 'discord-thread';\n    });\n    return index.h(index.Host, {\n      class: clsx('discord-message', {\n        'discord-highlight-mention': highlightMention,\n        'discord-message-has-thread': hasThread\n      })\n    }, index.h(\"slot\", {\n      name: \"reply\"\n    }), index.h(\"div\", {\n      class: \"discord-message-inner\"\n    }, parent.compactMode && index.h(\"span\", {\n      class: \"discord-message-timestamp\"\n    }, this.timestamp), index.h(\"div\", {\n      class: \"discord-author-avatar\"\n    }, index.h(\"img\", {\n      src: profile.avatar,\n      alt: profile.author\n    })), index.h(\"div\", {\n      class: \"discord-message-content\"\n    }, !parent.compactMode && index.h(Fragment, null, index.h(AuthorInfo, {\n      author: (_c = profile.author) !== null && _c !== void 0 ? _c : '',\n      bot: (_d = profile.bot) !== null && _d !== void 0 ? _d : false,\n      server: (_e = profile.server) !== null && _e !== void 0 ? _e : false,\n      verified: (_f = profile.verified) !== null && _f !== void 0 ? _f : false,\n      roleColor: (_g = profile.roleColor) !== null && _g !== void 0 ? _g : '',\n      compact: parent.compactMode\n    }), index.h(\"span\", {\n      class: \"discord-message-timestamp\"\n    }, this.timestamp)), index.h(\"div\", {\n      class: \"discord-message-body\"\n    }, parent.compactMode && index.h(AuthorInfo, {\n      author: (_h = profile.author) !== null && _h !== void 0 ? _h : '',\n      bot: (_j = profile.bot) !== null && _j !== void 0 ? _j : false,\n      server: (_k = profile.server) !== null && _k !== void 0 ? _k : false,\n      verified: (_l = profile.verified) !== null && _l !== void 0 ? _l : false,\n      roleColor: (_m = profile.roleColor) !== null && _m !== void 0 ? _m : '',\n      compact: parent.compactMode\n    }), index.h(\"span\", {\n      class: \"discord-message-markup\"\n    }, index.h(\"slot\", null)), this.edited ? index.h(\"span\", {\n      class: \"discord-message-edited\"\n    }, \"(edited)\") : ''), index.h(\"div\", {\n      class: \"discord-message-compact-indent\"\n    }, index.h(\"slot\", {\n      name: \"embeds\"\n    }), index.h(\"slot\", {\n      name: \"attachments\"\n    }), index.h(\"slot\", {\n      name: \"components\"\n    }), index.h(\"slot\", {\n      name: \"reactions\"\n    }), index.h(\"slot\", {\n      name: \"thread\"\n    })))));\n  }\n\n  get el() {\n    return index.getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"timestamp\": [\"updateTimestamp\"]\n    };\n  }\n\n};\nDiscordMessage.style = discordMessageCss;\nconst discordMessagesCss = \"@import url('https://fonts.googleapis.com/css?family=Roboto:400,500,700');@font-face{font-family:Whitney;font-style:light;font-weight:300;src:url('https://cdn.skyra.pw/whitney-font/Light.woff') format('woff')}@font-face{font-family:Whitney;font-style:normal;font-weight:500;src:url('https://cdn.skyra.pw/whitney-font/Normal.woff') format('woff')}@font-face{font-family:Whitney;font-style:medium;font-weight:600;src:url('https://cdn.skyra.pw/whitney-font/Medium-Regular.woff') format('woff')}@font-face{font-family:WhitneyMedium;font-style:medium;font-weight:600;src:url('https://cdn.skyra.pw/whitney-font/Medium-Extra.woff') format('woff')}@font-face{font-family:Whitney;font-style:bold;font-weight:700;src:url('https://cdn.skyra.pw/whitney-font/Bold.woff') format('woff')}.discord-messages{color:#fff;background-color:#36393e;display:block;font-size:16px;font-family:Whitney, Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif;line-height:170%;border:1px solid rgba(255, 255, 255, 0.05)}.discord-messages.discord-light-theme{color:#747f8d;background-color:#fff;border-color:#dedede}.discord-messages.discord-no-background{background-color:unset}\";\nconst DiscordMessages = class {\n  constructor(hostRef) {\n    index.registerInstance(this, hostRef);\n  }\n\n  componentWillRender() {\n    if (this.lightTheme || options.defaultTheme === 'light' && this.lightTheme) {\n      this.lightTheme = true;\n    }\n\n    if (this.compactMode || options.defaultMode === 'compact' && this.compactMode) {\n      this.compactMode = true;\n    }\n\n    if (this.noBackground || options.defaultBackground === 'none' && this.noBackground) {\n      this.noBackground = true;\n    }\n  }\n\n  render() {\n    return index.h(index.Host, {\n      class: clsx({\n        'discord-light-theme': this.lightTheme,\n        'discord-compact-mode': this.compactMode,\n        'discord-no-background': this.noBackground\n      }, 'discord-messages')\n    }, index.h(\"slot\", null));\n  }\n\n};\nDiscordMessages.style = discordMessagesCss;\nconst discordReactionCss = \".discord-reaction{border-radius:0.5rem;cursor:pointer;flex-shrink:0;margin-right:0.25rem;margin-bottom:0.25rem;user-select:none;transition:none 0.1s ease;transition-property:background-color, border-color;background-color:#2f3136;border:1px solid transparent}.discord-light-theme .discord-reaction{background-color:#f2f3f5}.discord-reaction:hover{background-color:#36393f;border-color:#fff2}.discord-light-theme .discord-reaction:not(.discord-reaction-reacted):hover{background-color:white;border-color:#0003}.discord-reaction.discord-reaction-reacted{background-color:rgba(88, 101, 242, 0.15);border-color:#5865f2}.discord-light-theme .discord-reaction.discord-reaction-reacted{background-color:#e7e9fd}.discord-reaction .discord-reaction-inner{display:flex;align-items:center;padding:0.125rem 0.375rem}.discord-reaction img{width:1rem;height:1rem;margin:0.125rem 0;min-width:auto;min-height:auto;object-fit:contain;vertical-align:bottom}.discord-reaction .discord-reaction-count{font-size:0.875rem;font-weight:500;margin-left:0.375rem;text-align:center;color:#b9bbbe}.discord-light-theme .discord-reaction .discord-reaction-count{color:#4f5660}.discord-reaction.discord-reaction-reacted .discord-reaction-count{color:#dee0fc}.discord-light-theme .discord-reaction.discord-reaction-reacted .discord-reaction-count{color:#5865f2}\";\nconst DiscordReaction = class {\n  constructor(hostRef) {\n    index.registerInstance(this, hostRef);\n    /**\r\n     * The name of the emoji to use as alternative image text.\r\n     * @default ':emoji'\r\n     */\n\n    this.name = ':emoji:';\n    /**\r\n     * The number of people who reacted.\r\n     * @default 1\r\n     */\n\n    this.count = 1;\n    /**\r\n     * Whether the reaction should show as reacted by the user.\r\n     * @default false\r\n     */\n\n    this.reacted = false;\n    /**\r\n     * Whether the reaction should be reactive.\r\n     * @remark When the reaction is interactive left clicking it will add 1 to the counter.\r\n     * Whereas when holding the Shift key and left clicking it will decrease the counter.\r\n     * The counter cannot go below 1.\r\n     * @default false\r\n     */\n\n    this.interactive = false;\n  }\n\n  render() {\n    return index.h(\"div\", {\n      class: clsx('discord-reaction', {\n        'discord-reaction-reacted': this.reacted\n      }),\n      onClick: this.handleReactionClick.bind(this)\n    }, index.h(\"div\", {\n      class: \"discord-reaction-inner\"\n    }, index.h(\"img\", {\n      src: this.emoji,\n      alt: this.name,\n      draggable: false\n    }), index.h(\"span\", {\n      class: \"discord-reaction-count\"\n    }, this.count)));\n  }\n\n  handleReactionClick(event) {\n    if (this.interactive) {\n      if (event.shiftKey) {\n        this.count--;\n      } else {\n        this.count++;\n      }\n\n      if (this.count <= 0) {\n        this.count = 1;\n      }\n    }\n  }\n\n  get el() {\n    return index.getElement(this);\n  }\n\n};\nDiscordReaction.style = discordReactionCss;\nconst discordReactionsCss = \".discord-message .discord-reactions,.discord-system-message .discord-reactions{display:flex;-webkit-box-flex:1;-ms-flex:1 0 auto;flex:1 0 auto;align-items:center;flex-wrap:wrap}\";\nconst DiscordReactions = class {\n  constructor(hostRef) {\n    index.registerInstance(this, hostRef);\n  }\n\n  render() {\n    return index.h(index.Host, {\n      class: \"discord-reactions\"\n    }, index.h(\"slot\", null));\n  }\n\n};\nDiscordReactions.style = discordReactionsCss;\n\nfunction AttachmentReply(props) {\n  return index.h(\"svg\", Object.assign({}, props, {\n    \"aria-hidden\": \"false\",\n    width: \"64\",\n    height: \"64\",\n    viewBox: \"0 0 64 64\"\n  }), index.h(\"path\", {\n    fill: \"currentColor\",\n    d: \"M56 50.6667V13.3333C56 10.4 53.6 8 50.6667 8H13.3333C10.4 8 8 10.4 8 13.3333V50.6667C8 53.6 10.4 56 13.3333 56H50.6667C53.6 56 56 53.6 56 50.6667ZM22.6667 36L29.3333 44.0267L38.6667 32L50.6667 48H13.3333L22.6667 36Z\"\n  }));\n}\n\nfunction CommandReply(props) {\n  return index.h(\"svg\", Object.assign({}, props, {\n    \"aria-hidden\": \"false\",\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\"\n  }), index.h(\"path\", {\n    fill: \"currentColor\",\n    \"fill-rule\": \"evenodd\",\n    \"clip-rule\": \"evenodd\",\n    d: \"M5 3C3.89543 3 3 3.89543 3 5V19C3 20.1046 3.89543 21 5 21H19C20.1046 21 21 20.1046 21 19V5C21 3.89543 20.1046 3 19 3H5ZM16.8995 8.41419L15.4853 6.99998L7 15.4853L8.41421 16.8995L16.8995 8.41419Z\"\n  }));\n}\n\nfunction ReplyIcon(props) {\n  return index.h(\"svg\", Object.assign({}, props, {\n    width: \"12\",\n    height: \"8\",\n    viewBox: \"0 0 12 8\"\n  }), index.h(\"path\", {\n    d: \"M0.809739 3.59646L5.12565 0.468433C5.17446 0.431163 5.23323 0.408043 5.2951 0.401763C5.35698 0.395482 5.41943 0.406298 5.4752 0.432954C5.53096 0.45961 5.57776 0.50101 5.61013 0.552343C5.64251 0.603676 5.65914 0.662833 5.6581 0.722939V2.3707C10.3624 2.3707 11.2539 5.52482 11.3991 7.21174C11.4028 7.27916 11.3848 7.34603 11.3474 7.40312C11.3101 7.46021 11.2554 7.50471 11.1908 7.53049C11.1262 7.55626 11.0549 7.56204 10.9868 7.54703C10.9187 7.53201 10.857 7.49695 10.8104 7.44666C8.72224 5.08977 5.6581 5.63359 5.6581 5.63359V7.28135C5.65831 7.34051 5.64141 7.39856 5.60931 7.44894C5.5772 7.49932 5.53117 7.54004 5.4764 7.5665C5.42163 7.59296 5.3603 7.60411 5.29932 7.59869C5.23834 7.59328 5.18014 7.57151 5.13128 7.53585L0.809739 4.40892C0.744492 4.3616 0.691538 4.30026 0.655067 4.22975C0.618596 4.15925 0.599609 4.08151 0.599609 4.00269C0.599609 3.92386 0.618596 3.84612 0.655067 3.77562C0.691538 3.70511 0.744492 3.64377 0.809739 3.59646Z\",\n    fill: \"currentColor\"\n  }));\n}\n\nconst discordReplyCss = \".discord-replied-message{color:#b9bbbe;display:flex;font-size:0.875rem;font-family:Whitney, Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif;padding-top:2px;margin-left:56px;margin-bottom:4px;align-items:center;line-height:1.125rem;position:relative;white-space:pre;user-select:none}.discord-light-theme .discord-replied-message{color:#4f5660}.discord-compact-mode .discord-replied-message{margin-left:62px;margin-bottom:0}.discord-replied-message:before{content:'';display:block;position:absolute;top:50%;right:100%;bottom:0;left:-36px;margin-right:4px;margin-top:-1px;margin-left:-1px;margin-bottom:-2px;border-left:2px solid #4f545c;border-bottom:0 solid #4f545c;border-right:0 solid #4f545c;border-top:2px solid #4f545c;border-top-left-radius:6px}.discord-light-theme .discord-replied-message:before{border-color:#747f8d}.discord-replied-message .discord-replied-message-avatar,.discord-replied-message .discord-reply-badge{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:16px;height:16px;border-radius:50%;user-select:none;margin-right:0.25rem}.discord-replied-message .discord-reply-badge{display:flex;align-items:center;justify-content:center;color:#b9bbbe;background:#202225}.discord-light-theme .discord-replied-message .discord-reply-badge{color:#4f5660;background:#e3e5e8}.discord-replied-message .discord-application-tag{background-color:hsl(235, 85.6%, 64.7%);color:#fff;font-size:0.625rem;margin-right:0.25rem;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-replied-message .discord-application-tag .discord-application-tag-verified{width:0.9375rem;height:0.9375rem;margin-left:-0.1rem}.discord-replied-message .discord-replied-message-username{flex-shrink:0;font-size:inherit;line-height:inherit;margin-right:0.25rem;opacity:0.64}.discord-replied-message .discord-replied-message-content{color:inherit;font-size:inherit;line-height:inherit;white-space:pre;text-overflow:ellipsis;user-select:none;cursor:pointer}.discord-replied-message .discord-replied-message-content:hover{color:#fff}.discord-light-theme .discord-replied-message .discord-replied-message-content:hover{color:#000}.discord-replied-message .discord-replied-message-content .discord-message-edited{margin-left:0.25rem}.discord-replied-message .discord-replied-message-content-icon{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:20px;height:20px;margin-left:4px}.discord-message .discord-author-info{display:inline-flex;align-items:center;font-size:15px}.discord-message .discord-author-info .discord-author-username{color:#fff;font-size:1.1em;font-weight:500;letter-spacing:0.5px}.discord-light-theme .discord-message .discord-author-info .discord-author-username{color:#23262a}.discord-message .discord-author-info .discord-application-tag{background-color:#5865f2;color:#fff;font-size:0.65em;margin-left:5px;border-radius:3px;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-message .discord-author-info .discord-application-tag-verified{display:inline-block;width:0.9375rem;height:0.9375rem;margin-left:-0.25rem}.discord-compact-mode .discord-message .discord-author-info .discord-author-username{margin-left:8px;margin-right:4px}.discord-compact-mode .discord-message .discord-author-info .discord-application-tag{margin-left:0;margin-left:5px;margin-right:5px;padding-left:3px;padding-right:3px}\";\nconst DiscordReply = class {\n  constructor(hostRef) {\n    index.registerInstance(this, hostRef);\n    /**\r\n     * The message author's username.\r\n     * @default 'User'\r\n     */\n\n    this.author = 'User';\n    /**\r\n     * Whether the message author is a bot or not.\r\n     * Only works if `server` is `false` or `undefined`.\r\n     */\n\n    this.bot = false;\n    /**\r\n     * Whether the message author is a server crosspost webhook or not.\r\n     * Only works if `bot` is `false` or `undefined`.\r\n     */\n\n    this.server = false;\n    /**\r\n     * Whether the bot is verified or not.\r\n     * Only works if `bot` is `true`\r\n     */\n\n    this.verified = false;\n    /**\r\n     * Whether the message has been edited or not.\r\n     */\n\n    this.edited = false;\n    /**\r\n     * Whether the referenced message is from a response of a slash command.\r\n     */\n\n    this.command = false;\n    /**\r\n     * Whether the referenced message contains attachments.\r\n     */\n\n    this.attachment = false;\n    /**\r\n     * Whether this reply pings the original message sender, prepending an \"@\" on the author's username.\r\n     */\n\n    this.mentions = false;\n  }\n\n  render() {\n    var _a, _b, _c;\n\n    const parent = this.el.parentElement;\n\n    if (parent.tagName.toLowerCase() !== 'discord-message') {\n      throw new Error('All <discord-reply> components must be direct children of <discord-message>.');\n    }\n\n    const resolveAvatar = avatar => {\n      var _a, _b;\n\n      return (_b = (_a = options.avatars[avatar]) !== null && _a !== void 0 ? _a : avatar) !== null && _b !== void 0 ? _b : options.avatars.default;\n    };\n\n    const defaultData = {\n      author: this.author,\n      bot: this.bot,\n      verified: this.verified,\n      server: this.server,\n      roleColor: this.roleColor\n    };\n    const profileData = (_a = Reflect.get(options.profiles, this.profile)) !== null && _a !== void 0 ? _a : {};\n    const profile = Object.assign(Object.assign(Object.assign({}, defaultData), profileData), {\n      avatar: resolveAvatar((_b = profileData.avatar) !== null && _b !== void 0 ? _b : this.avatar)\n    });\n    const messageParent = parent.parentElement;\n    return index.h(index.Host, {\n      class: \"discord-replied-message\"\n    }, messageParent.compactMode ? index.h(\"div\", {\n      class: \"discord-reply-badge\"\n    }, index.h(ReplyIcon, null)) : index.h(\"img\", {\n      class: \"discord-replied-message-avatar\",\n      src: profile.avatar,\n      alt: profile.author\n    }), index.h(Fragment, null, profile.bot && !profile.server && index.h(\"span\", {\n      class: \"discord-application-tag\"\n    }, profile.verified && index.h(VerifiedTick, null), \"Bot\"), profile.server && !profile.bot && index.h(\"span\", {\n      class: \"discord-application-tag\"\n    }, \"Server\")), index.h(\"span\", {\n      class: \"discord-replied-message-username\",\n      style: {\n        color: (_c = profile.roleColor) !== null && _c !== void 0 ? _c : ''\n      }\n    }, this.mentions && '@', profile.author), index.h(\"div\", {\n      class: \"discord-replied-message-content\"\n    }, index.h(\"slot\", null), this.edited ? index.h(\"span\", {\n      class: \"discord-message-edited\"\n    }, \"(edited)\") : ''), this.command ? index.h(CommandReply, {\n      class: \"discord-replied-message-content-icon\"\n    }) : this.attachment && index.h(AttachmentReply, {\n      class: \"discord-replied-message-content-icon\"\n    }));\n  }\n\n  get el() {\n    return index.getElement(this);\n  }\n\n};\nDiscordReply.style = discordReplyCss;\n\nfunction Boost(props) {\n  return index.h(\"svg\", Object.assign({}, props, {\n    \"aria-hidden\": \"false\",\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 8 12\"\n  }), index.h(\"path\", {\n    d: \"M4 0L0 4V8L4 12L8 8V4L4 0ZM7 7.59L4 10.59L1 7.59V4.41L4 1.41L7 4.41V7.59Z\",\n    fill: \"currentColor\"\n  }), index.h(\"path\", {\n    d: \"M2 4.83V7.17L4 9.17L6 7.17V4.83L4 2.83L2 4.83Z\",\n    fill: \"currentColor\"\n  }));\n}\n\nfunction DMCall(props) {\n  return index.h(\"svg\", Object.assign({}, props, {\n    \"aria-hidden\": \"false\",\n    width: \"18\",\n    height: \"18\",\n    viewBox: \"0 0 18 18\"\n  }), index.h(\"path\", {\n    fill: \"#3ba55c\",\n    \"fill-rule\": \"evenodd\",\n    d: \"M17.7163041 15.36645368c-.0190957.02699568-1.9039523 2.6680735-2.9957762 2.63320406-3.0676659-.09785935-6.6733809-3.07188394-9.15694343-5.548738C3.08002193 9.9740657.09772497 6.3791404 0 3.3061316v-.024746C0 2.2060575 2.61386252.3152347 2.64082114.2972376c.7110335-.4971705 1.4917101-.3149497 1.80959713.1372281.19320342.2744561 2.19712724 3.2811005 2.42290565 3.6489167.09884826.1608492.14714912.3554431.14714912.5702838 0 .2744561-.07975258.5770327-.23701117.8751101-.1527655.2902036-.65262318 1.1664385-.89862055 1.594995.2673396.3768148.94804468 1.26429792 2.351016 2.66357424 1.39173858 1.39027775 2.28923588 2.07641807 2.67002628 2.34187563.4302146-.2452108 1.3086162-.74238132 1.5972981-.89423205.5447887-.28682915 1.0907006-.31944893 1.4568885-.08661115.3459689.2182151 3.3383754 2.21027167 3.6225641 2.41611376.2695862.19234426.4144887.5399137.4144887.91672846 0 .2969525-.089862.61190215-.2808189.88523346\"\n  }));\n}\n\nfunction DMEdit(props) {\n  return index.h(\"svg\", Object.assign({}, props, {\n    \"aria-hidden\": \"false\",\n    width: \"18\",\n    height: \"18\",\n    viewBox: \"0 0 18 18\"\n  }), index.h(\"g\", {\n    fill: \"none\",\n    \"fill-rule\": \"evenodd\"\n  }, index.h(\"path\", {\n    fill: \"#99AAB5\",\n    d: \"M0 14.25V18h3.75L14.81 6.94l-3.75-3.75L0 14.25zM17.71 4.04c.39-.39.39-1.02 0-1.41L15.37.29c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n  }), index.h(\"path\", {\n    d: \"M0 0h18v18H0\"\n  })));\n}\n\nfunction DMMissedCall(props) {\n  return index.h(\"svg\", Object.assign({}, props, {\n    \"aria-hidden\": \"false\",\n    width: \"18\",\n    height: \"18\",\n    viewBox: \"0 0 18 18\"\n  }), index.h(\"g\", {\n    fill: \"none\",\n    \"fill-rule\": \"evenodd\"\n  }, index.h(\"path\", {\n    d: \"M0 0h18v18H0z\"\n  }), index.h(\"path\", {\n    fill: \"#99AAB5\",\n    d: \"M3.2765961.00034226C6.344262.0982016 9.949977 3.0722262 12.43353953 5.54908026c2.48356254 2.47685405 5.4658595 6.07177934 5.56358447 9.14478814 0 1.1000741-2.61386252 2.9908969-2.64082114 3.008894-.7110335.4971705-1.4917101.3149497-1.80959713-.1372281-.19320342-.2744561-2.19712724-3.2811005-2.42290565-3.6489167-.09884826-.1608492-.14714912-.3554431-.14714912-.5702838 0-.2744561.07975258-.5770327.23701117-.8751101.1527655-.2902036.65262318-1.1664385.89862055-1.594995-.2673396-.3768148-.94804468-1.26429792-2.351016-2.66357424C8.3695281 6.8223767 7.4720308 6.1362364 7.0912404 5.87077883c-.4302146.2452108-1.3086162.74238132-1.5972981.89423205-.5447887.28682915-1.0907006.31944893-1.4568885.08661115C3.6910849 6.63340693.6986784 4.64135036.4144897 4.43550827.1449035 4.243164.000001 3.89559457.000001 3.5187798c0-.29695252.089862-.61190217.2808189-.88523348.0190957-.02699568 1.9039523-2.6680735 2.9957762-2.63320406z\"\n  })));\n}\n\nfunction SystemAlert(props) {\n  return index.h(\"svg\", Object.assign({}, props, {\n    \"aria-hidden\": \"false\",\n    width: \"20\",\n    height: \"20\",\n    viewBox: \"0 0 20 20\"\n  }), index.h(\"path\", {\n    d: \"M10 0C4.486 0 0 4.486 0 10C0 15.515 4.486 20 10 20C15.514 20 20 15.515 20 10C20 4.486 15.514 0 10 0ZM9 4H11V11H9V4ZM10 15.25C9.31 15.25 8.75 14.691 8.75 14C8.75 13.31 9.31 12.75 10 12.75C10.69 12.75 11.25 13.31 11.25 14C11.25 14.691 10.69 15.25 10 15.25Z\",\n    \"fill-rule\": \"evenodd\",\n    \"clip-rule\": \"evenodd\",\n    fill: \"currentColor\"\n  }));\n}\n\nfunction SystemError(props) {\n  return index.h(\"svg\", Object.assign({}, props, {\n    \"aria-hidden\": \"false\",\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\"\n  }), index.h(\"path\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    d: \"M18.4 4L12 10.4L5.6 4L4 5.6L10.4 12L4 18.4L5.6 20L12 13.6L18.4 20L20 18.4L13.6 12L20 5.6L18.4 4Z\",\n    fill: \"#ed4245\"\n  }));\n}\n\nfunction Thread(props) {\n  return index.h(\"svg\", Object.assign({}, props, {\n    \"aria-hidden\": \"false\",\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\"\n  }), index.h(\"path\", {\n    fill: \"currentColor\",\n    d: \"M5.43309 21C5.35842 21 5.30189 20.9325 5.31494 20.859L5.99991 17H2.14274C2.06819 17 2.01168 16.9327 2.02453 16.8593L2.33253 15.0993C2.34258 15.0419 2.39244 15 2.45074 15H6.34991L7.40991 9H3.55274C3.47819 9 3.42168 8.93274 3.43453 8.85931L3.74253 7.09931C3.75258 7.04189 3.80244 7 3.86074 7H7.75991L8.45234 3.09903C8.46251 3.04174 8.51231 3 8.57049 3H10.3267C10.4014 3 10.4579 3.06746 10.4449 3.14097L9.75991 7H15.7599L16.4523 3.09903C16.4625 3.04174 16.5123 3 16.5705 3H18.3267C18.4014 3 18.4579 3.06746 18.4449 3.14097L17.7599 7H21.6171C21.6916 7 21.7481 7.06725 21.7353 7.14069L21.4273 8.90069C21.4172 8.95811 21.3674 9 21.3091 9H17.4099L17.0495 11.04H15.05L15.4104 9H9.41035L8.35035 15H10.5599V17H7.99991L7.30749 20.901C7.29732 20.9583 7.24752 21 7.18934 21H5.43309Z\"\n  }), index.h(\"path\", {\n    fill: \"currentColor\",\n    d: \"M13.4399 12.96C12.9097 12.96 12.4799 13.3898 12.4799 13.92V20.2213C12.4799 20.7515 12.9097 21.1813 13.4399 21.1813H14.3999C14.5325 21.1813 14.6399 21.2887 14.6399 21.4213V23.4597C14.6399 23.6677 14.8865 23.7773 15.0408 23.6378L17.4858 21.4289C17.6622 21.2695 17.8916 21.1813 18.1294 21.1813H22.5599C23.0901 21.1813 23.5199 20.7515 23.5199 20.2213V13.92C23.5199 13.3898 23.0901 12.96 22.5599 12.96H13.4399Z\"\n  }));\n}\n\nfunction UserJoin(props) {\n  return index.h(\"svg\", Object.assign({}, props, {\n    \"aria-hidden\": \"false\",\n    width: \"18\",\n    height: \"18\",\n    viewBox: \"0 0 18 18\"\n  }), index.h(\"g\", {\n    fill: \"none\",\n    \"fill-rule\": \"evenodd\"\n  }, index.h(\"path\", {\n    d: \"M18 0H0v18h18z\"\n  }), index.h(\"path\", {\n    fill: \"#3ba55c\",\n    d: \"M0 8h14.2l-3.6-3.6L12 3l6 6-6 6-1.4-1.4 3.6-3.6H0\"\n  })));\n}\n\nfunction UserLeave(props) {\n  return index.h(\"svg\", Object.assign({}, props, {\n    \"aria-hidden\": \"false\",\n    width: \"18\",\n    height: \"18\",\n    viewBox: \"0 0 18 18\"\n  }), index.h(\"g\", {\n    fill: \"none\",\n    \"fill-rule\": \"evenodd\",\n    stroke: \"none\",\n    \"stroke-width\": \"1\"\n  }, index.h(\"path\", {\n    d: \"M18 0H0v18h18z\"\n  }), index.h(\"path\", {\n    fill: \"#ed4245\",\n    d: \"M3.8 8l3.6-3.6L6 3 0 9l6 6 1.4-1.4L3.8 10H18V8\"\n  })));\n}\n\nconst discordSystemMessageCss = \".discord-system-message{color:#8e9297;display:flex;font-weight:400;font-size:1rem;font-family:Whitney, Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif;padding:0px 1em;position:relative;word-wrap:break-word;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;padding-right:0;min-height:1.375rem;padding-right:48px !important;margin-top:1.0625rem}.discord-light-theme .discord-system-message{color:#2e3338;border-color:#eceeef}.discord-system-message.discord-channel-name-change{color:#fff}.discord-light-theme .discord-system-message.discord-channel-name-change{color:#060607}.discord-system-message.discord-boost-system-message svg{color:#ff73fa}.discord-system-message.discord-alert-system-message svg{color:#faa81a}.discord-system-message.discord-error-system-message svg{color:#faa81a}.discord-system-message:first-child{margin-top:0.5rem}.discord-system-message:last-child{margin-bottom:0.5rem;border-bottom-width:0}.discord-system-message .discord-message-icon{margin-right:16px;margin-top:5px;min-width:40px;display:flex;align-items:flex-start;justify-content:center}.discord-system-message .discord-message-icon svg{width:16px;height:16px}.discord-system-message .discord-message-timestamp{color:#72767d;font-size:12px;margin-left:3px}.discord-light-theme .discord-system-message .discord-message-timestamp{color:#747f8d}.discord-system-message .discord-message-system-edited{color:#72767d;font-size:10px}.discord-light-theme .discord-system-message .discord-message-edited{color:#99aab5}.discord-system-message .discord-message-content{width:100%;line-height:160%;font-weight:normal;padding-top:2px;display:flex;flex-direction:column}.discord-system-message .discord-message-content i{font-style:normal;cursor:pointer;color:white;font-weight:500}.discord-light-theme .discord-system-message .discord-message-content i{color:#060607}.discord-system-message .discord-message-content i:hover{text-decoration:underline}.discord-system-message:hover{background-color:rgba(4, 4, 5, 0.07)}.discord-light-theme .discord-system-message:hover{background-color:rgba(6, 6, 7, 0.02)}.discord-system-message.discord-system-message-has-thread:after{width:2rem;left:2.2rem;top:1.75rem;border-left:2px solid #4f545c;border-bottom:2px solid #4f545c;border-bottom-left-radius:8px;bottom:29px;content:'';position:absolute}.discord-light-theme .discord-system-message.discord-system-message-has-thread:after{border-color:#747f8d}.discord-message .discord-author-info{display:inline-flex;align-items:center;font-size:15px}.discord-message .discord-author-info .discord-author-username{color:#fff;font-size:1.1em;font-weight:500;letter-spacing:0.5px}.discord-light-theme .discord-message .discord-author-info .discord-author-username{color:#23262a}.discord-message .discord-author-info .discord-application-tag{background-color:#5865f2;color:#fff;font-size:0.65em;margin-left:5px;border-radius:3px;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-message .discord-author-info .discord-application-tag-verified{display:inline-block;width:0.9375rem;height:0.9375rem;margin-left:-0.25rem}.discord-compact-mode .discord-message .discord-author-info .discord-author-username{margin-left:8px;margin-right:4px}.discord-compact-mode .discord-message .discord-author-info .discord-application-tag{margin-left:0;margin-left:5px;margin-right:5px;padding-left:3px;padding-right:3px}\";\nconst DiscordSystemMessage = class {\n  constructor(hostRef) {\n    index.registerInstance(this, hostRef);\n    /**\r\n     * The timestamp to use for the message date.\r\n     */\n\n    this.timestamp = new Date();\n    /**\r\n     * The type of system message this is, this will change the icon shown.\r\n     * Valid values: `join`, `leave`, `call`, `missed-call`, `boost`, `edit`, `thread`, `alert`, and `error`.\r\n     */\n\n    this.type = 'join';\n    /**\r\n     * Whether this message is to show channel name changes, used to match Discord's style.\r\n     */\n\n    this.channelName = false;\n  }\n\n  handleType(value) {\n    if (typeof value !== 'string') {\n      throw new TypeError('DiscordSystemMessage `type` prop must be a string.');\n    } else if (!['join', 'leave', 'call', 'missed-call', 'boost', 'edit', 'thread', 'alert', 'error'].includes(value)) {\n      throw new RangeError(\"DiscordSystemMessage `type` prop must be one of: 'join', 'leave', 'call', 'missed-call', 'boost', 'edit', 'thread' 'alert', 'error'\");\n    }\n  }\n\n  updateTimestamp(value) {\n    return handleTimestamp(value);\n  }\n\n  componentWillRender() {\n    this.timestamp = handleTimestamp(this.timestamp);\n  }\n\n  render() {\n    const parent = this.el.parentElement;\n\n    if (parent.tagName.toLowerCase() !== 'discord-messages') {\n      throw new Error('All <discord-system-message> components must be direct children of <discord-messages>.');\n    }\n\n    let icon = '';\n\n    switch (this.type) {\n      case 'join':\n        icon = index.h(UserJoin, null);\n        break;\n\n      case 'leave':\n        icon = index.h(UserLeave, null);\n        break;\n\n      case 'call':\n        icon = index.h(DMCall, null);\n        break;\n\n      case 'missed-call':\n        icon = index.h(DMMissedCall, null);\n        break;\n\n      case 'edit':\n        icon = index.h(DMEdit, null);\n        break;\n\n      case 'boost':\n        icon = index.h(Boost, null);\n        break;\n\n      case 'thread':\n        icon = index.h(Thread, null);\n        break;\n\n      case 'alert':\n        icon = index.h(SystemAlert, null);\n        break;\n\n      case 'error':\n        icon = index.h(SystemError, null);\n        break;\n    }\n\n    const hasThread = // @ts-expect-error ts doesn't understand this\n    Array.from(this.el.children).some(child => {\n      return child.tagName.toLowerCase() === 'discord-thread';\n    });\n    return index.h(index.Host, {\n      class: clsx('discord-system-message', `discord-${this.type}-system-message`, {\n        'discord-system-message-has-thread': hasThread,\n        'discord-channel-name-change': this.channelName\n      })\n    }, index.h(\"div\", {\n      class: \"discord-message-icon\"\n    }, icon), index.h(\"div\", {\n      class: \"discord-message-content\"\n    }, index.h(\"span\", null, index.h(\"slot\", null), index.h(\"span\", {\n      class: \"discord-message-timestamp\"\n    }, this.timestamp)), index.h(\"slot\", {\n      name: \"reactions\"\n    }), index.h(\"slot\", {\n      name: \"thread\"\n    })));\n  }\n\n  get el() {\n    return index.getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"type\": [\"handleType\"],\n      \"timestamp\": [\"updateTimestamp\"]\n    };\n  }\n\n};\nDiscordSystemMessage.style = discordSystemMessageCss;\nconst discordTenorVideoCss = \".discord-tenor-video{color:#dcddde;display:flex;font-size:13px;line-height:150%;margin-bottom:8px;margin-top:8px}.discord-tenor-video .discord-tenor-video-wrapper{display:block;position:relative;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;overflow:hidden;border-radius:4px}.discord-tenor-video .discord-tenor-video-wrapper video{-webkit-box-align:center;-webkit-box-pack:center;align-items:center;border-radius:0;cursor:pointer;display:flex;height:100%;justify-content:center;max-height:100%;width:100%;left:0px;top:0px}\";\nconst DiscordTenorVideo = class {\n  constructor(hostRef) {\n    index.registerInstance(this, hostRef);\n  }\n\n  render() {\n    return index.h(index.Host, {\n      class: \"discord-tenor-video\"\n    }, index.h(\"div\", {\n      class: \"discord-tenor-video-wrapper\",\n      style: {\n        height: `${this.height}px`,\n        width: `${this.width}px`\n      }\n    }, index.h(\"video\", {\n      muted: true,\n      preload: \"auto\",\n      autoplay: true,\n      loop: true,\n      src: this.url,\n      height: this.height,\n      width: this.width\n    })));\n  }\n\n  get el() {\n    return index.getElement(this);\n  }\n\n};\nDiscordTenorVideo.style = discordTenorVideoCss;\nconst discordThreadCss = \".discord-thread{background-color:#2f3136;border-radius:4px;cursor:pointer;margin-top:8px;max-width:480px;min-width:0;padding:8px;display:inline-flex;width:fit-content;flex-direction:column}.discord-light-theme .discord-thread{background-color:#f2f3f5}.discord-thread .discord-thread-top{display:flex}.discord-thread .discord-thread-bottom{font-size:0.875rem;line-height:1.125rem;align-items:center;color:#b9bbbe;display:flex;margin-top:2px;white-space:nowrap}.discord-light-theme .discord-thread-bottom{color:#4f5660}.discord-thread .discord-thread-name{font-size:0.875rem;font-weight:600;line-height:1.125rem;color:white;margin-right:8px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.discord-light-theme .discord-thread-name{color:#060607}.discord-thread .discord-thread-cta{color:#00aff4;flex-shrink:0;font-size:0.875rem;font-weight:600;line-height:1.125rem}.discord-thread:hover .discord-thread-cta{text-decoration:underline}\";\nconst DiscordThread = class {\n  constructor(hostRef) {\n    index.registerInstance(this, hostRef);\n    /**\r\n     * The name of the thread.\r\n     */\n\n    this.name = 'Thread';\n    /**\r\n     * The the text within the call to action text. (i.e. 'See Thread' or 'x Messages')\r\n     */\n\n    this.cta = 'See Thread';\n  }\n\n  render() {\n    return index.h(index.Host, {\n      class: \"discord-thread\"\n    }, index.h(\"div\", {\n      class: \"discord-thread-top\"\n    }, index.h(\"span\", {\n      class: \"discord-thread-name\"\n    }, this.name), index.h(\"span\", {\n      class: \"discord-thread-cta\",\n      \"aria-hidden\": \"true\"\n    }, this.cta, \" \\u203A\")), index.h(\"span\", {\n      class: \"discord-thread-bottom\"\n    }, index.h(\"slot\", null)));\n  }\n\n  get el() {\n    return index.getElement(this);\n  }\n\n};\nDiscordThread.style = discordThreadCss;\nconst discordThreadMessageCss = \".discord-thread-message{height:18px;min-width:0;display:flex;align-items:center;font-size:0.875rem;line-height:1.125rem}.discord-thread-message .discord-thread-message-avatar{margin-right:8px;flex:0 0 auto;width:16px;height:16px;border-radius:50%;user-select:none}.discord-thread-message .discord-thread-message-username{flex-shrink:0;font-size:inherit;line-height:inherit;margin-right:0.25rem;opacity:0.64;color:white;display:inline;vertical-align:baseline;position:relative;overflow:hidden}.discord-light-theme .discord-thread-message .discord-thread-message-username{color:#060607}.discord-thread-message .discord-application-tag{background-color:#5865f2;color:#fff;font-size:0.65em;margin-right:5px;border-radius:3px;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-thread-message .discord-application-tag-verified{display:inline-block;width:0.9375rem;height:0.9375rem;margin-left:-0.25rem}.discord-thread-message .discord-thread-message-content{display:flex;align-items:baseline}.discord-thread-message .discord-message-edited{color:#72767d;font-size:10px;margin-left:5px}.discord-thread-message .discord-thread-message-timestamp{color:#72767d;flex-shrink:0;margin-left:8px;font-size:0.875rem;line-height:1.125rem}.discord-light-theme .discord-thread-message .discord-thread-message-timestamp,.discord-light-theme .discord-thread-message .discord-message-edited{color:#747f8d}\";\nconst DiscordThreadMessage = class {\n  constructor(hostRef) {\n    index.registerInstance(this, hostRef);\n    /**\r\n     * The message author's username.\r\n     * @default 'User'\r\n     */\n\n    this.author = 'User';\n    /**\r\n     * Whether the message author is a bot or not.\r\n     * Only works if `server` is `false` or `undefined`.\r\n     */\n\n    this.bot = false;\n    /**\r\n     * Whether the message author is a server crosspost webhook or not.\r\n     * Only works if `bot` is `false` or `undefined`.\r\n     */\n\n    this.server = false;\n    /**\r\n     * Whether the bot is verified or not.\r\n     * Only works if `bot` is `true`\r\n     */\n\n    this.verified = false;\n    /**\r\n     * Whether the message has been edited or not.\r\n     */\n\n    this.edited = false;\n    /**\r\n     * The relative timestamp of the message.\r\n     */\n\n    this.relativeTimestamp = '1m ago';\n  }\n\n  render() {\n    var _a, _b;\n\n    const resolveAvatar = avatar => {\n      var _a, _b;\n\n      return (_b = (_a = options.avatars[avatar]) !== null && _a !== void 0 ? _a : avatar) !== null && _b !== void 0 ? _b : options.avatars.default;\n    };\n\n    const defaultData = {\n      author: this.author,\n      bot: this.bot,\n      verified: this.verified,\n      server: this.server,\n      roleColor: this.roleColor\n    };\n    const profileData = (_a = Reflect.get(options.profiles, this.profile)) !== null && _a !== void 0 ? _a : {};\n    const profile = Object.assign(Object.assign(Object.assign({}, defaultData), profileData), {\n      avatar: resolveAvatar((_b = profileData.avatar) !== null && _b !== void 0 ? _b : this.avatar)\n    });\n    return index.h(index.Host, {\n      class: \"discord-thread-message\"\n    }, index.h(\"img\", {\n      src: profile.avatar,\n      class: \"discord-thread-message-avatar\",\n      alt: profile.author\n    }), index.h(Fragment, null, profile.bot && !profile.server && index.h(\"span\", {\n      class: \"discord-application-tag\"\n    }, profile.verified && index.h(VerifiedTick, null), \"Bot\"), profile.server && !profile.bot && index.h(\"span\", {\n      class: \"discord-application-tag\"\n    }, \"Server\")), index.h(\"span\", {\n      class: \"discord-thread-message-username\",\n      style: {\n        color: profile.roleColor\n      }\n    }, profile.author), index.h(\"div\", {\n      class: \"discord-thread-message-content\"\n    }, index.h(\"slot\", null), this.edited ? index.h(\"span\", {\n      class: \"discord-message-edited\"\n    }, \"(edited)\") : ''), index.h(\"span\", {\n      class: \"discord-thread-message-timestamp\"\n    }, this.relativeTimestamp));\n  }\n\n  get el() {\n    return index.getElement(this);\n  }\n\n};\nDiscordThreadMessage.style = discordThreadMessageCss;\nexports.discord_action_row = DiscordActionRow;\nexports.discord_attachment = DiscordAttachment;\nexports.discord_attachments = DiscordAttachments;\nexports.discord_button = DiscordButton;\nexports.discord_command = DiscordCommand;\nexports.discord_embed = DiscordEmbed;\nexports.discord_embed_field = DiscordEmbedField;\nexports.discord_embed_fields = DiscordEmbedFields;\nexports.discord_invite = DiscordInvite;\nexports.discord_mention = DiscordMention;\nexports.discord_message = DiscordMessage;\nexports.discord_messages = DiscordMessages;\nexports.discord_reaction = DiscordReaction;\nexports.discord_reactions = DiscordReactions;\nexports.discord_reply = DiscordReply;\nexports.discord_system_message = DiscordSystemMessage;\nexports.discord_tenor_video = DiscordTenorVideo;\nexports.discord_thread = DiscordThread;\nexports.discord_thread_message = DiscordThreadMessage;","map":{"version":3,"sources":["/home/huanchieh/Downloads/acgen-main/node_modules/@skyra/discord-components-core/dist/cjs/discord-action-row_19.cjs.entry.js"],"names":["Object","defineProperty","exports","value","index","require","options","discordActionRowCss","DiscordActionRow","constructor","hostRef","registerInstance","render","h","Host","class","style","padZeroes","month","day","year","split","padStart","formatDate","Date","getMonth","getDate","getFullYear","formatTime","hour24","getHours","getMinutes","toString","hour","meridiem","handleTimestamp","useTime","TypeError","findSlotElement","elements","name","Array","from","find","child","slot","IMAGE_EXTENSION","validateImageExtension","url","test","Error","discordAttachmentCss","DiscordAttachment","alt","componentWillRender","height","width","src","el","getElement","discordAttachmentsCss","DiscordAttachments","Fragment","_props","children","LaunchIcon","props","assign","viewBox","fill","d","discordButtonCss","DiscordButton","emojiName","disabled","type","handleType","includes","RangeError","parent","parentElement","tagName","toLowerCase","content","emoji","draggable","href","target","rel","watchers","CommandIcon","xmlns","discordCommandCss","DiscordCommand","author","_a","_b","_c","resolveAvatar","avatar","avatars","default","defaultData","bot","verified","server","roleColor","profileData","Reflect","get","profiles","profile","messageParent","compactMode","color","command","toVal","mix","k","y","str","isArray","length","clsx","i","tmp","x","arguments","discordEmbedCss","DiscordEmbed","updateTimestamp","isNaN","getTime","timestamp","footerSlot","provider","authorName","authorImage","authorUrl","embedTitle","image","video","Boolean","renderMedia","thumbnail","footerImage","controls","muted","preload","poster","discordEmbedFieldCss","DiscordEmbedField","inline","inlineIndex","validInlineIndices","Set","checkInlineIndex","has","Number","SyntaxError","fieldTitle","discordEmbedFieldsCss","DiscordEmbedFields","GuildBadge","PartnerBadgeOverlay","VerifiedBadgeOverlay","discordInviteCss","DiscordInvite","icon","defaultDiscordAvatars","blue","online","members","partnered","toLocaleString","removeHash","hex","charAt","slice","parseHex","nakedHex","isShort","twoDigitHexR","concat","twoDigitHexG","twoDigitHexB","twoDigitHexA","r","g","b","a","hexToDecimal","parseInt","hexesToDecimals","_ref","toFixed","isNumeric","n","parseFloat","isFinite","formatRgb","decimalObject","parameterA","parsedA","hexToRgba","hashlessHex","hexObject","build","ChannelThread","LockedVoiceChannel","VoiceChannel","ChannelIcon","discordMentionCss","DiscordMention","highlight","componentDidLoad","addEventListener","setHoverColor","bind","resetHoverColor","disconnectedCallback","removeEventListener","backgroundColor","colorStyle","mentionPrepend","VerifiedTick","AuthorInfo","compact","discordMessageCss","DiscordMessage","edited","twentyFour","_d","_e","_f","_g","_h","_j","_k","_l","_m","highlightMention","some","hasThread","discordMessagesCss","DiscordMessages","lightTheme","defaultTheme","defaultMode","noBackground","defaultBackground","discordReactionCss","DiscordReaction","count","reacted","interactive","onClick","handleReactionClick","event","shiftKey","discordReactionsCss","DiscordReactions","AttachmentReply","CommandReply","ReplyIcon","discordReplyCss","DiscordReply","attachment","mentions","Boost","DMCall","DMEdit","DMMissedCall","SystemAlert","SystemError","Thread","UserJoin","UserLeave","stroke","discordSystemMessageCss","DiscordSystemMessage","channelName","discordTenorVideoCss","DiscordTenorVideo","autoplay","loop","discordThreadCss","DiscordThread","cta","discordThreadMessageCss","DiscordThreadMessage","relativeTimestamp","discord_action_row","discord_attachment","discord_attachments","discord_button","discord_command","discord_embed","discord_embed_field","discord_embed_fields","discord_invite","discord_mention","discord_message","discord_messages","discord_reaction","discord_reactions","discord_reply","discord_system_message","discord_tenor_video","discord_thread","discord_thread_message"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst index = require('./index-1b96e428.js');\nconst options = require('./options-2e2e9e25.js');\n\nconst discordActionRowCss = \".discord-action-row{display:flex;flex-wrap:nowrap}\";\n\nconst DiscordActionRow = class {\r\n  constructor(hostRef) {\r\n    index.registerInstance(this, hostRef);\r\n  }\r\n  render() {\r\n    return (index.h(index.Host, { class: \"discord-action-row\" }, index.h(\"slot\", null)));\r\n  }\r\n};\r\nDiscordActionRow.style = discordActionRowCss;\n\nconst padZeroes = (value) => {\n  const [month, day, year] = value.split('/');\n  return `${month.padStart(2, '0')}/${day.padStart(2, '0')}/${year}`;\n};\nconst formatDate = (value) => {\n  if (!(value instanceof Date))\n    return value;\n  return padZeroes(`${value.getMonth() + 1}/${value.getDate()}/${value.getFullYear()}`);\n};\nconst formatTime = (value, hour24 = false) => {\n  if (!(value instanceof Date))\n    return value;\n  if (hour24)\n    return `${value.getHours()}:${value.getMinutes().toString().padStart(2, '0')}`;\n  const hour = value.getHours() % 12 || 12;\n  const meridiem = value.getHours() < 12 ? 'AM' : 'PM';\n  return `${hour}:${value.getMinutes().toString().padStart(2, '0')} ${meridiem}`;\n};\nconst handleTimestamp = (value, useTime = false, hour24 = false) => {\n  if (!(value instanceof Date) && typeof value !== 'string') {\n    throw new TypeError('Timestamp prop must be a Date object or a string.');\n  }\n  return useTime ? formatTime(value, hour24) : formatDate(value);\n};\nconst findSlotElement = (elements, name) => {\n  return Array.from(elements).find((child) => (child === null || child === void 0 ? void 0 : child.slot) === name);\n};\nconst IMAGE_EXTENSION = /\\.(bmp|jpe?g|png|gif|webp|tiff)$/i;\nconst validateImageExtension = (url) => {\n  if (!IMAGE_EXTENSION.test(url))\n    throw new Error(`The url of an image for discord-attachment should match the regex ${IMAGE_EXTENSION}`);\n};\n\nconst discordAttachmentCss = \".discord-attachment{color:#dcddde;display:flex;font-size:13px;line-height:150%;margin-bottom:8px;margin-top:8px}.discord-attachment .discord-image-wrapper{display:block;position:relative;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;overflow:hidden;border-radius:3px}\";\n\nconst DiscordAttachment = class {\r\n  constructor(hostRef) {\r\n    index.registerInstance(this, hostRef);\r\n    /**\r\n     * The alt text to show in case the image was unable to load\r\n     * @default 'discord attachment'\r\n     */\r\n    this.alt = 'discord attachment';\r\n  }\r\n  componentWillRender() {\r\n    validateImageExtension(this.url);\r\n  }\r\n  render() {\r\n    return (index.h(index.Host, { class: \"discord-attachment\" }, index.h(\"div\", { class: \"discord-image-wrapper\", style: { height: `${this.height}px`, width: `${this.width}px` } }, index.h(\"img\", { alt: this.alt, src: this.url, height: this.height, width: this.width }))));\r\n  }\r\n  get el() { return index.getElement(this); }\r\n};\r\nDiscordAttachment.style = discordAttachmentCss;\n\nconst discordAttachmentsCss = \".discord-message .discord-attachments{display:grid;grid-auto-flow:row;grid-row-gap:0.25rem;text-indent:0;min-height:0;min-width:0;padding-top:0.125rem;padding-bottom:0.125rem;position:relative}.discord-message .discord-attachments>*{justify-self:start;-ms-flex-item-align:start;align-self:start}\";\n\nconst DiscordAttachments = class {\r\n  constructor(hostRef) {\r\n    index.registerInstance(this, hostRef);\r\n  }\r\n  render() {\r\n    return (index.h(index.Host, { class: \"discord-attachments\" }, index.h(\"slot\", null)));\r\n  }\r\n};\r\nDiscordAttachments.style = discordAttachmentsCss;\n\nfunction Fragment(_props, children) {\n  return [...children];\n}\n\nfunction LaunchIcon(props) {\n  return (index.h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"16\", height: \"16\", viewBox: \"0 0 24 24\" }),\n    index.h(\"path\", { fill: \"currentColor\", d: \"M10 5V3H5.375C4.06519 3 3 4.06519 3 5.375V18.625C3 19.936 4.06519 21 5.375 21H18.625C19.936 21 21 19.936 21 18.625V14H19V19H5V5H10Z\" }),\n    index.h(\"path\", { fill: \"currentColor\", d: \"M21 2.99902H14V4.99902H17.586L9.29297 13.292L10.707 14.706L19 6.41302V9.99902H21V2.99902Z\" })));\n}\n\nconst discordButtonCss = \".discord-button{display:flex;justify-content:center;align-items:center;cursor:pointer;margin:4px 8px 4px 0;padding:2px 16px;width:auto;height:32px;min-width:60px;min-height:32px;-webkit-transition:background-color 0.17s ease, color 0.17s ease;transition:background-color 0.17s ease, color 0.17s ease;border-radius:3px;font-size:14px;font-weight:500;line-height:16px;text-decoration:none !important}.discord-button.discord-button-success{color:#fff;background-color:#3ba55d}.discord-button.discord-button-success.discord-button-hoverable:hover{background-color:#2d7d46}.discord-button.discord-button-destructive{color:#fff;background-color:#ed4245}.discord-button.discord-button-destructive.discord-button-hoverable:hover{background-color:#c03537}.discord-button.discord-button-primary{color:#fff;background-color:#5865f2}.discord-button.discord-button-primary.discord-button-hoverable:hover{background-color:#4752c4}.discord-button.discord-button-secondary{color:#fff;background-color:#4f545c}.discord-button.discord-button-secondary.discord-button-hoverable:hover{background-color:#5d6269}.discord-button.discord-button-disabled{cursor:not-allowed;opacity:0.5}.discord-button .discord-button-launch{margin-left:8px}.discord-button .discord-button-emoji{margin-right:4px;object-fit:contain;width:1.375em;height:1.375em;vertical-align:bottom}\";\n\nconst DiscordButton = class {\r\n  constructor(hostRef) {\r\n    index.registerInstance(this, hostRef);\r\n    /**\r\n     * The name of the emoji used in the button.\r\n     */\r\n    this.emojiName = 'emoji';\r\n    /**\r\n     * Whether to show the button as disabled.\r\n     */\r\n    this.disabled = false;\r\n    /**\r\n     * The type of button this is, this will change the color of the button.\r\n     * Valid values: `primary`, `secondary`, `success`, `destructive`.\r\n     */\r\n    this.type = 'secondary';\r\n  }\r\n  handleType(value) {\r\n    if (typeof value !== 'string') {\r\n      throw new TypeError('DiscordButton `type` prop must be a string.');\r\n    }\r\n    else if (!['primary', 'secondary', 'success', 'destructive'].includes(value)) {\r\n      throw new RangeError(\"DiscordButton `type` prop must be one of: 'primary', 'secondary', 'success', 'destructive'\");\r\n    }\r\n  }\r\n  render() {\r\n    const parent = this.el.parentElement;\r\n    if (parent.tagName.toLowerCase() !== 'discord-action-row') {\r\n      throw new Error('All <discord-button> components must be direct children of <discord-action-row>.');\r\n    }\r\n    const content = (index.h(Fragment, null, this.emoji && index.h(\"img\", { src: this.emoji, alt: this.emojiName, draggable: false, class: \"discord-button-emoji\" }), index.h(\"span\", null, index.h(\"slot\", null)), this.url && index.h(LaunchIcon, { class: \"discord-button-launch\" })));\r\n    return this.url && !this.disabled ? (index.h(\"a\", { class: \"discord-button discord-button-secondary\", href: this.url, target: \"_blank\", rel: \"noopener noreferrer\" }, content)) : (index.h(index.Host, { class: `discord-button discord-button-${this.type} discord-button-${this.disabled ? 'disabled' : 'hoverable'}` }, content));\r\n  }\r\n  get el() { return index.getElement(this); }\r\n  static get watchers() { return {\r\n    \"type\": [\"handleType\"]\r\n  }; }\r\n};\r\nDiscordButton.style = discordButtonCss;\n\nfunction CommandIcon(props) {\n  return (index.h(\"svg\", Object.assign({}, props, { width: \"6\", height: \"10\", viewBox: \"0 0 6 10\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" }),\n    index.h(\"path\", { d: \"M4.61241 0L6 0.845294L1.38759 10L0 9.15471L4.61241 0Z\", fill: \"currentColor\" })));\n}\n\nconst discordCommandCss = \".discord-replied-message.discord-executed-command .discord-command-name{color:#00aff4;font-weight:500}.discord-replied-message.discord-executed-command .discord-command-name:hover{color:#00aff4;text-decoration:underline}.discord-replied-message.discord-executed-command .discord-replied-message-username{margin-right:0}.discord-replied-message{color:#b9bbbe;display:flex;font-size:0.875rem;font-family:Whitney, Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif;padding-top:2px;margin-left:56px;margin-bottom:4px;align-items:center;line-height:1.125rem;position:relative;white-space:pre;user-select:none}.discord-light-theme .discord-replied-message{color:#4f5660}.discord-compact-mode .discord-replied-message{margin-left:62px;margin-bottom:0}.discord-replied-message:before{content:'';display:block;position:absolute;top:50%;right:100%;bottom:0;left:-36px;margin-right:4px;margin-top:-1px;margin-left:-1px;margin-bottom:-2px;border-left:2px solid #4f545c;border-bottom:0 solid #4f545c;border-right:0 solid #4f545c;border-top:2px solid #4f545c;border-top-left-radius:6px}.discord-light-theme .discord-replied-message:before{border-color:#747f8d}.discord-replied-message .discord-replied-message-avatar,.discord-replied-message .discord-reply-badge{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:16px;height:16px;border-radius:50%;user-select:none;margin-right:0.25rem}.discord-replied-message .discord-reply-badge{display:flex;align-items:center;justify-content:center;color:#b9bbbe;background:#202225}.discord-light-theme .discord-replied-message .discord-reply-badge{color:#4f5660;background:#e3e5e8}.discord-replied-message .discord-application-tag{background-color:hsl(235, 85.6%, 64.7%);color:#fff;font-size:0.625rem;margin-right:0.25rem;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-replied-message .discord-application-tag .discord-application-tag-verified{width:0.9375rem;height:0.9375rem;margin-left:-0.1rem}.discord-replied-message .discord-replied-message-username{flex-shrink:0;font-size:inherit;line-height:inherit;margin-right:0.25rem;opacity:0.64}.discord-replied-message .discord-replied-message-content{color:inherit;font-size:inherit;line-height:inherit;white-space:pre;text-overflow:ellipsis;user-select:none;cursor:pointer}.discord-replied-message .discord-replied-message-content:hover{color:#fff}.discord-light-theme .discord-replied-message .discord-replied-message-content:hover{color:#000}.discord-replied-message .discord-replied-message-content .discord-message-edited{margin-left:0.25rem}.discord-replied-message .discord-replied-message-content-icon{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:20px;height:20px;margin-left:4px}.discord-message .discord-author-info{display:inline-flex;align-items:center;font-size:15px}.discord-message .discord-author-info .discord-author-username{color:#fff;font-size:1.1em;font-weight:500;letter-spacing:0.5px}.discord-light-theme .discord-message .discord-author-info .discord-author-username{color:#23262a}.discord-message .discord-author-info .discord-application-tag{background-color:#5865f2;color:#fff;font-size:0.65em;margin-left:5px;border-radius:3px;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-message .discord-author-info .discord-application-tag-verified{display:inline-block;width:0.9375rem;height:0.9375rem;margin-left:-0.25rem}.discord-compact-mode .discord-message .discord-author-info .discord-author-username{margin-left:8px;margin-right:4px}.discord-compact-mode .discord-message .discord-author-info .discord-application-tag{margin-left:0;margin-left:5px;margin-right:5px;padding-left:3px;padding-right:3px}\";\n\nconst DiscordCommand = class {\r\n  constructor(hostRef) {\r\n    index.registerInstance(this, hostRef);\r\n    /**\r\n     * The message author's username.\r\n     * @default 'User'\r\n     */\r\n    this.author = 'User';\r\n  }\r\n  render() {\r\n    var _a, _b, _c;\r\n    const parent = this.el.parentElement;\r\n    if (parent.tagName.toLowerCase() !== 'discord-message') {\r\n      throw new Error('All <discord-command> components must be direct children of <discord-message>.');\r\n    }\r\n    const resolveAvatar = (avatar) => { var _a, _b; return (_b = (_a = options.avatars[avatar]) !== null && _a !== void 0 ? _a : avatar) !== null && _b !== void 0 ? _b : options.avatars.default; };\r\n    const defaultData = { author: this.author, bot: false, verified: false, server: false, roleColor: this.roleColor };\r\n    const profileData = (_a = Reflect.get(options.profiles, this.profile)) !== null && _a !== void 0 ? _a : {};\r\n    const profile = Object.assign(Object.assign(Object.assign({}, defaultData), profileData), { avatar: resolveAvatar((_b = profileData.avatar) !== null && _b !== void 0 ? _b : this.avatar) });\r\n    const messageParent = parent.parentElement;\r\n    return (index.h(index.Host, { class: \"discord-replied-message discord-executed-command\" }, messageParent.compactMode ? (index.h(\"div\", { class: \"discord-reply-badge\" }, index.h(CommandIcon, null))) : (index.h(\"img\", { class: \"discord-replied-message-avatar\", src: profile.avatar, alt: profile.author })), index.h(\"span\", { class: \"discord-replied-message-username\", style: { color: (_c = profile.roleColor) !== null && _c !== void 0 ? _c : '' } }, profile.author), ' used ', index.h(\"div\", { class: \"discord-replied-message-content discord-command-name\" }, this.command)));\r\n  }\r\n  get el() { return index.getElement(this); }\r\n};\r\nDiscordCommand.style = discordCommandCss;\n\nfunction toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nfunction clsx () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x;\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n\nconst discordEmbedCss = \".discord-embed{color:#dcddde;display:flex;font-size:13px;line-height:150%;margin-bottom:8px;margin-top:8px}.discord-light-theme .discord-embed{color:#2e3338}.discord-embed .discord-left-border{background-color:#202225;border-radius:4px 0 0 4px;flex-shrink:0;width:4px}.discord-light-theme .discord-embed .discord-left-border{background-color:#e3e5e8}.discord-embed .discord-embed-root{display:grid;grid-auto-flow:row;grid-row-gap:0.25rem;min-height:0;min-width:0;text-indent:0}.discord-embed .discord-embed-wrapper{background-color:#2f3136;max-width:520px;border:1px solid rgba(46, 48, 54, 0.6);border-radius:0 4px 4px 0;justify-self:start;align-self:start;display:grid;box-sizing:border-box}.discord-light-theme .discord-embed .discord-embed-wrapper{background-color:rgba(249, 249, 249, 0.3);border-color:rgba(205, 205, 205, 0.3)}.discord-embed .discord-embed-wrapper .discord-embed-grid{display:inline-grid;grid-template-columns:auto -webkit-min-content;grid-template-columns:auto min-content;grid-template-columns:auto;grid-template-rows:auto;padding:0.5rem 1rem 1rem 0.75rem}.discord-embed .discord-embed-thumbnail{border-radius:4px;flex-shrink:0;grid-column:2/2;grid-row:1/8;justify-self:end;margin-left:16px;margin-top:8px;max-height:80px;max-width:80px;object-fit:contain;object-position:top center}.discord-embed .discord-embed-author{-webkit-box-align:center;align-items:center;color:#fff;font-size:0.875rem;display:flex;font-weight:500;grid-column:1 / 1;margin-top:8px;min-width:0}.discord-light-theme .discord-embed .discord-embed-author{color:#4f545c}.discord-embed .discord-embed-author a{color:#fff;font-weight:700}.discord-light-theme .discord-embed .discord-embed-author a{color:#4f545c}.discord-embed .discord-embed-author .discord-author-image{border-radius:50%;height:24px;margin-right:8px;width:24px}.discord-embed .discord-embed-provider{font-size:0.75rem;line-height:1rem;font-weight:400;grid-column:1/1;margin-top:8px;unicode-bidi:plaintext;text-align:left}.discord-light-theme .discord-embed .discord-embed-provider{color:#4f545c}.discord-embed .discord-embed-title{-webkit-box-align:center;align-items:center;color:#fff;display:inline-block;font-size:1rem;font-weight:600;grid-column:1 / 1;margin-top:8px;min-width:0}.discord-embed .discord-embed-title a{color:#00b0f4;font-weight:600}.discord-embed .discord-embed-description{font-size:0.875rem;font-weight:400;grid-column:1/1;line-height:1.125rem;margin-top:8px;min-width:0;white-space:pre-line}.discord-embed .discord-embed-image{border-radius:4px;max-width:100%}.discord-embed .discord-embed-media{border-radius:4px;contain:paint;display:block;grid-column:1/1;margin-top:16px}.discord-embed .discord-embed-media.discord-embed-media-video{height:225px}.discord-embed .discord-embed.media .discord-embed-image{overflow:hidden;position:relative;user-select:text}.discord-embed .discord-embed-media .discord-embed-video{-webkit-box-align:center;-webkit-box-pack:center;align-items:center;border-radius:0;cursor:pointer;display:flex;height:100%;justify-content:center;max-height:100%;width:100%;width:400px;height:225px;left:0px;top:0px}.discord-embed .discord-embed-footer{-webkit-box-align:center;align-items:center;color:#fff;display:flex;font-size:0.85em;grid-column:1/3;grid-row:auto/auto;margin-top:8px}.discord-embed .discord-embed-footer .discord-footer-image{border-radius:50%;flex-shrink:0;height:20px;margin-right:8px;width:20px}.discord-embed .discord-embed-footer .discord-footer-separator{color:#fff;font-weight:700;margin:0 4px}.discord-light-theme .discord-embed .discord-embed-footer .discord-footer-separator{color:#e4e4e4}\";\n\nconst DiscordEmbed = class {\r\n  constructor(hostRef) {\r\n    index.registerInstance(this, hostRef);\r\n  }\r\n  updateTimestamp(value) {\r\n    if (!value || isNaN(new Date(value).getTime()))\r\n      return null;\r\n    return handleTimestamp(new Date(value));\r\n  }\r\n  componentWillRender() {\r\n    this.timestamp = this.updateTimestamp(this.timestamp);\r\n  }\r\n  render() {\r\n    const footerSlot = findSlotElement(this.el.children, 'footer');\r\n    return (index.h(\"div\", { class: \"discord-embed\" }, index.h(\"div\", { style: { 'background-color': this.color }, class: \"discord-left-border\" }), index.h(\"div\", { class: \"discord-embed-root\" }, index.h(\"div\", { class: \"discord-embed-wrapper\" }, index.h(\"div\", { class: \"discord-embed-grid\" }, this.provider && (index.h(\"div\", { class: \"discord-embed-provider\" }, index.h(Fragment, null, this.provider))), this.authorName && (index.h(\"div\", { class: \"discord-embed-author\" }, this.authorImage ? index.h(\"img\", { src: this.authorImage, alt: \"\", class: \"discord-author-image\" }) : '', this.authorUrl ? (index.h(\"a\", { href: this.authorUrl, target: \"_blank\", rel: \"noopener noreferrer\" }, this.authorName)) : (index.h(Fragment, null, this.authorName)))), this.embedTitle && (index.h(\"div\", { class: \"discord-embed-title\" }, this.url ? (index.h(\"a\", { href: this.url, target: \"_blank\", rel: \"noopener noreferrer\" }, this.embedTitle)) : (index.h(Fragment, null, this.embedTitle)))), index.h(\"div\", { class: \"discord-embed-description\" }, index.h(\"slot\", null)), index.h(\"slot\", { name: \"fields\" }), this.image || this.video ? (index.h(\"div\", { class: clsx('discord-embed-media', { 'discord-embed-media-video': Boolean(this.video) }) }, this.renderMedia())) : null, this.thumbnail ? index.h(\"img\", { src: this.thumbnail, alt: \"\", class: \"discord-embed-thumbnail\" }) : '', (footerSlot || this.timestamp) && (index.h(\"div\", { class: \"discord-embed-footer\" }, footerSlot && this.footerImage ? index.h(\"img\", { src: this.footerImage, alt: \"\", class: \"discord-footer-image\" }) : '', index.h(Fragment, null, index.h(\"slot\", { name: \"footer\" }), footerSlot && this.timestamp ? index.h(\"span\", { class: \"discord-footer-separator\" }, \"\\u2022\") : '', this.timestamp ? index.h(Fragment, null, this.timestamp) : ''))))))));\r\n  }\r\n  renderMedia() {\r\n    if (this.video) {\r\n      return (index.h(\"video\", { controls: true, muted: true, preload: \"none\", poster: this.image, src: this.video, height: \"225\", width: \"400\", class: \"discord-embed-video\" }, index.h(\"img\", { src: this.image, alt: \"Discord embed media\", class: \"discord-embed-image\" })));\r\n    }\r\n    else if (this.image) {\r\n      return index.h(\"img\", { src: this.image, alt: \"Discord embed media\", class: \"discord-embed-image\" });\r\n    }\r\n    return null;\r\n  }\r\n  get el() { return index.getElement(this); }\r\n  static get watchers() { return {\r\n    \"timestamp\": [\"updateTimestamp\"]\r\n  }; }\r\n};\r\nDiscordEmbed.style = discordEmbedCss;\n\nconst discordEmbedFieldCss = \".discord-embed .discord-embed-field{font-size:0.875rem;line-height:1.125rem;min-width:0;font-weight:400;grid-column:1/13}.discord-embed .discord-embed-field .discord-field-title{color:#ffffff;font-weight:700;font-size:0.875rem;line-height:1.125rem;min-width:0;margin-bottom:2px}.discord-embed .discord-embed-field.discord-inline-field{flex-grow:1;flex-basis:auto;min-width:150px}.discord-light-theme .discord-embed .discord-embed-field .discord-field-title{color:#747f8d}.discord-embed-inline-field-3{grid-column:9/13 !important}.discord-embed-inline-field-2{grid-column:5/9 !important}.discord-embed-inline-field-1{grid-column:1/5 !important}\";\n\nconst DiscordEmbedField = class {\r\n  constructor(hostRef) {\r\n    index.registerInstance(this, hostRef);\r\n    /**\r\n     * Whether this field should be displayed inline or not.\r\n     */\r\n    this.inline = false;\r\n    /**\r\n     * The index of this inline field\r\n     * @remark This defines the position of this inline field. 1 is left, 2 is middle and 3 is right.\r\n     * @oneof [1, 2, 3]\r\n     * @default 1\r\n     */\r\n    this.inlineIndex = 1;\r\n    this.validInlineIndices = new Set([1, 2, 3]);\r\n  }\r\n  checkInlineIndex(value) {\r\n    if (!this.validInlineIndices.has(Number(value)))\r\n      throw new RangeError('DiscordEmbedField `inlineIndex` prop must be one of: 1, 2, or 3');\r\n  }\r\n  componentWillRender() {\r\n    this.checkInlineIndex(this.inlineIndex);\r\n  }\r\n  render() {\r\n    const parent = this.el.parentElement;\r\n    if (parent.tagName.toLowerCase() !== 'discord-embed-fields') {\r\n      throw new SyntaxError('All <discord-embed-field> components must be direct children of <discord-embed-fields>.');\r\n    }\r\n    return (index.h(index.Host, { class: clsx({\r\n        'discord-embed-inline-field': this.inline,\r\n        'discord-embed-inline-field-1': this.inline && this.inlineIndex === 1,\r\n        'discord-embed-inline-field-2': this.inline && this.inlineIndex === 2,\r\n        'discord-embed-inline-field-3': this.inline && this.inlineIndex === 3\r\n      }, 'discord-embed-field') }, index.h(\"div\", { class: \"discord-field-title\" }, this.fieldTitle), index.h(\"slot\", null)));\r\n  }\r\n  get el() { return index.getElement(this); }\r\n  static get watchers() { return {\r\n    \"inlineIndex\": [\"checkInlineIndex\"]\r\n  }; }\r\n};\r\nDiscordEmbedField.style = discordEmbedFieldCss;\n\nconst discordEmbedFieldsCss = \".discord-embed .discord-embed-fields{display:grid;grid-column:1/1;margin-top:8px;grid-gap:8px}\";\n\nconst DiscordEmbedFields = class {\r\n  constructor(hostRef) {\r\n    index.registerInstance(this, hostRef);\r\n  }\r\n  render() {\r\n    return (index.h(index.Host, { class: \"discord-embed-fields\" }, index.h(\"slot\", null)));\r\n  }\r\n};\r\nDiscordEmbedFields.style = discordEmbedFieldsCss;\n\nfunction GuildBadge(props) {\n  return (index.h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"16\", height: \"16\", viewBox: \"0 0 16 15.2\" }),\n    index.h(\"path\", { fill: \"currentColor\", \"fill-rule\": \"evenodd\", d: \"m16 7.6c0 .79-1.28 1.38-1.52 2.09s.44 2 0 2.59-1.84.35-2.46.8-.79 1.84-1.54 2.09-1.67-.8-2.47-.8-1.75 1-2.47.8-.92-1.64-1.54-2.09-2-.18-2.46-.8.23-1.84 0-2.59-1.54-1.3-1.54-2.09 1.28-1.38 1.52-2.09-.44-2 0-2.59 1.85-.35 2.48-.8.78-1.84 1.53-2.12 1.67.83 2.47.83 1.75-1 2.47-.8.91 1.64 1.53 2.09 2 .18 2.46.8-.23 1.84 0 2.59 1.54 1.3 1.54 2.09z\" })));\n}\n\nconst PartnerBadgeOverlay = () => (index.h(\"svg\", { \"aria-hidden\": \"false\", width: \"16\", height: \"16\", viewBox: \"0 0 16 16\" },\n  index.h(\"path\", { d: \"M10.5906 6.39993L9.19223 7.29993C8.99246 7.39993 8.89258 7.39993 8.69281 7.29993C8.59293 7.19993 8.39317 7.09993 8.29328 6.99993C7.89375 6.89993 7.5941 6.99993 7.29445 7.19993L6.79504 7.49993L4.29797 9.19993C3.69867 9.49993 2.99949 9.39993 2.69984 8.79993C2.30031 8.29993 2.50008 7.59993 2.99949 7.19993L5.99598 5.19993C6.79504 4.69993 7.79387 4.49993 8.69281 4.69993C9.49188 4.89993 10.0912 5.29993 10.5906 5.89993C10.7904 6.09993 10.6905 6.29993 10.5906 6.39993Z\", fill: \"currentColor\" }),\n  index.h(\"path\", { d: \"M13.4871 7.79985C13.4871 8.19985 13.2874 8.59985 12.9877 8.79985L9.89135 10.7999C9.29206 11.1999 8.69276 11.3999 7.99358 11.3999C7.69393 11.3999 7.49417 11.3999 7.19452 11.2999C6.39545 11.0999 5.79616 10.6999 5.29674 10.0999C5.19686 9.89985 5.29674 9.69985 5.39663 9.59985L6.79499 8.69985C6.89487 8.59985 7.09463 8.59985 7.19452 8.69985C7.39428 8.79985 7.59405 8.89985 7.69393 8.99985C8.09346 8.99985 8.39311 8.99985 8.69276 8.79985L9.39194 8.39985L11.3896 6.99985L11.6892 6.79985C12.1887 6.49985 12.9877 6.59985 13.2874 7.09985C13.4871 7.39985 13.4871 7.59985 13.4871 7.79985Z\", fill: \"currentColor\" })));\n\nconst VerifiedBadgeOverlay = () => (index.h(\"svg\", { \"aria-hidden\": \"false\", width: \"16\", height: \"16\", viewBox: \"0 0 16 15.2\" },\n  index.h(\"path\", { d: \"M7.4,11.17,4,8.62,5,7.26l2,1.53L10.64,4l1.36,1Z\", fill: \"currentColor\" })));\n\nconst discordInviteCss = \".discord-invite{background-color:#2f3136;border-radius:4px;padding:16px;width:432px}.discord-light-theme .discord-invite{background-color:#f2f3f5}.discord-invite .discord-invite-header{font-weight:700;font-size:12px;line-height:16px;margin-bottom:12px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;text-transform:uppercase;color:#b9bbbe}.discord-light-theme .discord-invite .discord-invite-header{color:#4f5660}.discord-invite .discord-invite-root{display:flex;flex-flow:row nowrap}.discord-invite .discord-invite-icon{background-color:#36393f;border-radius:15px;margin-right:16px;-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:50px;height:50px}.discord-light-theme .discord-invite .discord-invite-icon{background-color:#fff}.discord-invite .discord-invite-info{font-family:WhitneyMedium, Whitney, Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif;display:flex;flex:1 1 auto;flex-direction:column;flex-wrap:nowrap;align-items:stretch;justify-content:center}.discord-invite .discord-invite-title{white-space:nowrap;text-overflow:ellipsis;overflow:hidden;margin-bottom:2px;color:white;font-size:16px;line-height:20px;font-weight:700;display:flex;flex-direction:row}.discord-light-theme .discord-invite .discord-invite-title{color:#060607}.discord-invite .discord-invite-name{flex:1 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.discord-invite .discord-invite-counts{display:flex;align-items:center;font-size:14px;font-weight:600;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;color:#b9bbbe;line-height:16px}.discord-invite .discord-invite-status{display:block;margin-right:4px;width:8px;height:8px;border-radius:50%;background-color:#747f8d}.discord-invite .discord-invite-status-online{background-color:#3ba55d}.discord-invite .discord-invite-count{-webkit-box-flex:0;-ms-flex:0 1 auto;flex:0 1 auto;margin-right:8px;color:#b9bbbe;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.discord-invite .discord-invite-join{display:flex;justify-content:center;align-items:center;height:40px;padding:0 20px;align-self:center;margin-left:10px;-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;line-height:20px;border-radius:3px;font-size:14px;font-weight:600;color:white !important;background-color:#3ba55d;-webkit-transition:background-color 0.17s ease;transition:background-color 0.17s ease}.discord-invite .discord-invite-join:hover{background-color:#2d7d46;text-decoration:none}.discord-invite .discord-invite-badge{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;margin-right:8px;width:16px;height:16px;align-self:center;position:relative}.discord-invite .discord-invite-badge-verified{color:#3ba55d}.discord-invite .discord-invite-badge-partnered{color:#5865f2}.discord-invite .discord-invite-badge-container{position:absolute;top:-0.05px;left:0.05px;right:0;bottom:0;display:flex;align-items:center;justify-content:center;pointer-events:none;color:white}.discord-light-theme .discord-invite .discord-invite-counts,.discord-light-theme .discord-invite .discord-invite-count{color:#4f5660}\";\n\nconst DiscordInvite = class {\r\n  constructor(hostRef) {\r\n    index.registerInstance(this, hostRef);\r\n    /**\r\n     * The server icon to display for the invite.\r\n     */\r\n    this.icon = options.defaultDiscordAvatars.blue;\r\n    /**\r\n     * The server's name.\r\n     * @default 'Discord Server'\r\n     */\r\n    this.name = 'Discord Server';\r\n    /**\r\n     * The number of members online on the server.\r\n     * @default 0\r\n     */\r\n    this.online = 0;\r\n    /**\r\n     * The number of members on the server.\r\n     * @default 0\r\n     */\r\n    this.members = 0;\r\n    /**\r\n     * Whether the server is verified.\r\n     * Only works if `partnered` is `false` or `undefined`.\r\n     */\r\n    this.verified = false;\r\n    /**\r\n     * Whether the server is partnered.\r\n     * Only works if `verified` is `false` or `undefined`.\r\n     */\r\n    this.partnered = false;\r\n  }\r\n  render() {\r\n    return (index.h(\"div\", { class: \"discord-invite\" }, index.h(\"div\", { class: \"discord-invite-header\" }, \"You've been invited to join a server\"), index.h(\"div\", { class: \"discord-invite-root\" }, index.h(\"img\", { class: \"discord-invite-icon\", src: this.icon, alt: this.name }), index.h(\"div\", { class: \"discord-invite-info\" }, index.h(\"div\", { class: \"discord-invite-title\" }, ((this.verified && !this.partnered) || (!this.verified && this.partnered)) && (index.h(\"div\", { class: \"discord-invite-badge\" }, index.h(GuildBadge, { \"aria-label\": this.partnered ? 'Discord Partner' : 'Verified', class: `discord-invite-badge-${this.partnered ? 'partnered' : 'verified'}` }), index.h(\"div\", { class: \"discord-invite-badge-container\" }, this.partnered ? index.h(PartnerBadgeOverlay, null) : index.h(VerifiedBadgeOverlay, null)))), index.h(\"span\", { class: \"discord-invite-name\" }, this.name)), index.h(\"div\", { class: \"discord-invite-counts\" }, index.h(\"i\", { class: \"discord-invite-status discord-invite-status-online\" }), index.h(\"span\", { class: \"discord-invite-count\" }, this.online.toLocaleString(), \" Online\"), index.h(\"i\", { class: \"discord-invite-status\" }), index.h(\"span\", { class: \"discord-invite-count\" }, this.members.toLocaleString(), \" Members\"))), index.h(\"a\", { class: \"discord-invite-join\", href: this.url, target: \"_blank\", rel: \"noopener noreferrer\" }, \"Join\"))));\r\n  }\r\n  get el() { return index.getElement(this); }\r\n};\r\nDiscordInvite.style = discordInviteCss;\n\nvar removeHash = function removeHash(hex) {\n  return hex.charAt(0) === '#' ? hex.slice(1) : hex;\n};\n\nvar parseHex = function parseHex(nakedHex) {\n  var isShort = nakedHex.length === 3 || nakedHex.length === 4;\n  var twoDigitHexR = isShort ? \"\".concat(nakedHex.slice(0, 1)).concat(nakedHex.slice(0, 1)) : nakedHex.slice(0, 2);\n  var twoDigitHexG = isShort ? \"\".concat(nakedHex.slice(1, 2)).concat(nakedHex.slice(1, 2)) : nakedHex.slice(2, 4);\n  var twoDigitHexB = isShort ? \"\".concat(nakedHex.slice(2, 3)).concat(nakedHex.slice(2, 3)) : nakedHex.slice(4, 6);\n  var twoDigitHexA = (isShort ? \"\".concat(nakedHex.slice(3, 4)).concat(nakedHex.slice(3, 4)) : nakedHex.slice(6, 8)) || 'ff'; // const numericA = +((parseInt(a, 16) / 255).toFixed(2));\n\n  return {\n    r: twoDigitHexR,\n    g: twoDigitHexG,\n    b: twoDigitHexB,\n    a: twoDigitHexA\n  };\n};\n\nvar hexToDecimal = function hexToDecimal(hex) {\n  return parseInt(hex, 16);\n};\n\nvar hexesToDecimals = function hexesToDecimals(_ref) {\n  var r = _ref.r,\n      g = _ref.g,\n      b = _ref.b,\n      a = _ref.a;\n  return {\n    r: hexToDecimal(r),\n    g: hexToDecimal(g),\n    b: hexToDecimal(b),\n    a: +(hexToDecimal(a) / 255).toFixed(2)\n  };\n};\n\nvar isNumeric = function isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}; // eslint-disable-line no-restricted-globals, max-len\n\n\nvar formatRgb = function formatRgb(decimalObject, parameterA) {\n  var r = decimalObject.r,\n      g = decimalObject.g,\n      b = decimalObject.b,\n      parsedA = decimalObject.a;\n  var a = isNumeric(parameterA) ? parameterA : parsedA;\n  return \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(a, \")\");\n};\n/**\n * Turns an old-fashioned css hex color value into a rgb color value.\n *\n * If you specify an alpha value, you'll get a rgba() value instead.\n *\n * @param The hex value to convert. ('123456'. '#123456', ''123', '#123')\n * @param An alpha value to apply. (optional) ('0.5', '0.25')\n * @return An rgb or rgba value. ('rgb(11, 22, 33)'. 'rgba(11, 22, 33, 0.5)')\n */\n\n\nvar hexToRgba = function hexToRgba(hex, a) {\n  var hashlessHex = removeHash(hex);\n  var hexObject = parseHex(hashlessHex);\n  var decimalObject = hexesToDecimals(hexObject);\n  return formatRgb(decimalObject, a);\n};\n\nvar build = hexToRgba;\n\nfunction ChannelThread(props) {\n  return (index.h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"24\", height: \"24\", viewBox: \"0 0 24 24\" }),\n    index.h(\"path\", { fill: \"currentColor\", d: \"M5.43309 21C5.35842 21 5.30189 20.9325 5.31494 20.859L5.99991 17H2.14274C2.06819 17 2.01168 16.9327 2.02453 16.8593L2.33253 15.0993C2.34258 15.0419 2.39244 15 2.45074 15H6.34991L7.40991 9H3.55274C3.47819 9 3.42168 8.93274 3.43453 8.85931L3.74253 7.09931C3.75258 7.04189 3.80244 7 3.86074 7H7.75991L8.45234 3.09903C8.46251 3.04174 8.51231 3 8.57049 3H10.3267C10.4014 3 10.4579 3.06746 10.4449 3.14097L9.75991 7H15.7599L16.4523 3.09903C16.4625 3.04174 16.5123 3 16.5705 3H18.3267C18.4014 3 18.4579 3.06746 18.4449 3.14097L17.7599 7H21.6171C21.6916 7 21.7481 7.06725 21.7353 7.14069L21.4273 8.90069C21.4172 8.95811 21.3674 9 21.3091 9H17.4099L17.0495 11.04H15.05L15.4104 9H9.41035L8.35035 15H10.5599V17H7.99991L7.30749 20.901C7.29732 20.9583 7.24752 21 7.18934 21H5.43309Z\" }),\n    index.h(\"path\", { fill: \"currentColor\", d: \"M13.4399 12.96C12.9097 12.96 12.4799 13.3898 12.4799 13.92V20.2213C12.4799 20.7515 12.9097 21.1813 13.4399 21.1813H14.3999C14.5325 21.1813 14.6399 21.2887 14.6399 21.4213V23.4597C14.6399 23.6677 14.8865 23.7773 15.0408 23.6378L17.4858 21.4289C17.6622 21.2695 17.8916 21.1813 18.1294 21.1813H22.5599C23.0901 21.1813 23.5199 20.7515 23.5199 20.2213V13.92C23.5199 13.3898 23.0901 12.96 22.5599 12.96H13.4399Z\" })));\n}\n\nfunction LockedVoiceChannel(props) {\n  return (index.h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"24\", height: \"24\", viewBox: \"0 0 24 24\" }),\n    index.h(\"path\", { fill: \"currentColor\", d: \"M17 11V7C17 4.243 14.756 2 12 2C9.242 2 7 4.243 7 7V11C5.897 11 5 11.896 5 13V20C5 21.103 5.897 22 7 22H17C18.103 22 19 21.103 19 20V13C19 11.896 18.103 11 17 11ZM12 18C11.172 18 10.5 17.328 10.5 16.5C10.5 15.672 11.172 15 12 15C12.828 15 13.5 15.672 13.5 16.5C13.5 17.328 12.828 18 12 18ZM15 11H9V7C9 5.346 10.346 4 12 4C13.654 4 15 5.346 15 7V11Z\", \"aria-hidden\": \"true\" })));\n}\n\nfunction VoiceChannel(props) {\n  return (index.h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"24\", height: \"24\", viewBox: \"0 0 24 24\" }),\n    index.h(\"path\", { fill: \"currentColor\", \"fill-rule\": \"evenodd\", \"clip-rule\": \"evenodd\", d: \"M11.383 3.07904C11.009 2.92504 10.579 3.01004 10.293 3.29604L6 8.00204H3C2.45 8.00204 2 8.45304 2 9.00204V15.002C2 15.552 2.45 16.002 3 16.002H6L10.293 20.71C10.579 20.996 11.009 21.082 11.383 20.927C11.757 20.772 12 20.407 12 20.002V4.00204C12 3.59904 11.757 3.23204 11.383 3.07904ZM14 5.00195V7.00195C16.757 7.00195 19 9.24595 19 12.002C19 14.759 16.757 17.002 14 17.002V19.002C17.86 19.002 21 15.863 21 12.002C21 8.14295 17.86 5.00195 14 5.00195ZM14 9.00195C15.654 9.00195 17 10.349 17 12.002C17 13.657 15.654 15.002 14 15.002V13.002C14.551 13.002 15 12.553 15 12.002C15 11.451 14.551 11.002 14 11.002V9.00195Z\", \"aria-hidden\": \"true\" })));\n}\n\nfunction ChannelIcon(props) {\n  return (index.h(\"svg\", Object.assign({}, props, { width: \"24\", height: \"24\", viewBox: \"0 0 24 24\", xmlns: \"http://www.w3.org/2000/svg\" }),\n    index.h(\"path\", { fill: \"currentColor\", \"fill-rule\": \"evenodd\", \"clip-rule\": \"evenodd\", d: \"M5.88657 21C5.57547 21 5.3399 20.7189 5.39427 20.4126L6.00001 17H2.59511C2.28449 17 2.04905 16.7198 2.10259 16.4138L2.27759 15.4138C2.31946 15.1746 2.52722 15 2.77011 15H6.35001L7.41001 9H4.00511C3.69449 9 3.45905 8.71977 3.51259 8.41381L3.68759 7.41381C3.72946 7.17456 3.93722 7 4.18011 7H7.76001L8.39677 3.41262C8.43914 3.17391 8.64664 3 8.88907 3H9.87344C10.1845 3 10.4201 3.28107 10.3657 3.58738L9.76001 7H15.76L16.3968 3.41262C16.4391 3.17391 16.6466 3 16.8891 3H17.8734C18.1845 3 18.4201 3.28107 18.3657 3.58738L17.76 7H21.1649C21.4755 7 21.711 7.28023 21.6574 7.58619L21.4824 8.58619C21.4406 8.82544 21.2328 9 20.9899 9H17.41L16.35 15H19.7549C20.0655 15 20.301 15.2802 20.2474 15.5862L20.0724 16.5862C20.0306 16.8254 19.8228 17 19.5799 17H16L15.3632 20.5874C15.3209 20.8261 15.1134 21 14.8709 21H13.8866C13.5755 21 13.3399 20.7189 13.3943 20.4126L14 17H8.00001L7.36325 20.5874C7.32088 20.8261 7.11337 21 6.87094 21H5.88657ZM9.41045 9L8.35045 15H14.3504L15.4104 9H9.41045Z\" })));\n}\n\nconst discordMentionCss = \".discord-message .discord-mention{color:#e3e7f8;background-color:hsla(235, 85.6%, 64.7%, 0.3);font-weight:500;padding:0 2px;border-radius:3px;unicode-bidi:-moz-plaintext;unicode-bidi:plaintext;-webkit-transition:background-color 50ms ease-out, color 50ms ease-out;transition:background-color 50ms ease-out, color 50ms ease-out;cursor:pointer}.discord-message .discord-mention:hover{color:#fff;background-color:hsl(235, 85.6%, 64.7%)}.discord-message .discord-mention.discord-channel-mention{padding-left:1.2rem !important;position:relative}.discord-message .discord-mention.discord-voice-mention,.discord-message .discord-mention.discord-locked-mention,.discord-message .discord-mention.discord-thread-mention{padding-left:1.25rem !important;position:relative}.discord-light-theme .discord-message .discord-mention{color:#687dc6;background-color:hsla(235, 85.6%, 64.7%, 0.15)}.discord-light-theme .discord-message .discord-mention:hover{color:#ffffff;background-color:hsl(235, 85.6%, 64.7%)}.discord-message .discord-mention .discord-mention-icon{width:1rem;height:1rem;object-fit:contain;position:absolute;left:0.125rem;top:0.125rem}.discord-message.discord-highlight-mention{background-color:rgba(250, 166, 26, 0.1);border-radius:0 3px 3px 0;padding-right:5px;position:relative}.discord-light-theme .discord-message.discord-highlight-mention{background-color:rgba(250, 166, 26, 0.1)}.discord-message.discord-highlight-mention:hover{background-color:rgba(250, 166, 26, 0.08)}.discord-light-theme .discord-message.discord-highlight-mention:hover{background-color:rgba(250, 166, 26, 0.2)}.discord-message.discord-highlight-mention::before{background-color:rgb(250, 166, 26);content:' ';position:relative;display:block;top:0;left:-0.75rem;bottom:0;pointer-events:none;width:2px}\";\n\nconst DiscordMention = class {\r\n  constructor(hostRef) {\r\n    index.registerInstance(this, hostRef);\r\n    /**\r\n     * Whether this entire message block should be highlighted (to emulate the \"logged in user\" being pinged).\r\n     */\r\n    this.highlight = false;\r\n    /**\r\n     * The type of mention this should be. This will prepend the proper prefix character.\r\n     * Valid values: `user`, `channel`, `role`, `voice`, and `locked`.\r\n     */\r\n    this.type = 'user';\r\n  }\r\n  handleType(value) {\r\n    if (typeof value !== 'string') {\r\n      throw new TypeError('DiscordMention `type` prop must be a string.');\r\n    }\r\n    else if (!['user', 'channel', 'role', 'voice', 'locked', 'thread'].includes(value)) {\r\n      throw new RangeError(\"DiscordMention `type` prop must be one of: 'user', 'channel', 'role', 'voice', 'locked', 'thread' \");\r\n    }\r\n  }\r\n  componentWillRender() {\r\n    this.handleType(this.type);\r\n  }\r\n  componentDidLoad() {\r\n    if (this.color && this.type === 'role') {\r\n      this.el.addEventListener('mouseover', this.setHoverColor.bind(this));\r\n      this.el.addEventListener('mouseout', this.resetHoverColor.bind(this));\r\n    }\r\n  }\r\n  disconnectedCallback() {\r\n    if (this.color && this.type === 'role') {\r\n      this.el.removeEventListener('mouseover', this.setHoverColor.bind(this));\r\n      this.el.removeEventListener('mouseout', this.resetHoverColor.bind(this));\r\n    }\r\n  }\r\n  setHoverColor() {\r\n    this.el.style.backgroundColor = build(this.color, 0.3);\r\n  }\r\n  resetHoverColor() {\r\n    this.el.style.backgroundColor = build(this.color, 0.1);\r\n  }\r\n  render() {\r\n    const { color, type } = this;\r\n    const colorStyle = !color || type !== 'role' ? {} : { color, 'background-color': build(color, 0.1) };\r\n    let mentionPrepend = '';\r\n    switch (this.type) {\r\n      case 'channel':\r\n        mentionPrepend = index.h(ChannelIcon, { class: \"discord-mention-icon\" });\r\n        break;\r\n      case 'user':\r\n      case 'role':\r\n        mentionPrepend = '@';\r\n        break;\r\n      case 'voice':\r\n        mentionPrepend = index.h(VoiceChannel, { class: \"discord-mention-icon\" });\r\n        break;\r\n      case 'locked':\r\n        mentionPrepend = index.h(LockedVoiceChannel, { class: \"discord-mention-icon\" });\r\n        break;\r\n      case 'thread':\r\n        mentionPrepend = index.h(ChannelThread, { class: \"discord-mention-icon\" });\r\n        break;\r\n    }\r\n    return (index.h(index.Host, { style: colorStyle, class: `discord-mention discord-${type}-mention` }, mentionPrepend, index.h(\"slot\", null)));\r\n  }\r\n  get el() { return index.getElement(this); }\r\n  static get watchers() { return {\r\n    \"type\": [\"handleType\"]\r\n  }; }\r\n};\r\nDiscordMention.style = discordMentionCss;\n\nconst VerifiedTick = () => (index.h(\"svg\", { class: \"discord-application-tag-verified\", \"aria-label\": \"Verified Bot\", \"aria-hidden\": \"false\", width: \"16\", height: \"16\", viewBox: \"0 0 16 15.2\" },\n  index.h(\"path\", { d: \"M7.4,11.17,4,8.62,5,7.26l2,1.53L10.64,4l1.36,1Z\", fill: \"currentColor\" })));\n\nconst AuthorInfo = ({ author, bot, server, roleColor, verified, compact }) => (index.h(\"span\", { class: \"discord-author-info\" },\n  !compact && (index.h(\"span\", { class: \"discord-author-username\", style: { color: roleColor } }, author)),\n  index.h(Fragment, null,\n    bot && !server && (index.h(\"span\", { class: \"discord-application-tag\" },\n      verified && index.h(VerifiedTick, null),\n      \"Bot\")),\n    server && !bot && index.h(\"span\", { class: \"discord-application-tag\" }, \"Server\")),\n  compact && (index.h(\"span\", { class: \"discord-author-username\", style: { color: roleColor } }, author))));\n\nconst discordMessageCss = \".discord-message{color:#dcddde;display:flex;flex-direction:column;font-size:0.9em;font-family:Whitney, Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif;padding:0px 1em;position:relative;word-wrap:break-word;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;padding-right:0;min-height:1.375rem;padding-right:48px !important;margin-top:1.0625rem}.discord-message .discord-message-inner{display:flex;position:relative;-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto}.discord-message.discord-message-highlight{background-color:rgba(250, 166, 26, 0.05)}.discord-message.discord-message-highlight:hover{background-color:rgba(250, 166, 26, 0.08)}.discord-message.discord-message-highlight::before{background-color:#faa61a;content:'';position:absolute;display:block;top:0;left:0;bottom:0;pointer-events:none;width:2px}.discord-light-theme .discord-message{color:#2e3338;border-color:#eceeef}.discord-message a{color:#0096cf;font-weight:normal;text-decoration:none}.discord-message a:hover{text-decoration:underline}.discord-light-theme .discord-message a{color:#00b0f4}.discord-message a:hover{text-decoration:underline}.discord-message .discord-author-avatar{margin-right:16px;margin-top:5px;min-width:40px;z-index:1}.discord-message .discord-author-avatar img{width:40px;height:40px;border-radius:50%}.discord-message .discord-message-timestamp{color:#72767d;font-size:12px;margin-left:3px}.discord-light-theme .discord-message .discord-message-timestamp{color:#747f8d}.discord-message .discord-message-edited{color:#72767d;font-size:10px}.discord-light-theme .discord-message .discord-message-edited{color:#99aab5}.discord-message .discord-message-content{width:100%;line-height:160%;font-weight:normal;padding-top:2px}.discord-message .discord-message-body{font-size:1rem;font-weight:400;word-break:break-word;position:relative}.discord-message .discord-message-body pre{border:1px solid #202225;border-radius:4px}.discord-message .discord-message-body code{background:#2f3136;white-space:break-spaces}.discord-light-theme .discord-message .discord-message-timestamp,.discord-compact-mode .discord-message:hover .discord-message-timestamp,.discord-compact-mode.discord-light-theme .discord-message:hover .discord-message-timestamp{color:#99aab5}.discord-compact-mode.discord-light-theme .discord-message .discord-message-timestamp{color:#d1d9de}.discord-compact-mode .discord-message .discord-message-timestamp{display:inline-block;width:3.1rem;text-align:right;font-size:0.6875rem;line-height:1.375rem;margin-right:0.25rem;margin-left:0;text-indent:0}.discord-compact-mode .discord-message{margin-top:unset}.discord-compact-mode .discord-message .discord-message-body{line-height:1.375rem;padding-left:10px;text-indent:-6px}.discord-compact-mode .discord-message .discord-message-compact-indent{padding-left:10px}.discord-message:first-child{margin-top:0.5rem}.discord-message:last-child{margin-bottom:0.5rem;border-bottom-width:0}.discord-message .discord-message-markup{font-size:1rem;line-height:1.375rem;word-wrap:break-word;user-select:text;font-weight:400}.discord-compact-mode .discord-author-avatar{display:none}.discord-message:hover{background-color:rgba(4, 4, 5, 0.07)}.discord-light-theme .discord-message:hover{background-color:rgba(6, 6, 7, 0.02)}.discord-message.discord-message-has-thread:after{width:2rem;left:2.2rem;top:1.75rem;border-left:2px solid #4f545c;border-bottom:2px solid #4f545c;border-bottom-left-radius:8px;bottom:29px;content:'';position:absolute}.discord-light-theme .discord-message.discord-message-has-thread:after{border-color:#747f8d}.discord-message .discord-author-info{display:inline-flex;align-items:center;font-size:15px}.discord-message .discord-author-info .discord-author-username{color:#fff;font-size:1.1em;font-weight:500;letter-spacing:0.5px}.discord-light-theme .discord-message .discord-author-info .discord-author-username{color:#23262a}.discord-message .discord-author-info .discord-application-tag{background-color:#5865f2;color:#fff;font-size:0.65em;margin-left:5px;border-radius:3px;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-message .discord-author-info .discord-application-tag-verified{display:inline-block;width:0.9375rem;height:0.9375rem;margin-left:-0.25rem}.discord-compact-mode .discord-message .discord-author-info .discord-author-username{margin-left:8px;margin-right:4px}.discord-compact-mode .discord-message .discord-author-info .discord-application-tag{margin-left:0;margin-left:5px;margin-right:5px;padding-left:3px;padding-right:3px}\";\n\nconst DiscordMessage = class {\r\n  constructor(hostRef) {\r\n    index.registerInstance(this, hostRef);\r\n    /**\r\n     * The message author's username.\r\n     * @default 'User'\r\n     */\r\n    this.author = 'User';\r\n    /**\r\n     * Whether the message author is a bot or not.\r\n     * Only works if `server` is `false` or `undefined`.\r\n     */\r\n    this.bot = false;\r\n    /**\r\n     * Whether the message author is a server crosspost webhook or not.\r\n     * Only works if `bot` is `false` or `undefined`.\r\n     */\r\n    this.server = false;\r\n    /**\r\n     * Whether the bot is verified or not.\r\n     * Only works if `bot` is `true`\r\n     */\r\n    this.verified = false;\r\n    /**\r\n     * Whether the message has been edited or not.\r\n     */\r\n    this.edited = false;\r\n    /**\r\n     * Whether to highlight this message.\r\n     */\r\n    this.highlight = false;\r\n    /**\r\n     * The timestamp to use for the message date.\r\n     */\r\n    this.timestamp = new Date();\r\n    /**\r\n     * Whether to use 24-hour format for the timestamp.\r\n     */\r\n    this.twentyFour = false;\r\n  }\r\n  updateTimestamp(value) {\r\n    const parent = this.el.parentElement;\r\n    return handleTimestamp(value, parent.compactMode, this.twentyFour);\r\n  }\r\n  componentWillRender() {\r\n    const parent = this.el.parentElement;\r\n    this.timestamp = handleTimestamp(this.timestamp, parent.compactMode, this.twentyFour);\r\n  }\r\n  render() {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\r\n    const parent = this.el.parentElement;\r\n    if (parent.tagName.toLowerCase() !== 'discord-messages') {\r\n      throw new Error('All <discord-message> components must be direct children of <discord-messages>.');\r\n    }\r\n    const resolveAvatar = (avatar) => { var _a, _b; return (_b = (_a = options.avatars[avatar]) !== null && _a !== void 0 ? _a : avatar) !== null && _b !== void 0 ? _b : options.avatars.default; };\r\n    const defaultData = { author: this.author, bot: this.bot, verified: this.verified, server: this.server, roleColor: this.roleColor };\r\n    const profileData = (_a = Reflect.get(options.profiles, this.profile)) !== null && _a !== void 0 ? _a : {};\r\n    const profile = Object.assign(Object.assign(Object.assign({}, defaultData), profileData), { avatar: resolveAvatar((_b = profileData.avatar) !== null && _b !== void 0 ? _b : this.avatar) });\r\n    const highlightMention = \r\n    // @ts-expect-error ts doesn't understand this\r\n    Array.from(this.el.children).some((child) => {\r\n      return child.tagName.toLowerCase() === 'discord-mention' && child.highlight && ['user', 'role'].includes(child.type);\r\n    }) || this.highlight;\r\n    const hasThread = \r\n    // @ts-expect-error ts doesn't understand this\r\n    Array.from(this.el.children).some((child) => {\r\n      return child.tagName.toLowerCase() === 'discord-thread';\r\n    });\r\n    return (index.h(index.Host, { class: clsx('discord-message', { 'discord-highlight-mention': highlightMention, 'discord-message-has-thread': hasThread }) }, index.h(\"slot\", { name: \"reply\" }), index.h(\"div\", { class: \"discord-message-inner\" }, parent.compactMode && index.h(\"span\", { class: \"discord-message-timestamp\" }, this.timestamp), index.h(\"div\", { class: \"discord-author-avatar\" }, index.h(\"img\", { src: profile.avatar, alt: profile.author })), index.h(\"div\", { class: \"discord-message-content\" }, !parent.compactMode && (index.h(Fragment, null, index.h(AuthorInfo, { author: (_c = profile.author) !== null && _c !== void 0 ? _c : '', bot: (_d = profile.bot) !== null && _d !== void 0 ? _d : false, server: (_e = profile.server) !== null && _e !== void 0 ? _e : false, verified: (_f = profile.verified) !== null && _f !== void 0 ? _f : false, roleColor: (_g = profile.roleColor) !== null && _g !== void 0 ? _g : '', compact: parent.compactMode }), index.h(\"span\", { class: \"discord-message-timestamp\" }, this.timestamp))), index.h(\"div\", { class: \"discord-message-body\" }, parent.compactMode && (index.h(AuthorInfo, { author: (_h = profile.author) !== null && _h !== void 0 ? _h : '', bot: (_j = profile.bot) !== null && _j !== void 0 ? _j : false, server: (_k = profile.server) !== null && _k !== void 0 ? _k : false, verified: (_l = profile.verified) !== null && _l !== void 0 ? _l : false, roleColor: (_m = profile.roleColor) !== null && _m !== void 0 ? _m : '', compact: parent.compactMode })), index.h(\"span\", { class: \"discord-message-markup\" }, index.h(\"slot\", null)), this.edited ? index.h(\"span\", { class: \"discord-message-edited\" }, \"(edited)\") : ''), index.h(\"div\", { class: \"discord-message-compact-indent\" }, index.h(\"slot\", { name: \"embeds\" }), index.h(\"slot\", { name: \"attachments\" }), index.h(\"slot\", { name: \"components\" }), index.h(\"slot\", { name: \"reactions\" }), index.h(\"slot\", { name: \"thread\" }))))));\r\n  }\r\n  get el() { return index.getElement(this); }\r\n  static get watchers() { return {\r\n    \"timestamp\": [\"updateTimestamp\"]\r\n  }; }\r\n};\r\nDiscordMessage.style = discordMessageCss;\n\nconst discordMessagesCss = \"@import url('https://fonts.googleapis.com/css?family=Roboto:400,500,700');@font-face{font-family:Whitney;font-style:light;font-weight:300;src:url('https://cdn.skyra.pw/whitney-font/Light.woff') format('woff')}@font-face{font-family:Whitney;font-style:normal;font-weight:500;src:url('https://cdn.skyra.pw/whitney-font/Normal.woff') format('woff')}@font-face{font-family:Whitney;font-style:medium;font-weight:600;src:url('https://cdn.skyra.pw/whitney-font/Medium-Regular.woff') format('woff')}@font-face{font-family:WhitneyMedium;font-style:medium;font-weight:600;src:url('https://cdn.skyra.pw/whitney-font/Medium-Extra.woff') format('woff')}@font-face{font-family:Whitney;font-style:bold;font-weight:700;src:url('https://cdn.skyra.pw/whitney-font/Bold.woff') format('woff')}.discord-messages{color:#fff;background-color:#36393e;display:block;font-size:16px;font-family:Whitney, Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif;line-height:170%;border:1px solid rgba(255, 255, 255, 0.05)}.discord-messages.discord-light-theme{color:#747f8d;background-color:#fff;border-color:#dedede}.discord-messages.discord-no-background{background-color:unset}\";\n\nconst DiscordMessages = class {\r\n  constructor(hostRef) {\r\n    index.registerInstance(this, hostRef);\r\n  }\r\n  componentWillRender() {\r\n    if (this.lightTheme || (options.defaultTheme === 'light' && this.lightTheme)) {\r\n      this.lightTheme = true;\r\n    }\r\n    if (this.compactMode || (options.defaultMode === 'compact' && this.compactMode)) {\r\n      this.compactMode = true;\r\n    }\r\n    if (this.noBackground || (options.defaultBackground === 'none' && this.noBackground)) {\r\n      this.noBackground = true;\r\n    }\r\n  }\r\n  render() {\r\n    return (index.h(index.Host, { class: clsx({\r\n        'discord-light-theme': this.lightTheme,\r\n        'discord-compact-mode': this.compactMode,\r\n        'discord-no-background': this.noBackground\r\n      }, 'discord-messages') }, index.h(\"slot\", null)));\r\n  }\r\n};\r\nDiscordMessages.style = discordMessagesCss;\n\nconst discordReactionCss = \".discord-reaction{border-radius:0.5rem;cursor:pointer;flex-shrink:0;margin-right:0.25rem;margin-bottom:0.25rem;user-select:none;transition:none 0.1s ease;transition-property:background-color, border-color;background-color:#2f3136;border:1px solid transparent}.discord-light-theme .discord-reaction{background-color:#f2f3f5}.discord-reaction:hover{background-color:#36393f;border-color:#fff2}.discord-light-theme .discord-reaction:not(.discord-reaction-reacted):hover{background-color:white;border-color:#0003}.discord-reaction.discord-reaction-reacted{background-color:rgba(88, 101, 242, 0.15);border-color:#5865f2}.discord-light-theme .discord-reaction.discord-reaction-reacted{background-color:#e7e9fd}.discord-reaction .discord-reaction-inner{display:flex;align-items:center;padding:0.125rem 0.375rem}.discord-reaction img{width:1rem;height:1rem;margin:0.125rem 0;min-width:auto;min-height:auto;object-fit:contain;vertical-align:bottom}.discord-reaction .discord-reaction-count{font-size:0.875rem;font-weight:500;margin-left:0.375rem;text-align:center;color:#b9bbbe}.discord-light-theme .discord-reaction .discord-reaction-count{color:#4f5660}.discord-reaction.discord-reaction-reacted .discord-reaction-count{color:#dee0fc}.discord-light-theme .discord-reaction.discord-reaction-reacted .discord-reaction-count{color:#5865f2}\";\n\nconst DiscordReaction = class {\r\n  constructor(hostRef) {\r\n    index.registerInstance(this, hostRef);\r\n    /**\r\n     * The name of the emoji to use as alternative image text.\r\n     * @default ':emoji'\r\n     */\r\n    this.name = ':emoji:';\r\n    /**\r\n     * The number of people who reacted.\r\n     * @default 1\r\n     */\r\n    this.count = 1;\r\n    /**\r\n     * Whether the reaction should show as reacted by the user.\r\n     * @default false\r\n     */\r\n    this.reacted = false;\r\n    /**\r\n     * Whether the reaction should be reactive.\r\n     * @remark When the reaction is interactive left clicking it will add 1 to the counter.\r\n     * Whereas when holding the Shift key and left clicking it will decrease the counter.\r\n     * The counter cannot go below 1.\r\n     * @default false\r\n     */\r\n    this.interactive = false;\r\n  }\r\n  render() {\r\n    return (index.h(\"div\", { class: clsx('discord-reaction', { 'discord-reaction-reacted': this.reacted }), onClick: this.handleReactionClick.bind(this) }, index.h(\"div\", { class: \"discord-reaction-inner\" }, index.h(\"img\", { src: this.emoji, alt: this.name, draggable: false }), index.h(\"span\", { class: \"discord-reaction-count\" }, this.count))));\r\n  }\r\n  handleReactionClick(event) {\r\n    if (this.interactive) {\r\n      if (event.shiftKey) {\r\n        this.count--;\r\n      }\r\n      else {\r\n        this.count++;\r\n      }\r\n      if (this.count <= 0) {\r\n        this.count = 1;\r\n      }\r\n    }\r\n  }\r\n  get el() { return index.getElement(this); }\r\n};\r\nDiscordReaction.style = discordReactionCss;\n\nconst discordReactionsCss = \".discord-message .discord-reactions,.discord-system-message .discord-reactions{display:flex;-webkit-box-flex:1;-ms-flex:1 0 auto;flex:1 0 auto;align-items:center;flex-wrap:wrap}\";\n\nconst DiscordReactions = class {\r\n  constructor(hostRef) {\r\n    index.registerInstance(this, hostRef);\r\n  }\r\n  render() {\r\n    return (index.h(index.Host, { class: \"discord-reactions\" }, index.h(\"slot\", null)));\r\n  }\r\n};\r\nDiscordReactions.style = discordReactionsCss;\n\nfunction AttachmentReply(props) {\n  return (index.h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"64\", height: \"64\", viewBox: \"0 0 64 64\" }),\n    index.h(\"path\", { fill: \"currentColor\", d: \"M56 50.6667V13.3333C56 10.4 53.6 8 50.6667 8H13.3333C10.4 8 8 10.4 8 13.3333V50.6667C8 53.6 10.4 56 13.3333 56H50.6667C53.6 56 56 53.6 56 50.6667ZM22.6667 36L29.3333 44.0267L38.6667 32L50.6667 48H13.3333L22.6667 36Z\" })));\n}\n\nfunction CommandReply(props) {\n  return (index.h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"24\", height: \"24\", viewBox: \"0 0 24 24\" }),\n    index.h(\"path\", { fill: \"currentColor\", \"fill-rule\": \"evenodd\", \"clip-rule\": \"evenodd\", d: \"M5 3C3.89543 3 3 3.89543 3 5V19C3 20.1046 3.89543 21 5 21H19C20.1046 21 21 20.1046 21 19V5C21 3.89543 20.1046 3 19 3H5ZM16.8995 8.41419L15.4853 6.99998L7 15.4853L8.41421 16.8995L16.8995 8.41419Z\" })));\n}\n\nfunction ReplyIcon(props) {\n  return (index.h(\"svg\", Object.assign({}, props, { width: \"12\", height: \"8\", viewBox: \"0 0 12 8\" }),\n    index.h(\"path\", { d: \"M0.809739 3.59646L5.12565 0.468433C5.17446 0.431163 5.23323 0.408043 5.2951 0.401763C5.35698 0.395482 5.41943 0.406298 5.4752 0.432954C5.53096 0.45961 5.57776 0.50101 5.61013 0.552343C5.64251 0.603676 5.65914 0.662833 5.6581 0.722939V2.3707C10.3624 2.3707 11.2539 5.52482 11.3991 7.21174C11.4028 7.27916 11.3848 7.34603 11.3474 7.40312C11.3101 7.46021 11.2554 7.50471 11.1908 7.53049C11.1262 7.55626 11.0549 7.56204 10.9868 7.54703C10.9187 7.53201 10.857 7.49695 10.8104 7.44666C8.72224 5.08977 5.6581 5.63359 5.6581 5.63359V7.28135C5.65831 7.34051 5.64141 7.39856 5.60931 7.44894C5.5772 7.49932 5.53117 7.54004 5.4764 7.5665C5.42163 7.59296 5.3603 7.60411 5.29932 7.59869C5.23834 7.59328 5.18014 7.57151 5.13128 7.53585L0.809739 4.40892C0.744492 4.3616 0.691538 4.30026 0.655067 4.22975C0.618596 4.15925 0.599609 4.08151 0.599609 4.00269C0.599609 3.92386 0.618596 3.84612 0.655067 3.77562C0.691538 3.70511 0.744492 3.64377 0.809739 3.59646Z\", fill: \"currentColor\" })));\n}\n\nconst discordReplyCss = \".discord-replied-message{color:#b9bbbe;display:flex;font-size:0.875rem;font-family:Whitney, Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif;padding-top:2px;margin-left:56px;margin-bottom:4px;align-items:center;line-height:1.125rem;position:relative;white-space:pre;user-select:none}.discord-light-theme .discord-replied-message{color:#4f5660}.discord-compact-mode .discord-replied-message{margin-left:62px;margin-bottom:0}.discord-replied-message:before{content:'';display:block;position:absolute;top:50%;right:100%;bottom:0;left:-36px;margin-right:4px;margin-top:-1px;margin-left:-1px;margin-bottom:-2px;border-left:2px solid #4f545c;border-bottom:0 solid #4f545c;border-right:0 solid #4f545c;border-top:2px solid #4f545c;border-top-left-radius:6px}.discord-light-theme .discord-replied-message:before{border-color:#747f8d}.discord-replied-message .discord-replied-message-avatar,.discord-replied-message .discord-reply-badge{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:16px;height:16px;border-radius:50%;user-select:none;margin-right:0.25rem}.discord-replied-message .discord-reply-badge{display:flex;align-items:center;justify-content:center;color:#b9bbbe;background:#202225}.discord-light-theme .discord-replied-message .discord-reply-badge{color:#4f5660;background:#e3e5e8}.discord-replied-message .discord-application-tag{background-color:hsl(235, 85.6%, 64.7%);color:#fff;font-size:0.625rem;margin-right:0.25rem;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-replied-message .discord-application-tag .discord-application-tag-verified{width:0.9375rem;height:0.9375rem;margin-left:-0.1rem}.discord-replied-message .discord-replied-message-username{flex-shrink:0;font-size:inherit;line-height:inherit;margin-right:0.25rem;opacity:0.64}.discord-replied-message .discord-replied-message-content{color:inherit;font-size:inherit;line-height:inherit;white-space:pre;text-overflow:ellipsis;user-select:none;cursor:pointer}.discord-replied-message .discord-replied-message-content:hover{color:#fff}.discord-light-theme .discord-replied-message .discord-replied-message-content:hover{color:#000}.discord-replied-message .discord-replied-message-content .discord-message-edited{margin-left:0.25rem}.discord-replied-message .discord-replied-message-content-icon{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:20px;height:20px;margin-left:4px}.discord-message .discord-author-info{display:inline-flex;align-items:center;font-size:15px}.discord-message .discord-author-info .discord-author-username{color:#fff;font-size:1.1em;font-weight:500;letter-spacing:0.5px}.discord-light-theme .discord-message .discord-author-info .discord-author-username{color:#23262a}.discord-message .discord-author-info .discord-application-tag{background-color:#5865f2;color:#fff;font-size:0.65em;margin-left:5px;border-radius:3px;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-message .discord-author-info .discord-application-tag-verified{display:inline-block;width:0.9375rem;height:0.9375rem;margin-left:-0.25rem}.discord-compact-mode .discord-message .discord-author-info .discord-author-username{margin-left:8px;margin-right:4px}.discord-compact-mode .discord-message .discord-author-info .discord-application-tag{margin-left:0;margin-left:5px;margin-right:5px;padding-left:3px;padding-right:3px}\";\n\nconst DiscordReply = class {\r\n  constructor(hostRef) {\r\n    index.registerInstance(this, hostRef);\r\n    /**\r\n     * The message author's username.\r\n     * @default 'User'\r\n     */\r\n    this.author = 'User';\r\n    /**\r\n     * Whether the message author is a bot or not.\r\n     * Only works if `server` is `false` or `undefined`.\r\n     */\r\n    this.bot = false;\r\n    /**\r\n     * Whether the message author is a server crosspost webhook or not.\r\n     * Only works if `bot` is `false` or `undefined`.\r\n     */\r\n    this.server = false;\r\n    /**\r\n     * Whether the bot is verified or not.\r\n     * Only works if `bot` is `true`\r\n     */\r\n    this.verified = false;\r\n    /**\r\n     * Whether the message has been edited or not.\r\n     */\r\n    this.edited = false;\r\n    /**\r\n     * Whether the referenced message is from a response of a slash command.\r\n     */\r\n    this.command = false;\r\n    /**\r\n     * Whether the referenced message contains attachments.\r\n     */\r\n    this.attachment = false;\r\n    /**\r\n     * Whether this reply pings the original message sender, prepending an \"@\" on the author's username.\r\n     */\r\n    this.mentions = false;\r\n  }\r\n  render() {\r\n    var _a, _b, _c;\r\n    const parent = this.el.parentElement;\r\n    if (parent.tagName.toLowerCase() !== 'discord-message') {\r\n      throw new Error('All <discord-reply> components must be direct children of <discord-message>.');\r\n    }\r\n    const resolveAvatar = (avatar) => { var _a, _b; return (_b = (_a = options.avatars[avatar]) !== null && _a !== void 0 ? _a : avatar) !== null && _b !== void 0 ? _b : options.avatars.default; };\r\n    const defaultData = { author: this.author, bot: this.bot, verified: this.verified, server: this.server, roleColor: this.roleColor };\r\n    const profileData = (_a = Reflect.get(options.profiles, this.profile)) !== null && _a !== void 0 ? _a : {};\r\n    const profile = Object.assign(Object.assign(Object.assign({}, defaultData), profileData), { avatar: resolveAvatar((_b = profileData.avatar) !== null && _b !== void 0 ? _b : this.avatar) });\r\n    const messageParent = parent.parentElement;\r\n    return (index.h(index.Host, { class: \"discord-replied-message\" }, messageParent.compactMode ? (index.h(\"div\", { class: \"discord-reply-badge\" }, index.h(ReplyIcon, null))) : (index.h(\"img\", { class: \"discord-replied-message-avatar\", src: profile.avatar, alt: profile.author })), index.h(Fragment, null, profile.bot && !profile.server && (index.h(\"span\", { class: \"discord-application-tag\" }, profile.verified && index.h(VerifiedTick, null), \"Bot\")), profile.server && !profile.bot && index.h(\"span\", { class: \"discord-application-tag\" }, \"Server\")), index.h(\"span\", { class: \"discord-replied-message-username\", style: { color: (_c = profile.roleColor) !== null && _c !== void 0 ? _c : '' } }, this.mentions && '@', profile.author), index.h(\"div\", { class: \"discord-replied-message-content\" }, index.h(\"slot\", null), this.edited ? index.h(\"span\", { class: \"discord-message-edited\" }, \"(edited)\") : ''), this.command ? (index.h(CommandReply, { class: \"discord-replied-message-content-icon\" })) : (this.attachment && index.h(AttachmentReply, { class: \"discord-replied-message-content-icon\" }))));\r\n  }\r\n  get el() { return index.getElement(this); }\r\n};\r\nDiscordReply.style = discordReplyCss;\n\nfunction Boost(props) {\n  return (index.h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"24\", height: \"24\", viewBox: \"0 0 8 12\" }),\n    index.h(\"path\", { d: \"M4 0L0 4V8L4 12L8 8V4L4 0ZM7 7.59L4 10.59L1 7.59V4.41L4 1.41L7 4.41V7.59Z\", fill: \"currentColor\" }),\n    index.h(\"path\", { d: \"M2 4.83V7.17L4 9.17L6 7.17V4.83L4 2.83L2 4.83Z\", fill: \"currentColor\" })));\n}\n\nfunction DMCall(props) {\n  return (index.h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"18\", height: \"18\", viewBox: \"0 0 18 18\" }),\n    index.h(\"path\", { fill: \"#3ba55c\", \"fill-rule\": \"evenodd\", d: \"M17.7163041 15.36645368c-.0190957.02699568-1.9039523 2.6680735-2.9957762 2.63320406-3.0676659-.09785935-6.6733809-3.07188394-9.15694343-5.548738C3.08002193 9.9740657.09772497 6.3791404 0 3.3061316v-.024746C0 2.2060575 2.61386252.3152347 2.64082114.2972376c.7110335-.4971705 1.4917101-.3149497 1.80959713.1372281.19320342.2744561 2.19712724 3.2811005 2.42290565 3.6489167.09884826.1608492.14714912.3554431.14714912.5702838 0 .2744561-.07975258.5770327-.23701117.8751101-.1527655.2902036-.65262318 1.1664385-.89862055 1.594995.2673396.3768148.94804468 1.26429792 2.351016 2.66357424 1.39173858 1.39027775 2.28923588 2.07641807 2.67002628 2.34187563.4302146-.2452108 1.3086162-.74238132 1.5972981-.89423205.5447887-.28682915 1.0907006-.31944893 1.4568885-.08661115.3459689.2182151 3.3383754 2.21027167 3.6225641 2.41611376.2695862.19234426.4144887.5399137.4144887.91672846 0 .2969525-.089862.61190215-.2808189.88523346\" })));\n}\n\nfunction DMEdit(props) {\n  return (index.h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"18\", height: \"18\", viewBox: \"0 0 18 18\" }),\n    index.h(\"g\", { fill: \"none\", \"fill-rule\": \"evenodd\" },\n      index.h(\"path\", { fill: \"#99AAB5\", d: \"M0 14.25V18h3.75L14.81 6.94l-3.75-3.75L0 14.25zM17.71 4.04c.39-.39.39-1.02 0-1.41L15.37.29c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" }),\n      index.h(\"path\", { d: \"M0 0h18v18H0\" }))));\n}\n\nfunction DMMissedCall(props) {\n  return (index.h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"18\", height: \"18\", viewBox: \"0 0 18 18\" }),\n    index.h(\"g\", { fill: \"none\", \"fill-rule\": \"evenodd\" },\n      index.h(\"path\", { d: \"M0 0h18v18H0z\" }),\n      index.h(\"path\", { fill: \"#99AAB5\", d: \"M3.2765961.00034226C6.344262.0982016 9.949977 3.0722262 12.43353953 5.54908026c2.48356254 2.47685405 5.4658595 6.07177934 5.56358447 9.14478814 0 1.1000741-2.61386252 2.9908969-2.64082114 3.008894-.7110335.4971705-1.4917101.3149497-1.80959713-.1372281-.19320342-.2744561-2.19712724-3.2811005-2.42290565-3.6489167-.09884826-.1608492-.14714912-.3554431-.14714912-.5702838 0-.2744561.07975258-.5770327.23701117-.8751101.1527655-.2902036.65262318-1.1664385.89862055-1.594995-.2673396-.3768148-.94804468-1.26429792-2.351016-2.66357424C8.3695281 6.8223767 7.4720308 6.1362364 7.0912404 5.87077883c-.4302146.2452108-1.3086162.74238132-1.5972981.89423205-.5447887.28682915-1.0907006.31944893-1.4568885.08661115C3.6910849 6.63340693.6986784 4.64135036.4144897 4.43550827.1449035 4.243164.000001 3.89559457.000001 3.5187798c0-.29695252.089862-.61190217.2808189-.88523348.0190957-.02699568 1.9039523-2.6680735 2.9957762-2.63320406z\" }))));\n}\n\nfunction SystemAlert(props) {\n  return (index.h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"20\", height: \"20\", viewBox: \"0 0 20 20\" }),\n    index.h(\"path\", { d: \"M10 0C4.486 0 0 4.486 0 10C0 15.515 4.486 20 10 20C15.514 20 20 15.515 20 10C20 4.486 15.514 0 10 0ZM9 4H11V11H9V4ZM10 15.25C9.31 15.25 8.75 14.691 8.75 14C8.75 13.31 9.31 12.75 10 12.75C10.69 12.75 11.25 13.31 11.25 14C11.25 14.691 10.69 15.25 10 15.25Z\", \"fill-rule\": \"evenodd\", \"clip-rule\": \"evenodd\", fill: \"currentColor\" })));\n}\n\nfunction SystemError(props) {\n  return (index.h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"24\", height: \"24\", viewBox: \"0 0 24 24\" }),\n    index.h(\"path\", { xmlns: \"http://www.w3.org/2000/svg\", d: \"M18.4 4L12 10.4L5.6 4L4 5.6L10.4 12L4 18.4L5.6 20L12 13.6L18.4 20L20 18.4L13.6 12L20 5.6L18.4 4Z\", fill: \"#ed4245\" })));\n}\n\nfunction Thread(props) {\n  return (index.h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"24\", height: \"24\", viewBox: \"0 0 24 24\" }),\n    index.h(\"path\", { fill: \"currentColor\", d: \"M5.43309 21C5.35842 21 5.30189 20.9325 5.31494 20.859L5.99991 17H2.14274C2.06819 17 2.01168 16.9327 2.02453 16.8593L2.33253 15.0993C2.34258 15.0419 2.39244 15 2.45074 15H6.34991L7.40991 9H3.55274C3.47819 9 3.42168 8.93274 3.43453 8.85931L3.74253 7.09931C3.75258 7.04189 3.80244 7 3.86074 7H7.75991L8.45234 3.09903C8.46251 3.04174 8.51231 3 8.57049 3H10.3267C10.4014 3 10.4579 3.06746 10.4449 3.14097L9.75991 7H15.7599L16.4523 3.09903C16.4625 3.04174 16.5123 3 16.5705 3H18.3267C18.4014 3 18.4579 3.06746 18.4449 3.14097L17.7599 7H21.6171C21.6916 7 21.7481 7.06725 21.7353 7.14069L21.4273 8.90069C21.4172 8.95811 21.3674 9 21.3091 9H17.4099L17.0495 11.04H15.05L15.4104 9H9.41035L8.35035 15H10.5599V17H7.99991L7.30749 20.901C7.29732 20.9583 7.24752 21 7.18934 21H5.43309Z\" }),\n    index.h(\"path\", { fill: \"currentColor\", d: \"M13.4399 12.96C12.9097 12.96 12.4799 13.3898 12.4799 13.92V20.2213C12.4799 20.7515 12.9097 21.1813 13.4399 21.1813H14.3999C14.5325 21.1813 14.6399 21.2887 14.6399 21.4213V23.4597C14.6399 23.6677 14.8865 23.7773 15.0408 23.6378L17.4858 21.4289C17.6622 21.2695 17.8916 21.1813 18.1294 21.1813H22.5599C23.0901 21.1813 23.5199 20.7515 23.5199 20.2213V13.92C23.5199 13.3898 23.0901 12.96 22.5599 12.96H13.4399Z\" })));\n}\n\nfunction UserJoin(props) {\n  return (index.h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"18\", height: \"18\", viewBox: \"0 0 18 18\" }),\n    index.h(\"g\", { fill: \"none\", \"fill-rule\": \"evenodd\" },\n      index.h(\"path\", { d: \"M18 0H0v18h18z\" }),\n      index.h(\"path\", { fill: \"#3ba55c\", d: \"M0 8h14.2l-3.6-3.6L12 3l6 6-6 6-1.4-1.4 3.6-3.6H0\" }))));\n}\n\nfunction UserLeave(props) {\n  return (index.h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"18\", height: \"18\", viewBox: \"0 0 18 18\" }),\n    index.h(\"g\", { fill: \"none\", \"fill-rule\": \"evenodd\", stroke: \"none\", \"stroke-width\": \"1\" },\n      index.h(\"path\", { d: \"M18 0H0v18h18z\" }),\n      index.h(\"path\", { fill: \"#ed4245\", d: \"M3.8 8l3.6-3.6L6 3 0 9l6 6 1.4-1.4L3.8 10H18V8\" }))));\n}\n\nconst discordSystemMessageCss = \".discord-system-message{color:#8e9297;display:flex;font-weight:400;font-size:1rem;font-family:Whitney, Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif;padding:0px 1em;position:relative;word-wrap:break-word;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;padding-right:0;min-height:1.375rem;padding-right:48px !important;margin-top:1.0625rem}.discord-light-theme .discord-system-message{color:#2e3338;border-color:#eceeef}.discord-system-message.discord-channel-name-change{color:#fff}.discord-light-theme .discord-system-message.discord-channel-name-change{color:#060607}.discord-system-message.discord-boost-system-message svg{color:#ff73fa}.discord-system-message.discord-alert-system-message svg{color:#faa81a}.discord-system-message.discord-error-system-message svg{color:#faa81a}.discord-system-message:first-child{margin-top:0.5rem}.discord-system-message:last-child{margin-bottom:0.5rem;border-bottom-width:0}.discord-system-message .discord-message-icon{margin-right:16px;margin-top:5px;min-width:40px;display:flex;align-items:flex-start;justify-content:center}.discord-system-message .discord-message-icon svg{width:16px;height:16px}.discord-system-message .discord-message-timestamp{color:#72767d;font-size:12px;margin-left:3px}.discord-light-theme .discord-system-message .discord-message-timestamp{color:#747f8d}.discord-system-message .discord-message-system-edited{color:#72767d;font-size:10px}.discord-light-theme .discord-system-message .discord-message-edited{color:#99aab5}.discord-system-message .discord-message-content{width:100%;line-height:160%;font-weight:normal;padding-top:2px;display:flex;flex-direction:column}.discord-system-message .discord-message-content i{font-style:normal;cursor:pointer;color:white;font-weight:500}.discord-light-theme .discord-system-message .discord-message-content i{color:#060607}.discord-system-message .discord-message-content i:hover{text-decoration:underline}.discord-system-message:hover{background-color:rgba(4, 4, 5, 0.07)}.discord-light-theme .discord-system-message:hover{background-color:rgba(6, 6, 7, 0.02)}.discord-system-message.discord-system-message-has-thread:after{width:2rem;left:2.2rem;top:1.75rem;border-left:2px solid #4f545c;border-bottom:2px solid #4f545c;border-bottom-left-radius:8px;bottom:29px;content:'';position:absolute}.discord-light-theme .discord-system-message.discord-system-message-has-thread:after{border-color:#747f8d}.discord-message .discord-author-info{display:inline-flex;align-items:center;font-size:15px}.discord-message .discord-author-info .discord-author-username{color:#fff;font-size:1.1em;font-weight:500;letter-spacing:0.5px}.discord-light-theme .discord-message .discord-author-info .discord-author-username{color:#23262a}.discord-message .discord-author-info .discord-application-tag{background-color:#5865f2;color:#fff;font-size:0.65em;margin-left:5px;border-radius:3px;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-message .discord-author-info .discord-application-tag-verified{display:inline-block;width:0.9375rem;height:0.9375rem;margin-left:-0.25rem}.discord-compact-mode .discord-message .discord-author-info .discord-author-username{margin-left:8px;margin-right:4px}.discord-compact-mode .discord-message .discord-author-info .discord-application-tag{margin-left:0;margin-left:5px;margin-right:5px;padding-left:3px;padding-right:3px}\";\n\nconst DiscordSystemMessage = class {\r\n  constructor(hostRef) {\r\n    index.registerInstance(this, hostRef);\r\n    /**\r\n     * The timestamp to use for the message date.\r\n     */\r\n    this.timestamp = new Date();\r\n    /**\r\n     * The type of system message this is, this will change the icon shown.\r\n     * Valid values: `join`, `leave`, `call`, `missed-call`, `boost`, `edit`, `thread`, `alert`, and `error`.\r\n     */\r\n    this.type = 'join';\r\n    /**\r\n     * Whether this message is to show channel name changes, used to match Discord's style.\r\n     */\r\n    this.channelName = false;\r\n  }\r\n  handleType(value) {\r\n    if (typeof value !== 'string') {\r\n      throw new TypeError('DiscordSystemMessage `type` prop must be a string.');\r\n    }\r\n    else if (!['join', 'leave', 'call', 'missed-call', 'boost', 'edit', 'thread', 'alert', 'error'].includes(value)) {\r\n      throw new RangeError(\"DiscordSystemMessage `type` prop must be one of: 'join', 'leave', 'call', 'missed-call', 'boost', 'edit', 'thread' 'alert', 'error'\");\r\n    }\r\n  }\r\n  updateTimestamp(value) {\r\n    return handleTimestamp(value);\r\n  }\r\n  componentWillRender() {\r\n    this.timestamp = handleTimestamp(this.timestamp);\r\n  }\r\n  render() {\r\n    const parent = this.el.parentElement;\r\n    if (parent.tagName.toLowerCase() !== 'discord-messages') {\r\n      throw new Error('All <discord-system-message> components must be direct children of <discord-messages>.');\r\n    }\r\n    let icon = '';\r\n    switch (this.type) {\r\n      case 'join':\r\n        icon = index.h(UserJoin, null);\r\n        break;\r\n      case 'leave':\r\n        icon = index.h(UserLeave, null);\r\n        break;\r\n      case 'call':\r\n        icon = index.h(DMCall, null);\r\n        break;\r\n      case 'missed-call':\r\n        icon = index.h(DMMissedCall, null);\r\n        break;\r\n      case 'edit':\r\n        icon = index.h(DMEdit, null);\r\n        break;\r\n      case 'boost':\r\n        icon = index.h(Boost, null);\r\n        break;\r\n      case 'thread':\r\n        icon = index.h(Thread, null);\r\n        break;\r\n      case 'alert':\r\n        icon = index.h(SystemAlert, null);\r\n        break;\r\n      case 'error':\r\n        icon = index.h(SystemError, null);\r\n        break;\r\n    }\r\n    const hasThread = \r\n    // @ts-expect-error ts doesn't understand this\r\n    Array.from(this.el.children).some((child) => {\r\n      return child.tagName.toLowerCase() === 'discord-thread';\r\n    });\r\n    return (index.h(index.Host, { class: clsx('discord-system-message', `discord-${this.type}-system-message`, {\r\n        'discord-system-message-has-thread': hasThread,\r\n        'discord-channel-name-change': this.channelName\r\n      }) }, index.h(\"div\", { class: \"discord-message-icon\" }, icon), index.h(\"div\", { class: \"discord-message-content\" }, index.h(\"span\", null, index.h(\"slot\", null), index.h(\"span\", { class: \"discord-message-timestamp\" }, this.timestamp)), index.h(\"slot\", { name: \"reactions\" }), index.h(\"slot\", { name: \"thread\" }))));\r\n  }\r\n  get el() { return index.getElement(this); }\r\n  static get watchers() { return {\r\n    \"type\": [\"handleType\"],\r\n    \"timestamp\": [\"updateTimestamp\"]\r\n  }; }\r\n};\r\nDiscordSystemMessage.style = discordSystemMessageCss;\n\nconst discordTenorVideoCss = \".discord-tenor-video{color:#dcddde;display:flex;font-size:13px;line-height:150%;margin-bottom:8px;margin-top:8px}.discord-tenor-video .discord-tenor-video-wrapper{display:block;position:relative;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;overflow:hidden;border-radius:4px}.discord-tenor-video .discord-tenor-video-wrapper video{-webkit-box-align:center;-webkit-box-pack:center;align-items:center;border-radius:0;cursor:pointer;display:flex;height:100%;justify-content:center;max-height:100%;width:100%;left:0px;top:0px}\";\n\nconst DiscordTenorVideo = class {\r\n  constructor(hostRef) {\r\n    index.registerInstance(this, hostRef);\r\n  }\r\n  render() {\r\n    return (index.h(index.Host, { class: \"discord-tenor-video\" }, index.h(\"div\", { class: \"discord-tenor-video-wrapper\", style: { height: `${this.height}px`, width: `${this.width}px` } }, index.h(\"video\", { muted: true, preload: \"auto\", autoplay: true, loop: true, src: this.url, height: this.height, width: this.width }))));\r\n  }\r\n  get el() { return index.getElement(this); }\r\n};\r\nDiscordTenorVideo.style = discordTenorVideoCss;\n\nconst discordThreadCss = \".discord-thread{background-color:#2f3136;border-radius:4px;cursor:pointer;margin-top:8px;max-width:480px;min-width:0;padding:8px;display:inline-flex;width:fit-content;flex-direction:column}.discord-light-theme .discord-thread{background-color:#f2f3f5}.discord-thread .discord-thread-top{display:flex}.discord-thread .discord-thread-bottom{font-size:0.875rem;line-height:1.125rem;align-items:center;color:#b9bbbe;display:flex;margin-top:2px;white-space:nowrap}.discord-light-theme .discord-thread-bottom{color:#4f5660}.discord-thread .discord-thread-name{font-size:0.875rem;font-weight:600;line-height:1.125rem;color:white;margin-right:8px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.discord-light-theme .discord-thread-name{color:#060607}.discord-thread .discord-thread-cta{color:#00aff4;flex-shrink:0;font-size:0.875rem;font-weight:600;line-height:1.125rem}.discord-thread:hover .discord-thread-cta{text-decoration:underline}\";\n\nconst DiscordThread = class {\r\n  constructor(hostRef) {\r\n    index.registerInstance(this, hostRef);\r\n    /**\r\n     * The name of the thread.\r\n     */\r\n    this.name = 'Thread';\r\n    /**\r\n     * The the text within the call to action text. (i.e. 'See Thread' or 'x Messages')\r\n     */\r\n    this.cta = 'See Thread';\r\n  }\r\n  render() {\r\n    return (index.h(index.Host, { class: \"discord-thread\" }, index.h(\"div\", { class: \"discord-thread-top\" }, index.h(\"span\", { class: \"discord-thread-name\" }, this.name), index.h(\"span\", { class: \"discord-thread-cta\", \"aria-hidden\": \"true\" }, this.cta, \" \\u203A\")), index.h(\"span\", { class: \"discord-thread-bottom\" }, index.h(\"slot\", null))));\r\n  }\r\n  get el() { return index.getElement(this); }\r\n};\r\nDiscordThread.style = discordThreadCss;\n\nconst discordThreadMessageCss = \".discord-thread-message{height:18px;min-width:0;display:flex;align-items:center;font-size:0.875rem;line-height:1.125rem}.discord-thread-message .discord-thread-message-avatar{margin-right:8px;flex:0 0 auto;width:16px;height:16px;border-radius:50%;user-select:none}.discord-thread-message .discord-thread-message-username{flex-shrink:0;font-size:inherit;line-height:inherit;margin-right:0.25rem;opacity:0.64;color:white;display:inline;vertical-align:baseline;position:relative;overflow:hidden}.discord-light-theme .discord-thread-message .discord-thread-message-username{color:#060607}.discord-thread-message .discord-application-tag{background-color:#5865f2;color:#fff;font-size:0.65em;margin-right:5px;border-radius:3px;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-thread-message .discord-application-tag-verified{display:inline-block;width:0.9375rem;height:0.9375rem;margin-left:-0.25rem}.discord-thread-message .discord-thread-message-content{display:flex;align-items:baseline}.discord-thread-message .discord-message-edited{color:#72767d;font-size:10px;margin-left:5px}.discord-thread-message .discord-thread-message-timestamp{color:#72767d;flex-shrink:0;margin-left:8px;font-size:0.875rem;line-height:1.125rem}.discord-light-theme .discord-thread-message .discord-thread-message-timestamp,.discord-light-theme .discord-thread-message .discord-message-edited{color:#747f8d}\";\n\nconst DiscordThreadMessage = class {\r\n  constructor(hostRef) {\r\n    index.registerInstance(this, hostRef);\r\n    /**\r\n     * The message author's username.\r\n     * @default 'User'\r\n     */\r\n    this.author = 'User';\r\n    /**\r\n     * Whether the message author is a bot or not.\r\n     * Only works if `server` is `false` or `undefined`.\r\n     */\r\n    this.bot = false;\r\n    /**\r\n     * Whether the message author is a server crosspost webhook or not.\r\n     * Only works if `bot` is `false` or `undefined`.\r\n     */\r\n    this.server = false;\r\n    /**\r\n     * Whether the bot is verified or not.\r\n     * Only works if `bot` is `true`\r\n     */\r\n    this.verified = false;\r\n    /**\r\n     * Whether the message has been edited or not.\r\n     */\r\n    this.edited = false;\r\n    /**\r\n     * The relative timestamp of the message.\r\n     */\r\n    this.relativeTimestamp = '1m ago';\r\n  }\r\n  render() {\r\n    var _a, _b;\r\n    const resolveAvatar = (avatar) => { var _a, _b; return (_b = (_a = options.avatars[avatar]) !== null && _a !== void 0 ? _a : avatar) !== null && _b !== void 0 ? _b : options.avatars.default; };\r\n    const defaultData = { author: this.author, bot: this.bot, verified: this.verified, server: this.server, roleColor: this.roleColor };\r\n    const profileData = (_a = Reflect.get(options.profiles, this.profile)) !== null && _a !== void 0 ? _a : {};\r\n    const profile = Object.assign(Object.assign(Object.assign({}, defaultData), profileData), { avatar: resolveAvatar((_b = profileData.avatar) !== null && _b !== void 0 ? _b : this.avatar) });\r\n    return (index.h(index.Host, { class: \"discord-thread-message\" }, index.h(\"img\", { src: profile.avatar, class: \"discord-thread-message-avatar\", alt: profile.author }), index.h(Fragment, null, profile.bot && !profile.server && (index.h(\"span\", { class: \"discord-application-tag\" }, profile.verified && index.h(VerifiedTick, null), \"Bot\")), profile.server && !profile.bot && index.h(\"span\", { class: \"discord-application-tag\" }, \"Server\")), index.h(\"span\", { class: \"discord-thread-message-username\", style: { color: profile.roleColor } }, profile.author), index.h(\"div\", { class: \"discord-thread-message-content\" }, index.h(\"slot\", null), this.edited ? index.h(\"span\", { class: \"discord-message-edited\" }, \"(edited)\") : ''), index.h(\"span\", { class: \"discord-thread-message-timestamp\" }, this.relativeTimestamp)));\r\n  }\r\n  get el() { return index.getElement(this); }\r\n};\r\nDiscordThreadMessage.style = discordThreadMessageCss;\n\nexports.discord_action_row = DiscordActionRow;\nexports.discord_attachment = DiscordAttachment;\nexports.discord_attachments = DiscordAttachments;\nexports.discord_button = DiscordButton;\nexports.discord_command = DiscordCommand;\nexports.discord_embed = DiscordEmbed;\nexports.discord_embed_field = DiscordEmbedField;\nexports.discord_embed_fields = DiscordEmbedFields;\nexports.discord_invite = DiscordInvite;\nexports.discord_mention = DiscordMention;\nexports.discord_message = DiscordMessage;\nexports.discord_messages = DiscordMessages;\nexports.discord_reaction = DiscordReaction;\nexports.discord_reactions = DiscordReactions;\nexports.discord_reply = DiscordReply;\nexports.discord_system_message = DiscordSystemMessage;\nexports.discord_tenor_video = DiscordTenorVideo;\nexports.discord_thread = DiscordThread;\nexports.discord_thread_message = DiscordThreadMessage;\n"]},"metadata":{},"sourceType":"script"}