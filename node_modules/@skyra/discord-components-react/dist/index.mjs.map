{
  "version": 3,
  "sources": ["../src/react-component-lib/createComponent.tsx", "../src/react-component-lib/utils/index.tsx", "../src/react-component-lib/utils/case.ts", "../src/react-component-lib/utils/attachProps.ts", "../src/index.ts"],
  "sourcesContent": ["import React from 'react';\n\nimport {\n  attachProps,\n  createForwardRef,\n  dashToPascalCase,\n  defineCustomElement,\n  isCoveredByReact,\n  mergeRefs,\n} from './utils';\n\nexport interface HTMLStencilElement extends HTMLElement {\n  componentOnReady(): Promise<this>;\n}\n\ninterface StencilReactInternalProps<ElementType> extends React.HTMLAttributes<ElementType> {\n  forwardedRef: React.RefObject<ElementType>;\n  ref?: React.Ref<any>;\n}\n\nexport const createReactComponent = <\n  PropType,\n  ElementType extends HTMLStencilElement,\n  ContextStateType = {},\n  ExpandedPropsTypes = {}\n>(\n  tagName: string,\n  ReactComponentContext?: React.Context<ContextStateType>,\n  manipulatePropsFunction?: (\n    originalProps: StencilReactInternalProps<ElementType>,\n    propsToPass: any,\n  ) => ExpandedPropsTypes,\n  customElement?: any,\n) => {\n  defineCustomElement(tagName, customElement);\n\n  const displayName = dashToPascalCase(tagName);\n  const ReactComponent = class extends React.Component<StencilReactInternalProps<ElementType>> {\n    componentEl!: ElementType;\n\n    setComponentElRef = (element: ElementType) => {\n      this.componentEl = element;\n    };\n\n    constructor(props: StencilReactInternalProps<ElementType>) {\n      super(props);\n    }\n\n    componentDidMount() {\n      this.componentDidUpdate(this.props);\n    }\n\n    componentDidUpdate(prevProps: StencilReactInternalProps<ElementType>) {\n      attachProps(this.componentEl, this.props, prevProps);\n    }\n\n    render() {\n      const { children, forwardedRef, style, className, ref, ...cProps } = this.props;\n\n      let propsToPass = Object.keys(cProps).reduce((acc, name) => {\n        if (name.indexOf('on') === 0 && name[2] === name[2].toUpperCase()) {\n          const eventName = name.substring(2).toLowerCase();\n          if (typeof document !== 'undefined' && isCoveredByReact(eventName)) {\n            (acc as any)[name] = (cProps as any)[name];\n          }\n        } else {\n          (acc as any)[name] = (cProps as any)[name];\n        }\n        return acc;\n      }, {});\n\n      if (manipulatePropsFunction) {\n        propsToPass = manipulatePropsFunction(this.props, propsToPass);\n      }\n\n      const newProps: Omit<StencilReactInternalProps<ElementType>, 'forwardedRef'> = {\n        ...propsToPass,\n        ref: mergeRefs(forwardedRef, this.setComponentElRef),\n        style,\n      };\n\n      return React.createElement(tagName, newProps, children);\n    }\n\n    static get displayName() {\n      return displayName;\n    }\n  };\n\n  // If context was passed to createReactComponent then conditionally add it to the Component Class\n  if (ReactComponentContext) {\n    ReactComponent.contextType = ReactComponentContext;\n  }\n\n  return createForwardRef<PropType, ElementType>(ReactComponent, displayName);\n};\n", "import React from 'react';\n\nimport type { StyleReactProps } from '../interfaces';\n\nexport type StencilReactExternalProps<PropType, ElementType> = PropType &\n  Omit<React.HTMLAttributes<ElementType>, 'style'> &\n  StyleReactProps;\n\n// This will be replaced with React.ForwardedRef when react-output-target is upgraded to React v17\nexport type StencilReactForwardedRef<T> = ((instance: T | null) => void) | React.MutableRefObject<T | null> | null;\n\nexport const setRef = (ref: StencilReactForwardedRef<any> | React.Ref<any> | undefined, value: any) => {\n  if (typeof ref === 'function') {\n    ref(value)\n  } else if (ref != null) {\n    // Cast as a MutableRef so we can assign current\n    (ref as React.MutableRefObject<any>).current = value\n  }\n};\n\nexport const mergeRefs = (\n  ...refs: (StencilReactForwardedRef<any> | React.Ref<any> | undefined)[]\n): React.RefCallback<any> => {\n  return (value: any) => {\n    refs.forEach(ref => {\n      setRef(ref, value)\n    })\n  }\n};\n\nexport const createForwardRef = <PropType, ElementType>(\n  ReactComponent: any,\n  displayName: string,\n) => {\n  const forwardRef = (\n    props: StencilReactExternalProps<PropType, ElementType>,\n    ref: StencilReactForwardedRef<ElementType>,\n  ) => {\n    return <ReactComponent {...props} forwardedRef={ref} />;\n  };\n  forwardRef.displayName = displayName;\n\n  return React.forwardRef(forwardRef);\n};\n\nexport const defineCustomElement = (tagName: string, customElement: any) => {\n  if (\n    customElement !== undefined &&\n    typeof customElements !== 'undefined' &&\n    !customElements.get(tagName)\n  ) {\n    customElements.define(tagName, customElement);\n  }\n}\n\nexport * from './attachProps';\nexport * from './case';\n", "export const dashToPascalCase = (str: string) =>\n  str\n    .toLowerCase()\n    .split('-')\n    .map((segment) => segment.charAt(0).toUpperCase() + segment.slice(1))\n    .join('');\nexport const camelToDashCase = (str: string) =>\n  str.replace(/([A-Z])/g, (m: string) => `-${m[0].toLowerCase()}`);\n", "import { camelToDashCase } from './case';\n\nexport const attachProps = (node: HTMLElement, newProps: any, oldProps: any = {}) => {\n  // some test frameworks don't render DOM elements, so we test here to make sure we are dealing with DOM first\n  if (node instanceof Element) {\n    // add any classes in className to the class list\n    const className = getClassName(node.classList, newProps, oldProps);\n    if (className !== '') {\n      node.className = className;\n    }\n\n    Object.keys(newProps).forEach((name) => {\n      if (\n        name === 'children' ||\n        name === 'style' ||\n        name === 'ref' ||\n        name === 'class' ||\n        name === 'className' ||\n        name === 'forwardedRef'\n      ) {\n        return;\n      }\n      if (name.indexOf('on') === 0 && name[2] === name[2].toUpperCase()) {\n        const eventName = name.substring(2);\n        const eventNameLc = eventName[0].toLowerCase() + eventName.substring(1);\n\n        if (!isCoveredByReact(eventNameLc)) {\n          syncEvent(node, eventNameLc, newProps[name]);\n        }\n      } else {\n        (node as any)[name] = newProps[name];\n        const propType = typeof newProps[name];\n        if (propType === 'string') {\n          node.setAttribute(camelToDashCase(name), newProps[name]);\n        }\n      }\n    });\n  }\n};\n\nexport const getClassName = (classList: DOMTokenList, newProps: any, oldProps: any) => {\n  const newClassProp: string = newProps.className || newProps.class;\n  const oldClassProp: string = oldProps.className || oldProps.class;\n  // map the classes to Maps for performance\n  const currentClasses = arrayToMap(classList);\n  const incomingPropClasses = arrayToMap(newClassProp ? newClassProp.split(' ') : []);\n  const oldPropClasses = arrayToMap(oldClassProp ? oldClassProp.split(' ') : []);\n  const finalClassNames: string[] = [];\n  // loop through each of the current classes on the component\n  // to see if it should be a part of the classNames added\n  currentClasses.forEach((currentClass) => {\n    if (incomingPropClasses.has(currentClass)) {\n      // add it as its already included in classnames coming in from newProps\n      finalClassNames.push(currentClass);\n      incomingPropClasses.delete(currentClass);\n    } else if (!oldPropClasses.has(currentClass)) {\n      // add it as it has NOT been removed by user\n      finalClassNames.push(currentClass);\n    }\n  });\n  incomingPropClasses.forEach((s) => finalClassNames.push(s));\n  return finalClassNames.join(' ');\n};\n\n/**\n * Checks if an event is supported in the current execution environment.\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nexport const isCoveredByReact = (eventNameSuffix: string) => {\n  if (typeof document === 'undefined') {\n    return true;\n  } else {\n    const eventName = 'on' + eventNameSuffix;\n    let isSupported = eventName in document;\n\n    if (!isSupported) {\n      const element = document.createElement('div');\n      element.setAttribute(eventName, 'return;');\n      isSupported = typeof (element as any)[eventName] === 'function';\n    }\n\n    return isSupported;\n  }\n};\n\nexport const syncEvent = (\n  node: Element & { __events?: { [key: string]: ((e: Event) => any) | undefined } },\n  eventName: string,\n  newEventHandler?: (e: Event) => any\n) => {\n  const eventStore = node.__events || (node.__events = {});\n  const oldEventHandler = eventStore[eventName];\n\n  // Remove old listener so they don't double up.\n  if (oldEventHandler) {\n    node.removeEventListener(eventName, oldEventHandler);\n  }\n\n  // Bind new listener.\n  node.addEventListener(\n    eventName,\n    (eventStore[eventName] = function handler(e: Event) {\n      if (newEventHandler) {\n        newEventHandler.call(this, e);\n      }\n    })\n  );\n};\n\nconst arrayToMap = (arr: string[] | DOMTokenList) => {\n  const map = new Map<string, string>();\n  (arr as string[]).forEach((s: string) => map.set(s, s));\n  return map;\n};\n", "/* eslint-disable */\n/* tslint:disable */\n/* auto-generated react proxies */\nimport { createReactComponent } from './react-component-lib';\n\nimport type { JSX } from '@skyra/discord-components-core';\n\nimport { defineCustomElements } from '@skyra/discord-components-core/loader';\n\ndefineCustomElements();\nexport const DiscordActionRow = /*@__PURE__*/createReactComponent<JSX.DiscordActionRow, HTMLDiscordActionRowElement>('discord-action-row');\nexport const DiscordAttachment = /*@__PURE__*/createReactComponent<JSX.DiscordAttachment, HTMLDiscordAttachmentElement>('discord-attachment');\nexport const DiscordAttachments = /*@__PURE__*/createReactComponent<JSX.DiscordAttachments, HTMLDiscordAttachmentsElement>('discord-attachments');\nexport const DiscordButton = /*@__PURE__*/createReactComponent<JSX.DiscordButton, HTMLDiscordButtonElement>('discord-button');\nexport const DiscordCommand = /*@__PURE__*/createReactComponent<JSX.DiscordCommand, HTMLDiscordCommandElement>('discord-command');\nexport const DiscordEmbed = /*@__PURE__*/createReactComponent<JSX.DiscordEmbed, HTMLDiscordEmbedElement>('discord-embed');\nexport const DiscordEmbedField = /*@__PURE__*/createReactComponent<JSX.DiscordEmbedField, HTMLDiscordEmbedFieldElement>('discord-embed-field');\nexport const DiscordEmbedFields = /*@__PURE__*/createReactComponent<JSX.DiscordEmbedFields, HTMLDiscordEmbedFieldsElement>('discord-embed-fields');\nexport const DiscordInvite = /*@__PURE__*/createReactComponent<JSX.DiscordInvite, HTMLDiscordInviteElement>('discord-invite');\nexport const DiscordMention = /*@__PURE__*/createReactComponent<JSX.DiscordMention, HTMLDiscordMentionElement>('discord-mention');\nexport const DiscordMessage = /*@__PURE__*/createReactComponent<JSX.DiscordMessage, HTMLDiscordMessageElement>('discord-message');\nexport const DiscordMessages = /*@__PURE__*/createReactComponent<JSX.DiscordMessages, HTMLDiscordMessagesElement>('discord-messages');\nexport const DiscordReaction = /*@__PURE__*/createReactComponent<JSX.DiscordReaction, HTMLDiscordReactionElement>('discord-reaction');\nexport const DiscordReactions = /*@__PURE__*/createReactComponent<JSX.DiscordReactions, HTMLDiscordReactionsElement>('discord-reactions');\nexport const DiscordReply = /*@__PURE__*/createReactComponent<JSX.DiscordReply, HTMLDiscordReplyElement>('discord-reply');\nexport const DiscordSystemMessage = /*@__PURE__*/createReactComponent<JSX.DiscordSystemMessage, HTMLDiscordSystemMessageElement>('discord-system-message');\nexport const DiscordTenorVideo = /*@__PURE__*/createReactComponent<JSX.DiscordTenorVideo, HTMLDiscordTenorVideoElement>('discord-tenor-video');\nexport const DiscordThread = /*@__PURE__*/createReactComponent<JSX.DiscordThread, HTMLDiscordThreadElement>('discord-thread');\nexport const DiscordThreadMessage = /*@__PURE__*/createReactComponent<JSX.DiscordThreadMessage, HTMLDiscordThreadMessageElement>('discord-thread-message');\n"],
  "mappings": "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",
  "names": []
}
